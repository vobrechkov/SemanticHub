openapi: 3.0.4
info:
  title: Participant APIs v29.0 | REST
  description: 'Use these APIs to embed WealthCare Portal (WCP) and Mobile (WCM) functionality. You can use them to build or expand your own member portal, mobile app or IVR.'
  contact:
    name: Alegeus
    url: https://www.alegeus.com/contact-us
    email: support@alegeus.com
  license:
    name: See Terms of Service
    url: https://www.alegeus.com
  version: '29.0'
servers:
  - url: https://api.wealthcare.com/participant
paths:
  /healthz:
    get:
      tags:
        - HealthCheck
      summary: Health Check
      description: 'Returns the health status of the API, indicating whether it is operational and ready to handle requests.'
      operationId: HealthCheck
      responses:
        '200':
          description: 'Successful response indicating the API is healthy, along with detailed health check results.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResultList'
        '500':
          description: 'Indicates a server error occurred, which may prevent the API from functioning properly.'
          content:
            application/json:
              schema:
                type: string
  '/challenge/{user}':
    post:
      tags:
        - Challenge
      summary: Get security challenge questions (XML format)
      description: 'Retrieve a list of security challenge questions associated with a specific user, which can be used for authentication purposes.'
      operationId: Challenge_Challenge
      responses:
        '200':
          description: Successfully retrieved the security challenge questions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeUserPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChallengeUserPost200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/userPath'
  '/challenge/questions/{user}':
    get:
      tags:
        - Challenge
      summary: Get security challenge questions
      description: 'Retrieve a list of security challenge questions associated with a specific user, identified by their username. This endpoint is typically used during authentication processes to verify user identity.'
      operationId: Challenge_GetQuestions
      parameters:
        - name: handshakeToken
          in: query
          description: A token used to establish a secure connection for the request. This token is required to authenticate the request and ensure that it is coming from a valid source.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the security challenge questions for the specified user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-QuestionArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-QuestionArray'
    parameters:
      - $ref: '#/components/parameters/userPath'
  '/challenge/questions/answers/{user}':
    post:
      tags:
        - Challenge
      summary: Submit Security challenge answers
      description: 'Submits the answers to security challenge questions for a specified user, enabling the user to verify their identity.'
      operationId: Challenge_SubmitAnswers
      requestBody:
        description: A collection of security question answers provided by the user to authenticate their identity.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-UserQuestionAnswerArray'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-UserQuestionAnswerArray'
      responses:
        '200':
          description: 'Successfully processed the security challenge answers, returning a site key for further actions.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.SiteKey'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.SiteKey'
    parameters:
      - $ref: '#/components/parameters/userPath'
  '/devenirsso/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - DevenirSSO
      summary: Get Devenir SSO URL
      description: 'Retrieve the Devenir Single Sign-On (SSO) URL for a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This endpoint is typically used to facilitate secure access to the Devenir platform for participants.'
      operationId: DevenirSSO_GetSSOUrl
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'The request body must contain the necessary information to generate the SSO URL, including the trust account number and its encryption status.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DevenirSSORequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DevenirSSORequest'
      responses:
        '200':
          description: Successfully retrieved the SSO URL for the specified participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevenirssoTpaIdEmployerIdParticipantIdPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DevenirssoTpaIdEmployerIdParticipantIdPost200ApplicationXmlResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /handshake:
    post:
      tags:
        - HandShake
      summary: Get handshake token
      description: Initiates a handshake process to obtain a secure token for subsequent API requests. This token is essential for authenticating and authorizing further interactions with the API.
      operationId: HandShake_HandShake
      responses:
        '200':
          description: Successfully retrieved the handshake token. The response contains a token that must be included in subsequent requests to authenticate the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.IO.Stream'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.IO.Stream'
  /handshake/bootstrap:
    post:
      tags:
        - HandShake
      summary: Get client information from handshake and settings
      description: This endpoint retrieves client information and settings necessary for establishing a handshake with the WealthCare system. It is typically used during the initial setup or configuration of client applications.
      operationId: HandShake_ClientInfo
      responses:
        '200':
          description: Successfully retrieved client information and settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Security.ClientInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Security.ClientInfo'
  '/services/datapartner/datapartnerbankaccount/{dataPartnerId}':
    get:
      tags:
        - DataPartner
      summary: Get Data Partner GL Accounts and Associated Tran Code List.
      description: Retrieve the general ledger (GL) accounts and their associated transaction codes for a specific data partner identified by their unique Data Partner ID.
      operationId: DataPartner_GetDataPartnerBankAccounts
      responses:
        '200':
          description: Successfully retrieved the data partner's GL accounts and transaction codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-DataPartner-DataPartnerBankA'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-DataPartner-DataPartnerBankA'
    parameters:
      - $ref: '#/components/parameters/dataPartnerIdPath'
  '/services/datapartner/datapartnerbankaccount/{dataPartnerId}/{dataPartnerBankAccountKey}':
    get:
      tags:
        - DataPartner
      summary: Get Data Partner GL Account and Associated Tran Code.
      description: 'Retrieve the General Ledger (GL) account details and associated transaction code for a specific data partner bank account, identified by its unique keys.'
      operationId: DataPartner_GetDataPartnerBankAccount
      responses:
        '200':
          description: Successfully retrieved the data partner bank account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
    parameters:
      - $ref: '#/components/parameters/dataPartnerIdPath'
      - name: dataPartnerBankAccountKey
        in: path
        description: Data Partner Bank Account Key
        required: true
        schema:
          type: integer
          format: int32
  /services/datapartner/datapartnerbankaccount:
    put:
      tags:
        - DataPartner
      summary: Update DataPartner GL Bank Account Details.
      description: 'Update the GL bank account details for a specific DataPartner, allowing for modifications to account information as needed.'
      operationId: DataPartner_UpdateDataPartnerBankAccount
      requestBody:
        description: 'Data Partner Bank Account Details, which includes all relevant information for the bank account associated with the DataPartner.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
      responses:
        '200':
          description: Successfully updated the bank account details. The response contains the updated bank account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
    post:
      tags:
        - DataPartner
      summary: Add DataPartner GL Bank Account.
      description: This endpoint allows you to add a General Ledger (GL) bank account for a specific Data Partner. It is typically used when establishing a new bank account for financial transactions related to the Data Partner.
      operationId: DataPartner_InsertDataPartnerBankAccount
      requestBody:
        description: Data Partner Bank Account Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
      responses:
        '200':
          description: Successfully added the Data Partner bank account. The response contains the details of the newly created bank account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
  '/services/datapartner/customText/{dataPartnerId}/{resourceKey}':
    get:
      tags:
        - DataPartner
      summary: Get a specific item in Data Partner Custom Text collection
      description: Retrieve a specific item from the Data Partner Custom Text collection using the provided Data Partner ID and resource key. This operation is useful for fetching custom text configurations that may vary based on the data partner's requirements.
      operationId: DataPartner_GetCustomText
      parameters:
        - name: productId
          in: query
          description: 'The product ID for placeholder replacements. If this parameter is omitted, the placeholders in the text are returned as-is; otherwise, they are replaced with corresponding values indexed by the provided product ID.'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDatapartnerCustomTextDataPartnerIdResourceKeyGet200ApplicationJsonRe'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDatapartnerCustomTextDataPartnerIdResourceKeyGet200ApplicationXmlRes'
    post:
      tags:
        - DataPartner
      summary: Set a specific item in Data Partner Custom Text collection
      description: 'Update a specific item in the Data Partner Custom Text collection identified by the resource key. This operation is typically used to modify text entries associated with a data partner, ensuring that the latest information is stored.'
      operationId: DataPartner_SetDataPartnerCustomText
      requestBody:
        description: 'The item text in the Data Partner Custom Text collection, which should conform to the specified schema. This data is used to update or create a text entry for the specified data partner.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomText'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomText'
      responses:
        '204':
          description: 'No Content - The request was successful, and the item was updated without returning any content.'
    parameters:
      - $ref: '#/components/parameters/dataPartnerIdPath'
      - name: resourceKey
        in: path
        description: Resource key of the item in the collection
        required: true
        schema:
          type: integer
          format: int32
  '/services/datapartner/customText/{dataPartnerId}':
    get:
      tags:
        - DataPartner
      summary: Get the entire Data Partner Custom Text collection
      description: 'Retrieve the complete collection of custom text associated with a specific Data Partner, identified by `dataPartnerId`. This endpoint is useful for fetching text content that can be dynamically replaced based on the context of the product.'
      operationId: DataPartner_GetDataPartnerCustomTexts
      parameters:
        - name: productId
          in: query
          description: 'The productId for placeholder replacements. If this parameter is not provided, the placeholders in the text will be returned unchanged; otherwise, they will be replaced with corresponding values indexed by the provided product Id.'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDatapartnerCustomTextDataPartnerIdGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDatapartnerCustomTextDataPartnerIdGet200ApplicationXmlResponse'
    post:
      tags:
        - DataPartner
      summary: Set the entire Data Partner Custom Text collection
      description: 'Updates the entire collection of custom text entries for a specified Data Partner, allowing for bulk modifications of text configurations.'
      operationId: DataPartner_SetDataPartnerCustomTexts
      requestBody:
        description: The entire Data Partner Custom Text collection to be updated. This collection should adhere to the specified schema and contain all necessary text entries for the Data Partner.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTexts'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomTexts'
      responses:
        '204':
          description: 'No Content - Indicates that the request was successful, and the custom text collection has been updated without returning any content.'
    parameters:
      - $ref: '#/components/parameters/dataPartnerIdPath'
  '/services/datapartner/datapartnercustomtext/{dataPartnerId}/{customTextOption}/{ctype}':
    get:
      tags:
        - DataPartner
      summary: This Method gets the Data Partner Custom Text
      description: 'Retrieve custom text associated with a specific data partner, identified by their unique ID and custom text options. This endpoint is useful for fetching configuration or display text relevant to a data partner''s operations.'
      operationId: DataPartner_GetDataPartnerCustomText
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-DataPartner-DataPartnerCustomTextAr'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-DataPartner-DataPartnerCustomTextAr'
    parameters:
      - $ref: '#/components/parameters/dataPartnerIdPath'
      - name: customTextOption
        in: path
        description: 'Custom Text Option. 1:   CIPType.'
        required: true
        schema:
          type: integer
          format: int32
      - name: ctype
        in: path
        description: "Custom Text Type. 16:   IDV_DOB_AFTER_END_ISSUE_DATE,\r\n                                                  64:   ENROLLEE_IN_DECEASED_FILE,\r\n                                                  128:  IDV_ENROLLEE_UNDER_AGED"
        required: true
        schema:
          type: integer
          format: int32
  /services/datapartner/datapartnercustomtext:
    post:
      tags:
        - DataPartner
      summary: This Method is used to Save Data Partner Custom Text
      description: This endpoint allows you to save custom text associated with a specific data partner. It is typically used to update or create custom messaging that can be displayed in the WealthCare Portal or Mobile application.
      operationId: DataPartner_SaveDataPartnerCustomText
      requestBody:
        description: Data Partner Custom Text Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomText'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomText'
      responses:
        '204':
          description: 'No Content - The request was successful, and no content is returned. This indicates that the custom text has been saved successfully without any errors.'
  '/services/datapartner/publictext/{tpaId}/{employerId}/{participantId}/{dataPartnerId}':
    get:
      tags:
        - DataPartner
      summary: This method gets Introduction Text and Certification Text of the Data Partner
      description: 'Retrieve the Introduction and Certification Text associated with a specific Data Partner, identified by unique identifiers including TPA ID, Employer ID, Participant ID, and Data Partner ID. This endpoint is useful for obtaining essential information that may be displayed to participants or used in communications.'
      operationId: DataPartner_GetDataPartnerPublicText
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the requested Data Partner information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartner'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartner'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/dataPartnerIdPath'
  '/services/document/management/catetgory/{tpaId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a list of document categories.
      description: Retrieve a list of document categories associated with a specific TPA (Third Party Administrator) identified by the `tpaId`. This endpoint is useful for applications that need to display available document categories to users for selection or filtering purposes.
      operationId: DocumentManagement_GetDocumentCategories
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text/string values in the specified language, defaulting to English if not specified or if an invalid value is sent. If Spanish or French is requested and a particular field does not have a translated value, the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of document categories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
    put:
      tags:
        - DocumentManagement
      summary: Update a list of document categories
      description: Update the document categories associated with a specific TPA (Third Party Administrator) identified by the `tpaId`. This operation is typically used to modify or refresh the document categories available in the system.
      operationId: DocumentManagement_UpdateDocumentCategories
      parameters:
        - name: refresh
          in: query
          description: 'Indicates whether to return the updated list of document categories after saving. Set to true to receive the updated list, or false to receive an empty response.'
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Document Category Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
      responses:
        '200':
          description: Successfully updated the document categories. The response includes the updated list of document categories in the requested format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
    post:
      tags:
        - DocumentManagement
      summary: Add a new document category.
      description: This endpoint allows you to create a new document category associated with a specific TPA (Third Party Administrator) identified by the `tpaId`. It is typically used when you need to organize documents under a new category for better management and retrieval.
      operationId: DocumentManagement_AddDocumentCategory
      parameters:
        - name: refresh
          in: query
          description: 'Indicates whether to return the updated list of document categories after the new category is saved. Set to true to receive the updated list, or false to receive no content.'
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the details of the document category to be added, including its name and display order. This data is essential for categorizing documents effectively within the system.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentCategoryAddRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentCategoryAddRequest'
      responses:
        '200':
          description: Successfully created the document category. The response includes the updated list of document categories if the `refresh` parameter is set to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/catetgory/delete/{tpaId}':
    post:
      tags:
        - DocumentManagement
      summary: Delete a list of document categories.
      description: This endpoint allows you to delete specified document categories associated with a given TPA ID. It is primarily used to manage and clean up document categories that are no longer needed in the system.
      operationId: DocumentManagement_DeleteDocumentCategories
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the updated list of document categories after deletion (true) or an empty response (false).
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A collection of document categories to be deleted. Each category is identified by its unique keys.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryDeleteRequ'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryDeleteRequ'
      responses:
        '200':
          description: Successfully deleted the specified document categories. The response will contain the updated list of remaining document categories if the `refresh` parameter is set to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/audience/{tpaId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a list of document audiences.
      description: 'Retrieve a list of document audiences associated with a specific TPA ID, which can be used to manage document distribution and visibility for different audience segments.'
      operationId: DocumentManagement_GetDocumentAudiences
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of document audiences.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray'
    put:
      tags:
        - DocumentManagement
      summary: Update a document audience
      description: 'Update the audience settings for a specific document identified by the TPA ID. This operation is used to modify the audience parameters, such as which employers or divisions can access the document.'
      operationId: DocumentManagement_UpdateDocumentAudience
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the updated document audience after saving. Set to true to receive the updated audience details; false will return an empty response.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Document Audience Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
      responses:
        '200':
          description: Successfully updated the document audience. The response contains the updated audience details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
    post:
      tags:
        - DocumentManagement
      summary: Add a new document audience
      description: 'Create a new document audience for a specific TPA, allowing for the organization and management of document access based on defined audience criteria.'
      operationId: DocumentManagement_AddDocumentAudience
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the saved document audience details (true) or an empty response (false) after creation.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Document Audience Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
      responses:
        '200':
          description: 'Successfully created the document audience, returning the audience details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/audience/{tpaId}/{audienceId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a doucment audience.
      description: Retrieve detailed information about a specific document audience identified by TPA ID and audience ID. This operation is useful for understanding the composition and characteristics of the audience associated with a document.
      operationId: DocumentManagement_GetDocumentAudience
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the document audience details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
    delete:
      tags:
        - DocumentManagement
      summary: Delete a document audience
      description: 'Deletes a specified document audience identified by TPA ID and audience ID, effectively removing it from the system.'
      operationId: DocumentManagement_DeleteDocumentAudience
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the updated list of document audiences after deletion (true) or an empty response (false).
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the document audience. The response contains the updated list of document audiences if the `refresh` parameter is set to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: audienceId
        in: path
        description: Document audience Id
        required: true
        schema:
          type: string
  '/services/document/management/audience/delete/{tpaId}':
    post:
      tags:
        - DocumentManagement
      summary: Delete a list of document audiences
      description: This endpoint allows you to delete specified document audiences associated with a given TPA ID. It is used when you need to remove audiences that are no longer relevant or needed for document distribution.
      operationId: DocumentManagement_DeleteDocumentAudiences
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the updated list of document audiences after deletion (true) or an empty response (false).
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A collection of document audience objects that need to be deleted. Each object specifies the TPA ID and the audience key to identify the audience for deletion.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceDeleteRequ'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceDeleteRequ'
      responses:
        '200':
          description: Successfully deleted the specified document audiences. The response contains the updated list of remaining audiences if the `refresh` parameter is set to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/audience/memeber/{tpaId}':
    get:
      tags:
        - DocumentManagement
      summary: 'Get a list of unselected employers, divisions, subgroups and plans for document audience setup'
      description: 'Retrieves a list of unselected employers, divisions, subgroups, and plans associated with a specific document audience, identified by the TPA ID.'
      operationId: DocumentManagement_GetDocumentAudienceUnselectedMember
      parameters:
        - name: audienceId
          in: query
          description: 'The unique identifier for the document audience, used to filter the results to a specific audience setup.'
          required: true
          schema:
            type: string
        - name: searchText
          in: query
          description: A string to initiate a search for employers by name. This allows for filtering the results based on the employer name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successful retrieval of the document audience members.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudienceMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudienceMember'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/document/{tpaId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a list of documents
      description: 'Retrieve a list of documents associated with a specific TPA ID, allowing users to access relevant documentation based on their preferences and permissions.'
      operationId: DocumentManagement_GetDocuments
      parameters:
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. The API will return text in the specified language, defaulting to English if not provided or if an invalid value is sent. If a requested language lacks a translation for a specific field, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - name: retrieveOptions
          in: query
          description: 'Defines the source of documents to retrieve. Options include: Hidden = 1, AllEmployer = 2, SelectedEmployer = 3, DocumentAudience = 4, All = 10. The choice of option influences the documents returned based on visibility and audience.'
          schema:
            enum:
              - None
              - Hidden
              - AllEmployer
              - SelectedEmployer
              - DocumentAudience
              - All
            type: string
        - name: employerId
          in: query
          description: 'Unique identifier for the employer, assigned by WealthCare Admin. This parameter is required when retrieveOptions is set to 2 (AllEmployer) to filter documents accordingly.'
          schema:
            type: string
        - name: audienceId
          in: query
          description: Identifier for the audience. This parameter is mandatory when retrieveOptions is set to 4 (DocumentAudience) to ensure the correct documents are retrieved for the specified audience.
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of documents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
    put:
      tags:
        - DocumentManagement
      summary: Update a document
      description: 'Update the details of a specific document identified by its TPA ID. This operation is used to modify existing document information, such as name, description, and associated files.'
      operationId: DocumentManagement_UpdateDocument
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the updated document after saving (true) or an empty response (false). Default is false.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Update Document Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.UpdateDocumentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.UpdateDocumentRequest'
      responses:
        '200':
          description: Successfully updated the document. The response contains the updated document details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
    post:
      tags:
        - DocumentManagement
      summary: Add a new document
      description: 'Allows you to add a new document associated with a specific TPA (Third Party Administrator) identified by their unique TPA ID. This operation is typically used to upload documents such as contracts, policies, or other relevant files for record-keeping and management purposes.'
      operationId: DocumentManagement_AddDocument
      parameters:
        - name: refresh
          in: query
          description: 'Indicates whether to return the document details after saving. Set to true to return the saved document, or false to receive an empty response.'
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the details of the new document to be added, including metadata and file information. Ensure that the request body adheres to the specified schema for successful processing.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.AddDocumentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.AddDocumentRequest'
      responses:
        '200':
          description: Successfully added the document. The response contains the details of the newly created document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/document/{tpaId}/{documentId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a document details
      description: Get a document details
      operationId: DocumentManagement_GetDocument
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
    delete:
      tags:
        - DocumentManagement
      summary: Delete a document
      description: Deletes a specified document identified by its TPA ID and Document ID.
      operationId: DocumentManagement_DeleteDocument
      parameters:
        - name: isLegacyDocument
          in: query
          description: 'Indicates whether the document is a legacy document. Set to `true` if it is a legacy document; otherwise, set to `false`.'
          schema:
            type: boolean
        - name: refresh
          in: query
          description: Determines the response after deletion. Set to `true` to return the updated list of documents after deletion; set to `false` to return an empty response.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the document. The response includes the updated list of documents if the `refresh` parameter is set to `true`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: documentId
        in: path
        description: Document Id
        required: true
        schema:
          type: string
  '/services/document/management/document/delete/{tpaId}':
    post:
      tags:
        - DocumentManagement
      summary: Delete a list of documents
      description: This endpoint allows you to delete a specified list of documents associated with a particular TPA ID. It is typically used when documents are no longer needed or need to be removed for compliance or organizational purposes.
      operationId: DocumentManagement_DeleteDocuments
      parameters:
        - name: refresh
          in: query
          description: Indicates whether to return the updated list of documents after deletion (true) or an empty response (false). Default is false.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'A collection of documents to be deleted, specified in the request body. Each document must include its unique identifiers to ensure accurate deletion.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDeleteRequestArray'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDeleteRequestArray'
      responses:
        '200':
          description: Successfully deleted the specified documents. The response includes the updated list of remaining documents if the `refresh` parameter is set to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/document/management/document/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a list of document a participant can access
      description: Retrieve a list of documents that a specific participant can access based on their unique identifiers. This operation is useful for displaying relevant documents to participants in the WealthCare Portal or Mobile application.
      operationId: DocumentManagement_GetDocumentsForParticipant
      parameters:
        - name: includeLegacyDocument
          in: query
          description: Indicates whether to include legacy portal documents in the response. Defaults to false if not specified.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of documents accessible to the participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/document/management/document/employer/{tpaId}':
    get:
      tags:
        - DocumentManagement
      summary: Get a list of unselected employers for a document setup
      description: 'Retrieve a list of employers that have not yet been selected for a specific document setup, identified by the TPA ID. This operation is useful for administrators to manage document associations efficiently.'
      operationId: DocumentManagement_GetUnselectedEmployers
      parameters:
        - name: documentId
          in: query
          description: The unique identifier for the document for which unselected employers are being retrieved. This parameter is required to filter the results to a specific document context.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of unselected employers for the specified document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-EmployerArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Document-EmployerArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/datapartner/customEStatementOptInPDF/{dataPartnerId}':
    get:
      tags:
        - DataPartner
      summary: Data partner custom e-statement opt in PDF
      description: Retrieve the custom e-statement opt-in PDF for a specific data partner identified by their unique Data Partner ID.
      operationId: DataPartner_GetDataPartnerCustomEStatementOptInPDF
      responses:
        '200':
          description: Successfully retrieved the custom e-statement opt-in PDF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomEStatementOptInPDF'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomEStatementOptInPDF'
    post:
      tags:
        - DataPartner
      summary: This method sets data partner custom e-statement opt in pdf
      description: This endpoint allows you to set a custom e-statement opt-in PDF for a specific data partner identified by their unique Data Partner ID. It is typically used to customize the e-statement experience for participants associated with that data partner.
      operationId: DataPartner_SetDataPartnerCustomEStatementOptInPDF
      requestBody:
        description: 'Details of Data Partner custom e-statement opt in PDF, including the file''s content and metadata.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomEStatementOptInPDF'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomEStatementOptInPDF'
      responses:
        '204':
          description: 'No Content - The request was successful, and the custom e-statement opt-in PDF has been set without returning any content.'
    parameters:
      - $ref: '#/components/parameters/dataPartnerIdPath'
  '/services/documents/HSAStatements/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSAStatements
      summary: Get HSA Statement List
      description: 'Retrieve a list of HSA statements for a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for obtaining historical statements related to Health Savings Accounts (HSAs).'
      operationId: HSAStatements_GetHSAStatementsList
      parameters:
        - name: flexAcctId
          in: query
          description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, e.g., "0001699940".'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the list of HSA statements. The response contains an array of statement objects, each representing an individual HSA statement with relevant details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Statement-StatementResponseArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Statement-StatementResponseArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSAStatements/{tpaId}/{employerId}/{participantId}/pdf':
    get:
      tags:
        - HSAStatements
      summary: Get HSA Statement PDF
      description: Get HSA Statement PDF
      operationId: HSAStatements_GetHSAStatementPDF_2106
      parameters:
        - name: flexAcctId
          in: query
          description: Flex Account Id
          required: true
          schema:
            type: string
        - name: documentKey
          in: query
          description: Document Key
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: statementOption
          in: query
          description: "HSA Statement Options. None = 0, WCHSAStatement = 1, Resend = 2, Resent = 4, StatementError = 8,\r\n                                                                 StatementErrorResolved = 16, ResendOrigPref = 32, InternalGeneration = 64,\r\n                                                                 RegeneratedStatements = 128"
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsTpaIdEmployerIdParticipantIdPdfGet200Applicati'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsTpaIdEmployerIdParticipantIdPdfGet200Applicati'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSAStatements/deliveryOption/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSAStatements
      summary: Get HSA Statement delivery option
      description: Get HSA Statement delivery option
      operationId: HSAStatements_GetHSAStatementsDeliveryOption
      parameters:
        - name: flexAcctId
          in: query
          description: Flex Account Id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdGet2'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdGet2-2'
    put:
      tags:
        - HSAStatements
      summary: Set HSA Statement delivery option
      description: 'Update the delivery option for HSA statements for a specific participant, allowing for either electronic delivery, paper delivery, or both. This operation is used to manage how participants receive their HSA statements based on their preferences.'
      operationId: HSAStatements_SetHSAStatementsDeliveryOption
      parameters:
        - name: flexAcctId
          in: query
          description: 'A unique identifier for the flex account, used to specify which account''s delivery option is being updated.'
          required: true
          schema:
            type: string
        - name: delOpt
          in: query
          description: 'Specifies the delivery options for HSA statements. Use ''E'' for Electronic Only, ''B'' for Both Paper and Electronic. This parameter determines how the statements will be delivered to the participant.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully updated the delivery option for the specified participant's HSA statements. The response will include confirmation of the updated delivery settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdPut2'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdPut2-2'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSAStatements/deliveryOption/Fee/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSAStatements
      summary: Get HSA Statement delivery option
      description: 'Retrieve the delivery options for HSA statements associated with a specific participant, identified by their TPA ID, Employer ID, and Participant ID.'
      operationId: HSAStatements_GetHSAStatementsDeliveryOptionWithFee
      parameters:
        - name: flexAcctId
          in: query
          description: 'Flex Account Id, which uniquely identifies the benefit account in the system. This parameter is required to specify the account for which the delivery options are being retrieved.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the delivery options for the specified HSA statement. The response contains details about the available delivery methods and any associated fees.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentDeliveryOption'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentDeliveryOption'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSAStatements/reassoc/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSAStatements
      summary: Get HSA Statement List for re-associated account.
      description: Retrieve a list of HSA statements for a participant's account that has been re-associated with a new TPA and employer. This endpoint is useful for accessing historical statement data after account re-association.
      operationId: HSAStatements_GetReassociatedHSAStatementsList
      parameters:
        - name: flexAccountId
          in: query
          description: The unique identifier for the flex account associated with the participant. This ID is required to filter the statements relevant to the specific account.
          required: true
          schema:
            type: string
        - name: reassocTpaId
          in: query
          description: The unique identifier for the re-associated Third Party Administrator (TPA). This parameter is necessary to identify the TPA managing the account after re-association.
          required: true
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: The unique identifier for the re-associated employer. This ID helps in retrieving statements linked to the specific employer after the account has been re-associated.
          required: true
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: The unique identifier for the re-associated participant. This parameter is essential to ensure that the statements retrieved are specific to the correct participant.
          required: true
          schema:
            type: string
        - name: reassocFlexAccountId
          in: query
          description: The unique identifier for the re-associated flex account. This ID is required to accurately filter the statements for the specific flex account.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the list of HSA statements for the specified re-associated account. The response contains an array of statement objects, each representing a historical statement linked to the participant''s account.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Statement-StatementResponseArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Statement-StatementResponseArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSAStatements/reassoc/{tpaId}/{employerId}/{participantId}/reassociatedPDF':
    get:
      tags:
        - HSAStatements
      summary: Get HSA Statement PDF for reassociated account.
      description: 'Retrieve the HSA Statement PDF for a reassociated account, identified by the unique identifiers of TPA, Employer, and Participant. This operation is useful for obtaining the latest statement for accounts that have undergone reassociation.'
      operationId: HSAStatements_GetReassocHSAStatementPDF_2106
      parameters:
        - name: flexAccountId
          in: query
          description: The unique identifier for the flex account associated with the participant. This value is required to retrieve the correct statement.
          required: true
          schema:
            type: string
        - name: reassocTpaId
          in: query
          description: The unique identifier for the reassociated TPA. This is necessary to ensure the statement corresponds to the correct administrative instance.
          required: true
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: The unique identifier for the reassociated employer. This helps in filtering the statement to the appropriate employer's account.
          required: true
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: The unique identifier for the reassociated participant. This is crucial for retrieving the specific participant's statement.
          required: true
          schema:
            type: string
        - name: reassocFlexAccountId
          in: query
          description: The unique identifier for the reassociated flex account. This ensures the correct account statement is fetched.
          required: true
          schema:
            type: string
        - name: documentKey
          in: query
          description: The key that identifies the specific document being requested. This integer value is essential for fetching the correct statement.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: statementOption
          in: query
          description: 'Options for the HSA statement, represented as an integer. Each option corresponds to a specific action or state related to the statement, such as regeneration or error resolution.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Successfully retrieved the HSA Statement PDF. The response contains the requested document in either JSON or XML format, depending on the client''s request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsReassocTpaIdEmployerIdParticipantIdReassociate'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSAStatementsReassocTpaIdEmployerIdParticipantIdReassociate'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSATaxForms/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSATaxForms
      summary: Get Account Holder Tax Form Info.
      description: 'Retrieve tax form information for a specific account holder, identified by TPA ID, Employer ID, and Participant ID. This endpoint is used to access tax form details relevant to the participant''s account.'
      operationId: HSATaxForms_GetTaxFormsList
      parameters:
        - name: flexAcctId
          in: query
          description: 'Flex Account Id, which uniquely identifies the benefit account within the WealthCare system.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved tax form information for the specified account holder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Document-TaxFormInfoArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Document-TaxFormInfoArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSATaxForms/reassoc/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSATaxForms
      summary: Get list of tax forms for reassociated account.
      description: Retrieve a list of tax forms associated with a participant's account that has been reassociated with a new TPA or employer. This operation is useful for accessing tax documentation when account details have changed.
      operationId: HSATaxForms_GetReassocTaxFormsList
      parameters:
        - name: flexAccountId
          in: query
          description: 'The unique identifier for the flex account, used to specify which account''s tax forms to retrieve.'
          required: true
          schema:
            type: string
        - name: reassocTpaId
          in: query
          description: 'The unique identifier for the reassociated TPA, indicating the new third-party administrator managing the account.'
          required: true
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: 'The unique identifier for the reassociated employer, reflecting the change in employer associated with the participant''s account.'
          required: true
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: 'The unique identifier for the reassociated participant, used to specify which participant''s tax forms are being requested.'
          required: true
          schema:
            type: string
        - name: reassocFlexAccountId
          in: query
          description: 'The unique identifier for the reassociated flex account, used to retrieve tax forms specific to that account.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of tax forms for the specified reassociated account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Document-TaxFormInfoArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Document-TaxFormInfoArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSATaxForms/deliveryOption/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSATaxForms
      summary: Get Tax Forms Delivery Options.
      description: 'Retrieve the available delivery options for HSA tax forms for a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This endpoint is useful for determining how tax forms can be delivered to participants based on their preferences or account settings.'
      operationId: HSATaxForms_GetTaxFormsDeliveryOption
      parameters:
        - name: flexAcctId
          in: query
          description: 'A unique identifier for the flex account, required to specify which account''s delivery options are being requested.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the delivery options for the specified participant's HSA tax forms.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsDeliveryOptionTpaIdEmployerIdParticipantIdGet200'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsDeliveryOptionTpaIdEmployerIdParticipantIdGet200'
    put:
      tags:
        - HSATaxForms
      summary: Set Tax Forms Delivery Options.
      description: 'Update the delivery options for tax forms associated with a specific participant, allowing for electronic or paper delivery preferences.'
      operationId: HSATaxForms_SetTaxFormsDeliveryOption
      parameters:
        - name: flexAcctId
          in: query
          description: 'A unique identifier for the flex account, used to specify which account''s delivery options are being updated.'
          required: true
          schema:
            type: string
        - name: delOpt
          in: query
          description: 'Specifies the delivery options: E for Electronic Only, B for Both Paper and Electronic. This determines how the participant will receive their tax forms.'
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully updated the delivery options for the specified participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsDeliveryOptionTpaIdEmployerIdParticipantIdPut200'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsDeliveryOptionTpaIdEmployerIdParticipantIdPut200'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /services/documents/HSATaxForms/pdfReaderCheck:
    get:
      tags:
        - HSATaxForms
      summary: Get PDF Reader Check Data.
      description: Retrieve data to check the compatibility of PDF readers with HSA tax forms. This endpoint is useful for ensuring that users can properly view and interact with PDF documents related to their HSA accounts.
      operationId: HSATaxForms_GetPDFReaderCheckData
      responses:
        '200':
          description: Successfully retrieved PDF Reader Check Data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.PDFReaderCheckData'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.PDFReaderCheckData'
  '/services/documents/HSATaxForms/{tpaId}/{employerId}/{participantId}/taxFormPdf':
    get:
      tags:
        - HSATaxForms
      summary: Get Account Holder Tax Form PDF.
      description: 'Retrieve the PDF version of the tax form for a specific account holder, identified by their unique TPA ID, Employer ID, and Participant ID. This operation is typically used for obtaining tax documentation required for filing purposes.'
      operationId: HSATaxForms_GetTaxFormPDF_2106
      parameters:
        - name: flexAcctId
          in: query
          description: 'Flex Account Id, which uniquely identifies the benefit account associated with the participant. This parameter is required to retrieve the correct tax form.'
          required: true
          schema:
            type: string
        - name: documentKey
          in: query
          description: 'Document Key, an integer that specifies the particular tax document to be retrieved. This key is essential for identifying the correct document.'
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'OK - The request was successful, and the tax form PDF is returned in the response body. The content type may vary based on the requested format (JSON or XML).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsTpaIdEmployerIdParticipantIdTaxFormPdfGet200Appl'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsTpaIdEmployerIdParticipantIdTaxFormPdfGet200Appl'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/documents/HSATaxForms/reassoc/{tpaId}/{employerId}/{participantId}/pdf':
    get:
      tags:
        - HSATaxForms
      summary: Get Tax Form PDF for reassociated account.
      description: 'Retrieve the PDF version of the tax form for a reassociated account, identified by the unique identifiers of TPA, Employer, and Participant.'
      operationId: HSATaxForms_GetReassocTaxFormPDF_2106
      parameters:
        - name: flexAccountId
          in: query
          description: The unique identifier for the flex account associated with the participant. This value is required to retrieve the specific tax form.
          required: true
          schema:
            type: string
        - name: reassocTpaId
          in: query
          description: The unique identifier for the reassociated TPA. This is necessary to ensure the correct association is used when retrieving the tax form.
          required: true
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: The unique identifier for the reassociated employer. This identifier is used to link the tax form to the correct employer account.
          required: true
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: The unique identifier for the reassociated participant. This is essential for retrieving the correct tax form for the participant.
          required: true
          schema:
            type: string
        - name: reassocFlexAccountId
          in: query
          description: The unique identifier for the reassociated flex account. This is required to ensure the correct account is referenced in the request.
          required: true
          schema:
            type: string
        - name: documentKey
          in: query
          description: The key that identifies the specific document to retrieve. This integer value is crucial for fetching the correct tax form.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the tax form PDF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsReassocTpaIdEmployerIdParticipantIdPdfGet200Appl'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesDocumentsHSATaxFormsReassocTpaIdEmployerIdParticipantIdPdfGet200Appl'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/employer/employeraccount/employerfundinginvoices/{tpaId}':
    get:
      tags:
        - Employer
      summary: Get Employer Funding Invoice Details.
      description: 'Retrieve detailed information about employer funding invoices based on specified search criteria, including date range and optional identifiers.'
      operationId: Employer_GetEmployerFundingInvoices
      parameters:
        - name: beginDte
          in: query
          description: 'Format - date-time (as date-time in RFC3339). The starting date for the invoice search, inclusive.'
          required: true
          schema:
            type: string
            format: date-time
        - name: endDte
          in: query
          description: 'Format - date-time (as date-time in RFC3339). The ending date for the invoice search, inclusive.'
          required: true
          schema:
            type: string
            format: date-time
        - name: emprId
          in: query
          description: Unique identifier for the employer. This parameter is optional and can be used to filter results to a specific employer.
          schema:
            type: string
        - name: invoiceNumber
          in: query
          description: Identifier associated with the invoice. This parameter is optional and allows for filtering by a specific invoice number.
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK - Successfully retrieved the employer funding invoice details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmprFundingInvoice'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmprFundingInvoice'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/employer/employeraccount/{tpaId}/{employerId}/{planKey}/{emprflexacctkey}':
    get:
      tags:
        - EmployerAccount
      summary: Get Employer Bank Account Details.
      description: 'Retrieve detailed information about a specific employer''s bank account using unique identifiers such as TPA ID, Employer ID, Plan Key, and Employer Flex Account Key.'
      operationId: EmployerAccount_GetEmployerAccount
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved employer bank account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employer-EmployerAccountArra'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employer-EmployerAccountArra'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - name: planKey
        in: path
        description: Plan Key
        required: true
        schema:
          type: integer
          format: int32
      - name: emprflexacctkey
        in: path
        description: Employer Flex Account Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/employer/employertransaction/getemployertransactions/{tpaId}/{employerId}':
    get:
      tags:
        - EmployerTransaction
      summary: Get Employer Real Time Funding Transactions List.
      description: 'Retrieve a list of real-time funding transactions for a specific employer, identified by TPA ID and Employer ID. This endpoint is useful for obtaining transaction details related to employer funding activities within a specified date range.'
      operationId: EmployerTransaction_GetEmployerTransactions
      parameters:
        - name: emptFlexAcctKey
          in: query
          description: Optional key representing an empty employer flex account. This parameter can be used to filter results based on specific account criteria.
          schema:
            type: integer
            format: int32
        - name: startDte
          in: query
          description: The start date for filtering transactions. This date should be in ISO 8601 format (YYYY-MM-DD) and is used to specify the beginning of the transaction search range.
          schema:
            type: string
        - name: endDte
          in: query
          description: The end date for filtering transactions. This date should also be in ISO 8601 format (YYYY-MM-DD) and is used to specify the conclusion of the transaction search range.
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the list of employer funding transactions. The response contains an array of transaction objects, each detailing specific funding activities associated with the employer.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesEmployerEmployertransactionGetemployertransactionsTpaIdEmployerIdGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesEmployerEmployertransactionGetemployertransactionsTpaIdEmployerIdGet'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
  /services/employer/employertransaction/employertxnrequest:
    post:
      tags:
        - EmployerTransaction
      summary: Insert Employer Transaction.
      description: 'This endpoint allows you to insert a new employer transaction into the system, facilitating the recording of financial activities related to an employer''s account.'
      operationId: EmployerTransaction_InsertTransaction
      requestBody:
        description: 'Contains the details of the employer transaction to be recorded, including identifiers and transaction specifics.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerTxnRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerTxnRequest'
      responses:
        '200':
          description: Successfully processed the employer transaction request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionResponse'
  '/services/enrollment/template/attributes/{tpaId}/{employerId}/{templateKey}':
    get:
      tags:
        - Enrollment
      summary: Get TPA/Product Partner enrollment template attributes
      description: 'Retrieve the enrollment template attributes for a specific TPA or product partner, identified by their unique identifiers. This endpoint is useful for obtaining configuration settings related to enrollment templates, which can include various display and interaction options.'
      operationId: Enrollment_GetEnrollmentUITemplate
      parameters:
        - name: isPpTemplate
          in: query
          description: Indicates whether the template is a product partner template (true) or a TPA template (false). This parameter helps in distinguishing between different types of templates.
          schema:
            type: boolean
        - name: attribute
          in: query
          description: 'Specifies the enrollment template setting to retrieve. Options include settings for headers, announcements, demographics, and more, allowing for granular control over the template''s configuration.'
          schema:
            enum:
              - None
              - HeaderFooterSetting
              - AnnouncementSetting
              - IntroductionSetting
              - DemographicsSetting
              - EmailTemplateSetting
              - PlanInfoSetting
              - PaperEStatementTaxFormSetting
              - ProxyStatementSetting
              - BeneficiarySetting
              - IDVerificationAuthenticationSetting
              - SpecialInfoSetting
              - OtherInfoSetting
              - DisclosureSetting
              - AgreementSetting
              - ESignatureSetting
              - All
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the enrollment template attributes. The response contains the requested settings in JSON or XML format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentUITemplate'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentUITemplate'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - name: templateKey
        in: path
        description: Template Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/enrollment/beneficiaries/{tpaId}/{employerId}/{participantId}/{flexAcctId}/{beneficiaryTypeCde}':
    get:
      tags:
        - Enrollment
      summary: Get list of beneficiary
      description: 'Retrieve a list of beneficiaries associated with a specific participant, identified by their unique identifiers. This endpoint is useful for obtaining beneficiary information for enrollment or review purposes.'
      operationId: Enrollment_GetBeneficiaries
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of beneficiaries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-BeneficiaryArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-BeneficiaryArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
      - name: beneficiaryTypeCde
        in: path
        description: Beneficiary Type Code (Primary or Contigent)
        required: true
        schema:
          enum:
            - None
            - Primary
            - Contigent
          type: string
  '/services/enrollment/beneficiary/{tpaId}/{employerId}/{participantId}/{flexAcctId}/{beneficiaryTypeCde}/{beneficiaryNumber}':
    get:
      tags:
        - Enrollment
      summary: Get beneficiary details
      description: 'Retrieve detailed information about a specific beneficiary associated with a participant''s account, identified by unique identifiers including TPA ID, Employer ID, Participant ID, and Flex Account ID.'
      operationId: Enrollment_GetBeneficiary
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved beneficiary details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
    delete:
      tags:
        - Enrollment
      summary: Delete a beneficiary
      description: Deletes a specified beneficiary from the enrollment records based on the provided unique identifiers. This operation is typically used when a beneficiary is no longer associated with a participant's account.
      operationId: Enrollment_DeleteBeneficiary
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the beneficiary. The response indicates that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentBeneficiaryTpaIdEmployerIdParticipantIdFlexAcctIdBeneficia'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentBeneficiaryTpaIdEmployerIdParticipantIdFlexAcctIdBeneficia'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
      - name: beneficiaryTypeCde
        in: path
        description: Beneficiary Type Code (Primary or Contigent)
        required: true
        schema:
          enum:
            - None
            - Primary
            - Contigent
          type: string
      - name: beneficiaryNumber
        in: path
        description: Beneficiary Number
        required: true
        schema:
          type: integer
          format: int32
  '/services/enrollment/beneficiary/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - Enrollment
      summary: Save beneficiary details
      description: Save beneficiary details
      operationId: Enrollment_SaveBeneficiary
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /services/enrollment/idcheck/verification:
    post:
      tags:
        - Enrollment
      summary: ID verification
      description: Initiates an ID verification process for a participant based on the provided identifiers and details. This operation is essential for confirming the identity of participants during enrollment or account management processes.
      operationId: Enrollment_IDVerification
      requestBody:
        description: ID Check Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdCheckRequest'
      responses:
        '200':
          description: 'Successful ID verification, returning the verification result.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdCheckResponse'
  /services/enrollment/idcheck/get/questions:
    post:
      tags:
        - Enrollment
      summary: Get ID authentication questions.
      description: Retrieve a set of ID authentication questions to verify participant identity during the enrollment process.
      operationId: Enrollment_GetIdAQuestions
      requestBody:
        description: ID Check Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdCheckRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdCheckRequest'
      responses:
        '200':
          description: Successfully retrieved ID authentication questions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdAQuestions'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdAQuestions'
  /services/enrollment/idcheck/submit/answers:
    post:
      tags:
        - Enrollment
      summary: Answer ID authentication questions
      description: Submit answers to the ID authentication questions to verify participant identity.
      operationId: Enrollment_SubmitIdAnswers
      requestBody:
        description: 'ID Answers Details, including participant responses to authentication questions necessary for identity verification.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdAAnswers'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdAAnswers'
      responses:
        '200':
          description: Successful response indicating the ID check process has completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdCheckResponse'
  '/services/enrollment/dpaccount/syncstatuscde/{tpaId}/{employerId}/{participantId}/{flexAcctId}':
    put:
      tags:
        - Enrollment
      summary: Update Data partner account Sync Status Code
      description: 'Update the synchronization status code for a specific data partner account, identified by TPA ID, Employer ID, Participant ID, and Flex Account ID. This operation is typically used to reflect changes in the account''s sync status, which may be necessary for maintaining accurate records and ensuring proper data flow.'
      operationId: Enrollment_UpdateDataPartnerReplStatusCode
      parameters:
        - name: syncStatusCde
          in: query
          description: Specifies the new synchronization status code for the data partner account. This code indicates the current state of the account's synchronization process.
          schema:
            enum:
              - None
              - PendingCreate
              - PendingUpdate
              - UpToDate
              - ValidationError
              - UnexpectedError
              - Deactivated
              - InvalidAccount
              - ApplicationApprovedManually
              - ApplicationApproved
              - ApplicationDeniedNoReapply
              - ApplicationDeniedReapplyAllowed
              - RequiresBankReview
              - AwaitingAdditionalInformation
              - ApplicationProcessing
              - ApplicationSentToBank
              - AccountReassociated
              - DisclosuresToBeIssued
              - DisclosureAcknowledgementRequired
              - DisclosureAcknowledgementReceived
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successful update of the synchronization status code. The response will contain the updated status information for the specified data partner account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentDpaccountSyncstatuscdeTpaIdEmployerIdParticipantIdFlexAcct'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentDpaccountSyncstatuscdeTpaIdEmployerIdParticipantIdFlexAcct'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  '/services/enrollment/account/{tpaId}/{employerId}/{participantId}/{flexAcctId}':
    get:
      tags:
        - Enrollment
      summary: Get enrolled flex account details
      description: Get enrolled flex account details
      operationId: Enrollment_GetEnollmentFlexAccount
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount'
    delete:
      tags:
        - Enrollment
      summary: Delete flex account
      description: Delete flex account
      operationId: Enrollment_DeleteEnollmentFlexAccount
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentAccountTpaIdEmployerIdParticipantIdFlexAcctIdDelete200Appl'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentAccountTpaIdEmployerIdParticipantIdFlexAcctIdDelete200Appl'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  /services/enrollment/account/submit:
    post:
      tags:
        - Enrollment
      summary: Save enrollment flex account
      description: Update the enrollment flex account details for a participant based on their election status. This operation is typically used to submit or modify enrollment information for flexible spending accounts.
      operationId: Enrollment_SaveEnollmentFlexAccount
      parameters:
        - name: electCde
          in: query
          description: 'Employee Election Code indicating the enrollment status. Options include: Participate (full enrollment), None (in process), Waive (waived enrollment), and DidNotEnroll (not enrolled).'
          schema:
            enum:
              - None
              - Participate
              - Waive
              - DidNotEnroll
            type: string
        - name: refresh
          in: query
          description: 'Flag to indicate whether to return the details of the enrolled flex account after submission. If true, the response will include the updated account information.'
          schema:
            type: boolean
      requestBody:
        description: Contains the details of the enrollment flex account being submitted. This includes various attributes related to the participant’s account and enrollment status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount'
      responses:
        '200':
          description: Successful operation. The response contains the updated flex account details reflecting the latest enrollment information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount'
  '/services/enrollment/waive/{tpaId}/{employerId}/{participantId}/{planKey}':
    get:
      tags:
        - Enrollment
      summary: Get Waive Enrollment information
      description: 'Retrieve Waive Enrollment information for a specific participant and plan, identified by TPA ID, Employer ID, Participant ID, and Plan Key. This endpoint is useful for obtaining details about enrollment waivers and associated plan information.'
      operationId: Enrollment_GetWaiveEnrollment
      parameters:
        - name: includeHeaderFooterInfo
          in: query
          description: Indicates whether to include the header and footer information associated with the enrollment template. Set to true to retrieve this additional information.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved Waive Enrollment information. The response contains details about the enrollment waiver, including plan descriptions and relevant dates.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.WaiveEnrollmentInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.WaiveEnrollmentInfo'
    post:
      tags:
        - Enrollment
      summary: Submit Waive Enrollment information
      description: 'Submit Waive Enrollment information for a specific participant, allowing the user to either waive enrollment or cancel a previously waived enrollment.'
      operationId: Enrollment_SubmitWaiveEnrollment
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: isCancelWaivedEnrollment
          in: query
          description: Indicates whether to cancel a previously waived enrollment (true) or to waive enrollment (false). Defaults to false.
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully processed the waive enrollment request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentWaiveTpaIdEmployerIdParticipantIdPlanKeyPost200Application'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesEnrollmentWaiveTpaIdEmployerIdParticipantIdPlanKeyPost200Application'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: planKey
        in: path
        description: Plan Key
        required: true
        schema:
          type: integer
          format: int32
  /services/enrollment/anonymous:
    post:
      tags:
        - Enrollment
      summary: Check if a participant is allowed to do anyonymous enrollment
      description: This endpoint verifies whether a participant is permitted to enroll anonymously in the system. It is typically used to determine eligibility for anonymous enrollment based on the provided participant details.
      operationId: Enrollment_CheckAnonymousEnroll
      requestBody:
        description: Contains the details necessary to assess anonymous enrollment eligibility for a participant.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnonymousEnrollInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnonymousEnrollInfo'
      responses:
        '200':
          description: Successfully verified anonymous enrollment eligibility. The response includes the participant's enrollment information and validity status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnonymousEnrollInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnonymousEnrollInfo'
  '/services/enrollment/plans/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Enrollment
      summary: Get list of enrollment plan
      description: 'Retrieve a list of enrollment plans for a specific participant, identified by their unique TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining the available plans that a participant can enroll in or modify.'
      operationId: Enrollment_GetEmpeEnrollmentPlans
      parameters:
        - name: enrollmentDte
          in: query
          description: The date of enrollment to filter the plans. Format should be in YYYY-MM-DD.
          schema:
            type: string
        - name: hdhpEligibility
          in: query
          description: 'Indicates whether the participant is eligible for a High Deductible Health Plan (HDHP). Set to true if eligible, otherwise false.'
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of enrollment plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Enrollment-EnrollmentEmpePla'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Enrollment-EnrollmentEmpePla'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/enrollment/plan/{tpaId}/{employerId}/{participantId}/{planKey}':
    get:
      tags:
        - Enrollment
      summary: Get details of enrollment plan
      description: Get details of enrollment plan
      operationId: Enrollment_GetEmpeEnrollmentPlan
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentEmpePlan'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentEmpePlan'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: planKey
        in: path
        description: Plan Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/enrollment/plans/{tpaId}/{templateKey}':
    get:
      tags:
        - Enrollment
      summary: Get list of enrollment plan(needed for previewing the enrollment screen in WCA)
      description: 'Retrieve a list of enrollment plans associated with a specific TPA and template key, which is essential for previewing the enrollment screen in the WealthCare Admin (WCA) interface.'
      operationId: Enrollment_GetEnrollmentPlansForPreview
      parameters:
        - name: isPpTemplate
          in: query
          description: Indicates whether the template is a product partner template (true) or a TPA template (false). This helps in distinguishing the type of enrollment plan being requested.
          schema:
            type: boolean
        - name: numPlanReturn
          in: query
          description: 'Specifies the number of plan rows to return in the response. The default value is 20, allowing for pagination of results if more plans are available.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Enrollment-EnrollmentEmpePla'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Enrollment-EnrollmentEmpePla'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: templateKey
        in: path
        description: Template Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/enrollment/plan/{tpaId}/{templateKey}/{planKey}':
    get:
      tags:
        - Enrollment
      summary: Get details of enrollment plan(needed for previewing the enrollment screen in WCA)
      description: 'Retrieve detailed information about a specific enrollment plan, which is essential for previewing the enrollment screen in the WealthCare Application (WCA). This endpoint is typically used to display plan options to users during the enrollment process.'
      operationId: Enrollment_GetEnrollmentPlanForPreview
      parameters:
        - name: isPpTemplate
          in: query
          description: Indicates whether the enrollment plan is a product partner template (true) or a TPA template (false). This parameter helps differentiate between template types for accurate processing.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successful retrieval of enrollment plan details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentEmpePlan'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentEmpePlan'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: templateKey
        in: path
        description: Template Key
        required: true
        schema:
          type: integer
          format: int32
      - name: planKey
        in: path
        description: Plan Key
        required: true
        schema:
          type: integer
          format: int32
  /services/userinfo:
    get:
      tags:
        - Userinfo
      summary: Get currently logged in user (from User object) information
      description: 'Retrieve information about the currently logged-in user, including their unique identifiers and access rights. This endpoint is useful for applications that need to display user-specific data or manage user sessions.'
      operationId: Userinfo_GetUserinfo0921
      parameters:
        - name: validateOnly
          in: query
          description: Specifies whether to return user information (0) or not (1). Use this to validate the request without retrieving user data.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Successfully retrieved user information. The response contains details about the user, including their identifiers and access rights.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.UserInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.UserInfo'
  '/services/enrollment/plan/attributes/{tpaId}/{employerId}/{planKey}':
    get:
      tags:
        - Enrollment
      summary: Get plan enrollment attributes
      description: 'Retrieve the enrollment attributes for a specific plan, including details such as enrollment start and end dates, and additional options available for the plan.'
      operationId: Enrollment_GetEnrollmentPlanAttributes0617
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the plan enrollment attributes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.PlanEnrollmentAttribute'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.PlanEnrollmentAttribute'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - name: planKey
        in: path
        description: Plan Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/participant/accounts/coverageperiod/{tpaId}/{employerId}/{participantId}/{flexAcctId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get coverage periods details
      description: 'Retrieves a list of coverage periods associated with a specific benefit account, allowing users to view the details of coverage for employees and their dependents.'
      operationId: ParticipantAccount_GetFlexAccountCoveragePeriods
      parameters:
        - name: cardHolderType
          in: query
          description: 'Specifies the type of cardholder for which coverage period details are requested: 0 for All, 1 for Employee, and 2 for Dependent.'
          schema:
            enum:
              - All
              - Employee
              - Dependent
            type: string
        - name: dependentId
          in: query
          description: The unique identifier for the dependent whose coverage period details are being requested. This parameter is optional and is used when cardHolderType is set to Dependent.
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Indicates the preferred language for the response. Acceptable values are "es" for Spanish, "en" for English, and "fr" for French. If not specified, the response defaults to English. If a requested language does not have a translation for a specific field, the English value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0717-FlexAccountCoveragePeriodArray'
              example:
                - AcctHolderTypeCde: 0
                  AcctHolderId: 
                  AcctKey: 1212
                  Coveragekey: 536
                  FirstName: 
                  LastName: 
                  CoveragePeriodStartDate: '2023-01-01T08:00:00.0000000+00:00'
                  CoveragePeriodEndDate: '2024-01-01T08:00:00.0000000+00:00'
                  LifeEventType: 0001 - Marital Status - Marriage
                  AnnualElection: 500
                  IndividualAmt: 0
                  DisbYTD: 73.33
                  AvailBal: 426.67
                  PreauthBal: 0
                  DisbBal: 426.67
                  SuspendActivity: false
                  RecordType: Family
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0717-FlexAccountCoveragePeriodArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  '/services/participant/accounts/coveragetier/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get Account Coverage Tier
      description: Get Account Coverage Tier
      operationId: ParticipantAccount_GetAccountCovergeTier
      parameters:
        - name: flexaccountId
          in: query
          description: Flex Account Id
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountCoverageTier'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountCoverageTier'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/balancedue/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get Balance Due Accounts
      description: 'Retrieve the balance due accounts for a specific participant identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for obtaining the current financial obligations of a participant within the WealthCare system.'
      operationId: ParticipantAccount_GetBalanceDueAccounts
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the balance due accounts for the specified participant. The response contains an array of balance due account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-BalanceDueAccountInfoArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-BalanceDueAccountInfoArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/cards/cardreissuetext/{tpaId}':
    get:
      tags:
        - ParticipantCard
      summary: Get Card Re-Issuance option and text
      description: 'Retrieves the configuration for the "Display Card Re-issuance Text" setting, allowing customization of participant messaging regarding new card issuance.'
      operationId: ParticipantCard_GetCardReissueText
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the card re-issuance text configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardReissueText'
              example:
                CardReissueTextEnabled: true
                CardReissueTextValue: 'There may be a cost to issue a new card. For questions regarding possible costs, please contact your administrator.'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardReissueText'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/participant/cards/details/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCard
      summary: Get card details
      description: 'Retrieve detailed information about a participant''s card, including effective dates, activation status, and card status. This endpoint is essential for verifying card details and understanding the current status of a participant''s card.'
      operationId: ParticipantCard_GetCardDetails_0619
      parameters:
        - name: card
          in: query
          description: 'The Card Proxy Number, which can be obtained from the Get Card Summary API. This parameter is required to identify the specific card details being requested.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved card details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0619.CardDetails'
              example:
                ReissueCard: true
                EmployerID: QBSZXC
                EmployeeID: '123987123'
                DependentID: ''
                CardEffectiveDate: '20220829'
                CardExpireDate: '20280630'
                CardProxyNumber: '1100054076395241'
                CardLast4Digits: '5241'
                LastUpdatedDateTime: '2023-01-01T08:00:00.0000000+00:00'
                PrimaryCard: true
                CardStatusCode: New
                UserDefinedField: 
                CardStatusReasonCode: 3
                ShipmentTrackingNumber: 
                ActivationDate: '20221011'
                CardDesignID: PAYMENT
                MailedDate: 
                IssueDate: '20220829'
                PickDate: 0
                IssuedBy: CARDAGENT
                ShippingAddress: '123 Test Road, Clermont, FL 34711'
                ThermalFrontLogoID: QCard123
                CreationDate: '20220829'
                PINMailerRequestDate: 
                PINMailedDate: 
                PINMailerAddress: '123 Test Road, Clermont, FL 34711'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0619.CardDetails'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/cards/pin/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCard
      summary: Get card pin
      description: Get Card Pin - Display's the participant's pin for current issued card.
      operationId: ParticipantCard_GetCardPin
      parameters:
        - name: card
          in: query
          description: The proxy number of the card. This can be retrieved on the Get Card Summary API.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: asText
          in: query
          description: 'Indicate if the pin is return as an image or an integer. 0: pin returned as image, 1: pin returned as text, default to 0.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantCardsPinTpaIdEmployerIdParticipantIdGet200ApplicationJson'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantCardsPinTpaIdEmployerIdParticipantIdGet200ApplicationJson'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/cards/status/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - ParticipantCard
      summary: Update card status
      description: Update the status of a participant's card.
      operationId: ParticipantCard_UpdateCardStatus
      parameters:
        - name: card
          in: query
          description: Card Proxy Number
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: 'Status of the card to be changed to: New = 1, Active = 2, TempInactive = 3, PermInactive = 4, LostStolen = 5'
          required: true
          schema:
            enum:
              - All
              - New
              - Active
              - TempInactive
              - PermInactive
              - LostStolen
            type: string
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent. Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardSummary'
              example:
                EmployeeId: '123987123'
                DependentId: ''
                CardLast4Digits: '5241'
                CardProxyNumber: '1100054076395241'
                CardStatusCode: New
                NamePrefix: 
                FirstName: Madison
                MiddleInitial: 
                LastName: Test
                MailedDate: 
                CardIssueCde: 1
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardSummary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/cards/new/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - ParticipantCard
      summary: Issue new card
      description: 'This endpoint issues a new card for an employee or dependent, ensuring that no other card is in a new status for the same individual.'
      operationId: ParticipantCard_IssueNewCard
      parameters:
        - name: dep
          in: query
          description: The unique identifier for the dependent. Include this parameter if the card is being issued for a dependent rather than the employee.
          schema:
            type: string
        - name: status
          in: query
          description: Specifies the status of the card being issued. Defaults to 5 (Lost/Stolen) if not provided.
          schema:
            type: integer
            format: int32
        - name: Accept-Language
          in: header
          description: 'Indicates the participant’s preferred language for the response. Valid options are "es" for Spanish, "en" for English, and "fr" for French. If an invalid value is provided, the response defaults to English.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successful card issuance. The response contains details about the newly issued card.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardSummary'
              example:
                EmployeeId: '123987123'
                DependentId: ''
                CardLast4Digits: '7795'
                CardProxyNumber: '1100054179507795'
                CardStatusCode: All
                NamePrefix: 
                FirstName: Rhys
                MiddleInitial: 
                LastName: TEST
                MailedDate: 
                CardIssueCde: 2
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardSummary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/cards/summary/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCard
      summary: Get cards summary
      description: 'Retrieve a summary of all cards associated with a specific participant and their dependents, if applicable. This operation is useful for obtaining card details such as status and identification for both employees and their dependents.'
      operationId: ParticipantCard_GetCardsSummary0521
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. If Spanish or French is requested and a particular field lacks a translated value, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - name: filterflag
          in: query
          description: Determines whether to filter out cards marked as Do Not Issue or in a Permanently Inactive status. Set to true (1) to exclude these cards from the response; set to false (0) to include them.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0521-CardSummaryArray'
              example:
                - MobileWalletEnabled: false
                  EmployeeId: '123987123'
                  DependentId: 123987123-01
                  CardLast4Digits: '0402'
                  CardProxyNumber: '1100054158600402'
                  CardStatusCode: 1
                  NamePrefix: 
                  FirstName: Madison
                  MiddleInitial: 
                  LastName: Test
                  MailedDate: '        '
                  CardIssueCde: 2
                  ActivationDate: 
                  IssueDate: '20221014'
                - MobileWalletEnabled: false
                  EmployeeId: '123987123'
                  DependentId: 
                  CardLast4Digits: '5241'
                  CardProxyNumber: '1100054076395241'
                  CardStatusCode: 2
                  NamePrefix: 
                  FirstName: Rhys
                  MiddleInitial: 
                  LastName: Test
                  MailedDate: 
                  CardIssueCde: 3
                  ActivationDate: '20221011'
                  IssueDate: '20220829'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0521-CardSummaryArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/claims/{tpaId}/{employerId}/{participantId}/{trackingNumber}':
    get:
      tags:
        - ParticipantClaims
      summary: Get claim submittal form
      description: 'Retrieve the claim submittal form for printing by the user, allowing for easy submission of claims.'
      operationId: ParticipantClaims_GetClaimSubmittalFormInfo
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the claim submittal form.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ClaimSubmittalFormInfo'
              example:
                TpaId: T02506
                HasFaxRoutingFeature: true
                TrackingNumber: '22114'
                BarCodeStream: U3dhZ2dlciByb2Nrcw==
                BarCodeSymbologyType: 0
                ReceiptInstruction: Reciept
                ParticipantClaimList:
                  - TpaId: T02506
                    EmployerId: 
                    TransactionDate: 
                    ServiceStartDate: '2023-01-01T08:00:00.0000000+00:00'
                    ServiceEndDate: '2023-01-01T08:00:00.0000000+00:00'
                    Type: Claim
                    Claimant:
                      TpaId: 
                      EmprId: 
                      CardholderKey: 570
                      LastName: TEST
                      FirstName: Rhys
                      SocSecNum: 
                      NamePrefix: 
                      Initial: 
                      CardholderTypeCde: 0
                      CardNum: 
                    AcctTypeCde: 
                    AcctTypeDesc: 
                    AccountKey: 
                    PlanStartDate: 
                    PlanEndDate: 
                    Status: 
                    TxnAmt: 5
                    FlexAcctKey: 
                    TxnAmtOrig: 
                    TxnAmtDenied: 
                    TxnAmtPending: 
                    TxnCde: 
                    TxnMsg: 
                    TxnAmtRefund: 
                    TxnOriginCde: 
                    TxnOptions: 
                    CardHolderDisplay: 
                    ProviderId: 
                    ProviderDesc: 
                    FileKey: -1
                    HasReceipt: 
                    ReceiptExpired: 
                    ReceiptsInfo: 
                    DisplayableFields: 
                    InsertDate: 
                    UpdateDte: 
                    InsertUserIdKey: 
                    UpdateUserIdKey: 
                    ExpenseKey: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ClaimSubmittalFormInfo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: trackingNumber
        in: path
        description: Number you assigned to track export of the claim or QLE back to your own application.
        required: true
        schema:
          type: string
  '/registration/adminoptions/{tpaId}':
    get:
      tags:
        - Registration
      summary: Get Administrator Options
      description: Retrieve the administrator options for a specific TPA (Third Party Administrator) identified by the `tpaId`. This endpoint is useful for administrators to understand the configurable options available for their instance.
      operationId: Registration_GetAdminOptions_0219
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved administrator options.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.AdminOptionsInfo'
              example:
                TpaOption: All
                TpaOptionExt: All
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.AdminOptionsInfo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/registration/userinfo/{user}':
    get:
      tags:
        - Registration
      summary: Get user info
      description: Retrieve the current user's information based on their username. This operation is typically used to fetch user details for display or processing in applications.
      operationId: Registration_GetUserInfo
      responses:
        '200':
          description: 'OK - The request was successful, and the user''s information is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0423.UserInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0423.UserInfo'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/services/product/item/lookup/{tpaId}/{employerId}/{participantId}/{productCode}':
    get:
      tags:
        - Product
      summary: Search item which is eligible to be purchased using funds from an FSA/HRA/HSA/etc
      description: 'Retrieve information about a specific product item that can be purchased using funds from flexible spending accounts (FSA), health reimbursement arrangements (HRA), health savings accounts (HSA), or similar accounts. This endpoint is useful for determining product eligibility based on the provided identifiers.'
      operationId: Product_LookupItem
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successful retrieval of product item information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesProductItemLookupTpaIdEmployerIdParticipantIdProductCodeGet200Applic'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesProductItemLookupTpaIdEmployerIdParticipantIdProductCodeGet200Applic'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: productCode
        in: path
        description: It's a string UPC(12 digits) or GTIN(14 digits) value
        required: true
        schema:
          type: string
  '/services/qwasi/{id}':
    get:
      tags:
        - Qwasi
      summary: Qwasi_Get
      description: Retrieve detailed information from the Qwasi service using a specific identifier. This endpoint is typically used to obtain data related to a particular service instance.
      operationId: Qwasi_Get
      responses:
        '200':
          description: Successful retrieval of the requested Qwasi information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesQwasiIdGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesQwasiIdGet200ApplicationXmlResponse'
    parameters:
      - name: id
        in: path
        description: Format - int32.
        required: true
        schema:
          type: integer
          format: int32
  /services/qwasi/balance:
    post:
      tags:
        - Qwasi
      summary: Qwasi Balance Request
      description: Initiates a request to retrieve the balance information for a specific participant using their unique identifiers. This operation is typically used to check the current balance available in a participant's account.
      operationId: Qwasi_PostBalance
      requestBody:
        description: 'Contains the details required to process the Qwasi balance request, including unique identifiers for the participant.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Rest.Models.Partners.QwasiBalanceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Rest.Models.Partners.QwasiBalanceRequest'
      responses:
        '204':
          description: 'Indicates that the balance request was successfully processed, but there is no content to return. This response confirms that the operation was completed without errors.'
  /services/qwasi/status:
    post:
      tags:
        - Qwasi
      summary: Qwasi Status Uri
      description: Update the Qwasi status for a participant using their unique identifiers. This endpoint is typically used to register or unregister a mobile number for notifications.
      operationId: Qwasi_PostStatus
      requestBody:
        description: Qwasi Status Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Rest.Models.Partners.QwasiStatusRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Rest.Models.Partners.QwasiStatusRequest'
      responses:
        '204':
          description: 'No Content - The request was successful, and the Qwasi status has been updated without returning any content.'
  /services/qwasi/test:
    post:
      tags:
        - Qwasi
      summary: Qwasi Status Uri
      description: 'Submits a request to check the status of a Qwasi operation, allowing for the retrieval of relevant information based on the provided details.'
      operationId: Qwasi_PostTest
      requestBody:
        description: 'Contains the details necessary to perform a Qwasi status check, including unique identifiers and opt-in status.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Rest.Models.Partners.QwasiTestRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Rest.Models.Partners.QwasiTestRequest'
      responses:
        '200':
          description: 'Successfully processed the request, returning the Qwasi status information.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesQwasiTestPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesQwasiTestPost200ApplicationJsonResponse'
  '/services/repayment/achaccounts/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Repayment
      summary: Get list of ACH Bank Account
      description: Get list of ACH Bank Account
      operationId: Repayment_GetACHAccounts
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepaymentBankAccountArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepaymentBankAccountArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/repayment/balance/alert/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Repayment
      summary: Get the ineligible charge balance notification
      description: Get the ineligible charge balance notification
      operationId: Repayment_GetIneligibleChargeBalanceAlert_0921
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: planYear
          in: query
          description: 'Plan Year 0: All, 1: Current Year, 2: Previous Year'
          schema:
            enum:
              - None
              - ALL
              - Current
              - Previous
              - Future
              - Active
              - CurrentAndFuture
            type: string
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentBalanceDueAlert'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentBalanceDueAlert'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/repayment/customtext/avoidoverpaymenttips/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Repayment
      summary: Get the Avoid Overpayment Tips Custom Text set from the Online Balance Repayment Template in WCA.
      description: 'Retrieve the custom text for Avoid Overpayment Tips from the Online Balance Repayment Template in the WealthCare Admin (WCA) system, tailored for a specific participant.'
      operationId: Repayment_GetAvoidOverpaymentTipsCustomText
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. If a requested language lacks a translation, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successful retrieval of custom text for Avoid Overpayment Tips.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentCustomtextAvoidoverpaymenttipsTpaIdEmployerIdParticipantIdG'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentCustomtextAvoidoverpaymenttipsTpaIdEmployerIdParticipantIdG'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/repayment/customtext/authorization/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Repayment
      summary: Get the Authorization Custom Text set from the Online Balance Repayment Template in WCA.
      description: 'Retrieve the Authorization Custom Text configured in the Online Balance Repayment Template for a specific participant, identified by TPA ID, Employer ID, and Participant ID. This endpoint is useful for displaying customized messages related to repayment options in the WealthCare Portal.'
      operationId: Repayment_GetAuthorizationCustomText
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: selectedDepositAccountName
          in: query
          description: The name of the deposit account selected by the participant for repayment. This parameter helps in retrieving the relevant custom text associated with the specified account.
          schema:
            type: string
        - name: paymentAmount
          in: query
          description: 'The amount intended for payment, represented as a double. This value is used to determine any specific custom text related to the payment amount.'
          schema:
            type: number
            format: double
        - name: Accept-Language
          in: header
          description: 'Indicates the participant’s preferred language for the response. Valid values are "es" for Spanish, "en" for English, and "fr" for French. If the specified language does not have a translation for a field, the English text will be returned by default.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the custom text for authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentCustomtextAuthorizationTpaIdEmployerIdParticipantIdGet200Ap'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentCustomtextAuthorizationTpaIdEmployerIdParticipantIdGet200Ap'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/repayment/customtext/confirmation/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Repayment
      summary: Get the confirmation custom text
      description: 'Retrieve the custom confirmation text for a specific participant''s repayment process, identified by their unique TPA ID, Employer ID, and Participant ID.'
      operationId: Repayment_GetConfirmationCustomText
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: paymentAmount
          in: query
          description: The amount that needs to be paid in the repayment process. This value is used to tailor the confirmation text based on the payment amount.
          schema:
            type: number
            format: double
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. The API will return text in the specified language (Spanish, French, or English). If the requested language is unavailable for a specific field, the English text will be returned by default.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the custom confirmation text.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentCustomtextConfirmationTpaIdEmployerIdParticipantIdGet200App'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentCustomtextConfirmationTpaIdEmployerIdParticipantIdGet200App'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/repayment/repay/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - Repayment
      summary: Insert repayment by selected transactions
      description: Update the repayment status for selected transactions associated with a participant. This operation is used to process repayments and will return any transactions that are ineligible for repayment along with error messages.
      operationId: Repayment_RepayTransactions
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A list of repayment transactions that the participant wishes to process. Each transaction must include a settlement sequence number and date.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepaymentTransactionArray'
            example:
              - SeqNum: 0
                SetlDte: string
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepaymentTransactionArray'
      responses:
        '200':
          description: Successful repayment processing. The response contains the details of the transactions that were successfully repaid as well as any ineligible transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepayTxnArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepayTxnArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/repayment/submit/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Repayment
      summary: Get the list of Repayment request
      description: Get the list of Repayment request
      operationId: Repayment_GetRepaymentRequestList
      parameters:
        - name: planYear
          in: query
          description: Plan Year
          schema:
            enum:
              - None
              - ALL
              - Current
              - Previous
              - Future
              - Active
              - CurrentAndFuture
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepaymentRequestArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Transaction-RepaymentRequestArray'
    post:
      tags:
        - Repayment
      summary: Submit the repayment request
      description: Submit the repayment request
      operationId: Repayment_SubmitRepaymentRequest
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Repayment Request Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentSubmitTpaIdEmployerIdParticipantIdPost200ApplicationJsonRes'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesRepaymentSubmitTpaIdEmployerIdParticipantIdPost200ApplicationJsonRes'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/tpa/commoncodetier/{tpaId}/{commonCodeType}':
    get:
      tags:
        - CommonCodeTier
      summary: Gets Common Code Tier Type Lists
      description: Retrieve a list of common code tier types associated with a specific TPA and common code type. This operation is useful for obtaining the available tier types for service categories in the WealthCare system.
      operationId: CommonCodeTier_GetCommonCodeTierTypeList
      responses:
        '200':
          description: Successfully retrieved the common code tier type list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: commonCodeType
        in: path
        description: Common Code Type. Valid value for ServiceCategory = 1.
        required: true
        schema:
          type: integer
          format: int32
  '/services/tpa/commoncodetier/{tpaId}/{tierTypeKey}/{commonCodeType}':
    get:
      tags:
        - CommonCodeTier
      summary: Gets Common Code Tier Type
      description: 'Retrieves the details of a specific Common Code Tier Type based on the provided identifiers, enabling clients to understand the structure and categorization of service tiers.'
      operationId: CommonCodeTier_GetCommonCodeTierType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
    delete:
      tags:
        - CommonCodeTier
      summary: Delete Common Code Tier
      description: 'Deletes a specific Common Code Tier identified by the TPA ID, Tier Type Key, and Common Code Type. This operation is used to remove a Common Code Tier from the system when it is no longer needed.'
      operationId: CommonCodeTier_DeleteCommonCodeTierType
      responses:
        '200':
          description: Successfully deleted the Common Code Tier. The response contains the details of the deleted Common Code Tier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: tierTypeKey
        in: path
        description: Tier Type Key. Unique identifier for the Common Code Tier Type.
        required: true
        schema:
          type: integer
          format: int32
      - name: commonCodeType
        in: path
        description: Common Code Type. Valid value for ServiceCategory = 1.
        required: true
        schema:
          type: integer
          format: int32
  /services/tpa/commoncodetier/saveservicecategorytiertype:
    put:
      tags:
        - CommonCodeTier
      summary: Save Tier Type Info
      description: 'Update the details of a specific Common Code Tier Type, identified by its unique identifiers. This operation is typically used to modify tier type information such as descriptions or associated service categories.'
      operationId: CommonCodeTier_SaveServiceCategoryTierType
      requestBody:
        description: 'Common Code Tier Type Details, which include various attributes related to the tier type being updated.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
      responses:
        '200':
          description: Successfully updated the Common Code Tier Type. The response contains the updated tier type details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType'
  '/services/enrollment/beneficiaries/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - Enrollment
      summary: Save multiple beneficiary details
      description: 'Update the details of multiple beneficiaries for a specific participant, identified by TPA ID, Employer ID, and Participant ID. This operation is useful for managing beneficiary information in bulk, such as adding or modifying beneficiaries in response to life events or policy changes.'
      operationId: Enrollment_SaveBeneficiaries
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiaries'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiaries'
        required: true
      responses:
        '200':
          description: Successfully saved beneficiary details. The response contains the updated information of the beneficiaries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/user/password/{tpaId}':
    put:
      tags:
        - User
      summary: Reset user's password by providing Security Answers
      description: This endpoint allows users to reset their password by providing the correct answers to their security questions. It is typically used when a user has forgotten their password and needs to regain access to their account.
      operationId: User_ResetPassword
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Reset Password Request Body containing the user's new password and their security question answers. This data is essential for verifying the user's identity before allowing a password reset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.ResetPasswordReq'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.ResetPasswordReq'
      responses:
        '200':
          description: Successfully reset the user's password. The response confirms that the password has been updated and the user can now log in with the new credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesUserPasswordTpaIdPut200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesUserPasswordTpaIdPut200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/user/password/oob/{tpaId}':
    put:
      tags:
        - User
      summary: Reset user's password by providing OOB OTP token
      description: This endpoint allows you to reset a user's password using an Out-of-Band (OOB) One-Time Password (OTP) token. It is typically used when a user has requested a password reset and has received an OTP via SMS or email.
      operationId: User_ResetPasswordOob
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'The request body contains the necessary information to reset the user''s password, including the new password and the OTP token received by the user.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.ResetPasswordReq'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.ResetPasswordReq'
      responses:
        '200':
          description: Successfully resets the user's password. The response indicates that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesUserPasswordOobTpaIdPut200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesUserPasswordOobTpaIdPut200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/user/username/{tpaId}':
    post:
      tags:
        - User
      summary: Providing Email and receiving email containing user's username
      description: This endpoint allows users to submit their email address and receive an email containing their username associated with that email. It is typically used for account recovery or username retrieval purposes.
      operationId: User_RetrieveUserName
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'The request body must contain user information, specifically the email field, which is used to identify the user and send the username.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.UserInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.UserInfo'
      responses:
        '200':
          description: 'OK - The request was successful, and the username has been sent to the provided email address.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesUserUsernameTpaIdPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesUserUsernameTpaIdPost200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/user/unlock/oob/{tpaId}':
    put:
      tags:
        - User
      summary: Unlock user account
      description: Unlocks a user account that is temporarily inactive due to three failed login attempts. This operation is essential for restoring access to users who have been locked out.
      operationId: User_UnlockUserAccount
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.UnlockUserReq'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.UnlockUserReq'
        required: true
      responses:
        '200':
          description: 'Successfully unlocked the user account. The response will contain an empty object, indicating that the operation was completed without errors.'
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
      x-codegen-request-body-name: unlockUserReq
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/userinfo/{tpaId}/{employerId}/{participantId}':
    delete:
      tags:
        - Userinfo
      summary: Delete User
      description: Delete User
      operationId: Userinfo_Deleteuser
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /services/vendors/drugs:
    get:
      tags:
        - Drugs
      summary: Get List of Drugs
      description: 'Retrieve a list of drugs based on optional search criteria, such as drug name or NDC (National Drug Code). This endpoint is useful for applications that need to display or search for available drugs in the system.'
      operationId: Drugs_GetAsync
      parameters:
        - name: search.name
          in: query
          description: The name of the drug to search for. This parameter allows for partial matches and is case-insensitive.
          schema:
            type: string
        - name: search.ndc
          in: query
          description: The National Drug Code (NDC) of the drug. This parameter must be a valid NDC format and is used for precise drug identification.
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully retrieved the list of drugs. The response contains an array of drug objects, each representing a drug''s details including its name, strength, and other relevant attributes.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Vendors-Services-Drugs-Models-DrugArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Vendors-Services-Drugs-Models-DrugArray'
  /services/vendors/drugs/pricing:
    get:
      tags:
        - Drugs
      summary: Get drug pricings by pharmacy.
      description: Get drug pricings by pharmacy.
      operationId: Drugs_PricingGetAsync
      parameters:
        - name: search.days
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
        - name: search.distance
          in: query
          description: Distance
          schema:
            type: integer
            format: int32
        - name: search.maxPharmacies
          in: query
          description: Max pharmacies
          schema:
            type: integer
            format: int32
        - name: search.ndcs
          in: query
          description: ndcs
          schema:
            type: string
        - name: search.qty
          in: query
          description: Quantity
          schema:
            type: integer
            format: int32
        - name: search.zipCode
          in: query
          description: Zip code
          schema:
            type: string
        - name: search.latitude
          in: query
          description: Latitude
          schema:
            type: number
            format: double
        - name: search.longitude
          in: query
          description: Longitude
          schema:
            type: number
            format: double
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Vendors-Services-Drugs-Models-DrugPricingArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Vendors-Services-Drugs-Models-DrugPricingArray'
  /services/vendors/locations:
    get:
      tags:
        - Locations
      summary: Get listed search result for Service Provider Locations
      description: 'Retrieve a list of service provider locations based on specified search criteria, such as address, distance, and location types.'
      operationId: Locations_SearchAsync
      parameters:
        - name: search.page
          in: query
          description: 'The page number of the results to retrieve, useful for pagination of large result sets.'
          schema:
            type: integer
            format: int32
        - name: search.address
          in: query
          description: The address to search for service provider locations. This can be a full address or a partial string.
          schema:
            type: string
        - name: search.distance
          in: query
          description: The maximum distance (in miles) from the specified latitude and longitude to search for locations.
          schema:
            type: integer
            format: int32
        - name: search.locationTypes
          in: query
          description: 'A comma-separated list of location types to filter the search results, such as ''hospital'', ''clinic'', etc.'
          schema:
            type: string
        - name: search.longitude
          in: query
          description: The longitude coordinate used as a reference point for the location search.
          schema:
            type: number
            format: double
        - name: search.latitude
          in: query
          description: The latitude coordinate used as a reference point for the location search.
          schema:
            type: number
            format: double
        - name: search.minRating
          in: query
          description: The minimum rating (on a scale of 1 to 5) that a service provider must have to be included in the search results.
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Successfully retrieved the list of service provider locations based on the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Vendors.Services.Locations.Models.LocationSearchResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Vendors.Services.Locations.Models.LocationSearchResult'
  /services/vendors/pharmacies:
    get:
      tags:
        - Pharmacies
      summary: Get listed search result for Pharmacy Locations
      description: 'Retrieve a list of pharmacy locations based on specified search criteria, such as distance, zip code, or pharmacy name.'
      operationId: Pharmacies_GetAsync
      parameters:
        - name: search.maxPharmacies
          in: query
          description: Specifies the maximum number of pharmacy locations to return in the response. This parameter helps limit the results to a manageable size.
          schema:
            type: integer
            format: int32
        - name: search.distance
          in: query
          description: Defines the search radius in miles from the specified location. This parameter is essential for filtering pharmacies within a certain distance.
          schema:
            type: integer
            format: int32
        - name: search.zipCode
          in: query
          description: The zip code used to narrow down the search for pharmacies. This parameter is crucial for ensuring the results are relevant to the user's location.
          schema:
            type: string
        - name: search.pharmacyName
          in: query
          description: The name of the pharmacy to search for. This parameter allows users to find specific pharmacies by name.
          schema:
            type: string
        - name: search.latitude
          in: query
          description: The latitude coordinate used to define the center point for the search. This parameter is used in conjunction with longitude to pinpoint the search area.
          schema:
            type: number
            format: double
        - name: search.longitude
          in: query
          description: The longitude coordinate used to define the center point for the search. This parameter is essential for accurately locating pharmacies based on geographic coordinates.
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Successfully retrieved a list of pharmacies matching the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Vendors-Services-Pharmacies-Models-PharmacyArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Vendors-Services-Pharmacies-Models-PharmacyArray'
  /services/vendors/providers:
    get:
      tags:
        - Providers
      summary: Get list of Service Providers
      description: 'Retrieve a list of service providers based on various search criteria, allowing users to find suitable providers for their needs.'
      operationId: Providers_SearchAsync
      parameters:
        - name: search.page
          in: query
          description: 'The page number of the results to retrieve, formatted as an integer (int32). This parameter is useful for pagination of results.'
          schema:
            type: integer
            format: int32
        - name: search.address
          in: query
          description: The address to search for service providers. This parameter helps narrow down the search to specific locations.
          schema:
            type: string
        - name: search.specialityIds
          in: query
          description: A comma-separated list of specialty IDs to filter the search results. This allows users to find providers with specific qualifications.
          schema:
            type: string
        - name: search.speciality
          in: query
          description: The specialty to search for among service providers. This parameter helps users find providers based on their specific medical needs.
          schema:
            type: string
        - name: search.insuranceIds
          in: query
          description: A comma-separated list of insurance IDs to filter the results. This ensures that the returned providers accept the specified insurance plans.
          schema:
            type: string
        - name: search.name
          in: query
          description: The name of the service provider to search for. This parameter allows users to find specific providers by name.
          schema:
            type: string
        - name: search.locationIds
          in: query
          description: A comma-separated list of location IDs to filter the search results. This helps in finding providers in specific areas.
          schema:
            type: string
        - name: search.latitude
          in: query
          description: The latitude coordinate for location-based searches. This parameter is used in conjunction with longitude to pinpoint specific areas.
          schema:
            type: number
            format: double
        - name: search.longitude
          in: query
          description: The longitude coordinate for location-based searches. This parameter is used alongside latitude to identify specific locations.
          schema:
            type: number
            format: double
        - name: search.npis
          in: query
          description: A comma-separated list of National Provider Identifiers (NPIs) to filter the search results. This allows users to find providers by their unique identifiers.
          schema:
            type: string
        - name: search.minConfidence
          in: query
          description: 'The minimum confidence level for the search results, formatted as an integer (int32). This parameter helps in filtering results based on the reliability of the match.'
          schema:
            type: integer
            format: int32
        - name: search.excludeAddress
          in: query
          description: An address to exclude from the search results. This parameter helps refine the search by omitting specific locations.
          schema:
            type: string
        - name: search.excludeSpecialityIds
          in: query
          description: A comma-separated list of specialty IDs to exclude from the search results. This allows users to filter out providers with certain specialties.
          schema:
            type: string
        - name: search.excludeSpeciality
          in: query
          description: A specialty to exclude from the search results. This parameter helps users avoid providers with specific qualifications.
          schema:
            type: string
        - name: search.excludeInsuranceIds
          in: query
          description: A comma-separated list of insurance IDs to exclude from the search results. This ensures that the returned providers do not accept the specified insurance plans.
          schema:
            type: string
        - name: search.excludeName
          in: query
          description: A name to exclude from the search results. This parameter allows users to filter out specific providers by name.
          schema:
            type: string
        - name: search.excludeLocationIds
          in: query
          description: A comma-separated list of location IDs to exclude from the search results. This helps in avoiding providers in certain areas.
          schema:
            type: string
        - name: search.excludeLocation
          in: query
          description: A location to exclude from the search results. This parameter allows users to filter out providers based on specific locations.
          schema:
            type: string
        - name: search.excludeNpis
          in: query
          description: A comma-separated list of NPIs to exclude from the search results. This allows users to avoid specific providers by their unique identifiers.
          schema:
            type: string
        - name: search.excludeMinConfidence
          in: query
          description: A minimum confidence level to exclude from the search results. This parameter helps in filtering out results that do not meet a certain reliability threshold.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of service providers based on the specified search criteria. The response contains a paginated list of providers along with relevant metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderSearchResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderSearchResult'
  '/services/vendors/providers/{npi}':
    get:
      tags:
        - Providers
      summary: Get Specified Service Provider
      description: 'Retrieve detailed information about a specific service provider using their National Provider Identifier (NPI). This endpoint is useful for obtaining provider details such as qualifications, specialties, and contact information.'
      operationId: Providers_GetAsync
      responses:
        '200':
          description: Successfully retrieved the provider's information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.Provider'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.Provider'
    parameters:
      - name: npi
        in: path
        description: National Provider Identifier
        required: true
        schema:
          type: string
  '/services/participant/claims/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantClaims
      summary: Get list of claims
      description: 'Retrieve a list of claims associated with a specific participant, identified by their unique TPA ID, Employer ID, and Participant ID.'
      operationId: ParticipantClaims_GetParticipantClaims_0717
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: opt
          in: query
          description: 'Indicates whether to mask certain information on claims for dependents. Use 0 to not mask, 1 to mask provider information, or 2 to mask only if Dependency Privacy is enabled.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successfully retrieved the list of claims.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0717-ParticipantClaimArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0717-ParticipantClaimArray'
    post:
      tags:
        - ParticipantClaims
      summary: Submit manual claims
      description: 'Submit one or more manual claims for reimbursement, allowing participants to report eligible expenses incurred during a specified service period.'
      operationId: ParticipantClaims_AddParticipantClaims
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: org
          in: query
          description: Code used to indicate the origin of the claim. Use 0 for regular claims from mobile apps and 4 for regular claims from the member portal.
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1125.SubmitManualClaimsWithReceipt'
            example:
              Claims:
                - EventName: ''
                  IsESignatureClaim: true
                  TpaId: T02506
                  EmployerId: QBSZXC
                  ServiceStartDate: '2023-01-01T08:00:00.0000000+00:00'
                  ServiceEndDate: '2023-01-01T08:00:00.0000000+00:00'
                  Claimant:
                    TpaId: T02506
                    EmprId: ''
                    CardholderKey: 570
                    LastName: TEST
                    FirstName: Rhys
                    SocSecNum: 
                    NamePrefix: 
                    Initial: 
                    CardholderTypeCde: 0
                    CardNum: 
                  AcctTypeCde: 
                  AccountKey: -1
                  TxnAmt: 5
                  FlexAcctKey: 1212
                  ProviderId: 
                  ProviderDesc: 
                  TrackingNum: '2284'
                  ClaimDesc: 
                  ReimbModeCde: 
                  ScCde: 
                  Notes: 
                  FileKey: -1
                  Receipt: 
                  PayProviderKey: -1
                  PatientIdNum: 
                  ExpenseKey: -1
                  ClaimId: 
                  BenefitMaxMetAmount: 0
                  RbbExcessAmount: 0
                  NotCoveredAmount: 0
                  AboveRcAmount: 0
                  DeductibleAmount: 0
                  CoinsuranceAmount: 0
                  CoPayAmount: 0
                  ExternalClaimNumber: 
                  ClaimReceivedDate: 
                  RecurrenceFrequency: 0
                  RecurrenceStartDte: '2023-01-01T08:00:00.0000000+00:00'
                  RecurrenceEndDte: '2023-01-01T08:00:00.0000000+00:00'
                  TotalNoOfPayments: 0
                  ScTierKey: 0
                  AIReimbursementAnalysis:
                    EligibleForReimbursement: false
                    UserModified: false
                    ConfidenceScoreLimit: true
                  ExtractionReferenceID: T0000-100
              SingleReceipt: true
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1125.SubmitManualClaimsWithReceipt'
      responses:
        '200':
          description: Successful submission of claims. The response contains the details of the processed claims.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-ParticipantClaimArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-ParticipantClaimArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/claims/{tpaId}/{employerId}/{participantId}/claim':
    get:
      tags:
        - ParticipantClaims
      summary: Get Participant claim
      description: Get Participant claim
      operationId: ParticipantClaims_GetParticipantClaim_2106
      parameters:
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - name: claimkey
          in: query
          description: Format - int64. Claim Key
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/decryptQuery'
        - name: opt
          in: query
          description: "0: UnMask all dependent provider information. 1: Mask all dependent provider information. 2: Mask dependent provider information based on dependent privacy, default to 0.\n"
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/claims/claimentrytemplate/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantClaims
      summary: Get claim entry template
      description: 'Retrieve the claim entry template and associated data for a specific participant, identified by TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining the necessary information to assist participants in submitting claims accurately.'
      operationId: ParticipantClaims_GetParticipantClaimEntryTemplate_1121
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: planYear
          in: query
          description: 'Specifies the plan year to determine the relevant service category codes for the participant’s claim entry. Acceptable values include: All (0), Current (1), Previous (2), Future (3), Active (4).'
          schema:
            enum:
              - None
              - ALL
              - Current
              - Previous
              - Future
              - Active
              - CurrentAndFuture
            type: string
        - name: Accept-Language
          in: header
          description: 'Indicates the participant’s language preference for the response. Valid options are Spanish (es), English (en), and French (fr). If an invalid value is provided or not specified, the response defaults to English. Note: If a requested language lacks a translation for a specific field, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.ParticipantClaimEntryTemplate'
              example:
                Key: 4
                FormInstructions: (Instructions Here)
                DefaultCertificationText: Please confirm that the claim and receipts attached are for a valid medical expense.&nbsp;<br />
                ConfirmationText: Confirmation would be here
                ItemInstructionsText: Instructions Text under "Claim Items"
                ReimbursementMethod: 
                AccountType: 
                ServiceCategoryCode: 
                Notes: 
                ReceiptsFileType: 14568
                ReceiptInstructionText: Receipt
                BarCodeSymbology: 4
                DisplayableFields:
                  - OriginalFieldName: form_instructions_text
                    AlternativeFieldName: 
                    DisplayOptions: 0
                    DisplaySpecifications: 0
                ParticipantClaimEntryTemplateData:
                  Claimants:
                    - TpaId: T02506
                      EmprId: QBSZXC
                      CardholderKey: 570
                      LastName: TEST
                      FirstName: Rhys
                      SocSecNum: 
                      NamePrefix: 
                      Initial: 
                      CardholderTypeCde: 1
                      CardNum: 
                  ReimbursementMethod:
                    - 
                  ServiceCategoryCodes: 
                  AccountsInfo:
                    - FlexAccountKey: 1212
                      AccountType: FSA
                      PlanStartDate: '20220101'
                      PlanEndDate: '20221231'
                      AccountTypeOptions: 196608
                      ProductPartnerId: 
                      ServiceCategoryCodes: 
                  SCCDirectSubmit: 
                AllowPayProvider: true
                DeductibleAmount: 0
                CoinsuranceAmount: 0
                CopayAmount: 0
                AllowESignature: true
                ESignatureOptionLabel: Provider e-Signature
                ESignatureDescription: Avoid sending a receipt by having your provider certify the claim with an electronic signature on your device.
                ESignatureAgreement: 'I, as the service provider, certify that the charges listed above are accurate and were incurred during the services dates specified. I hereby provide my electronic signature as acknowledgement.'
                DocumentationLabel: Add Documentation
                HelpTextLinkLabel: Documentation Help
                DocumentationSubstantiationHelpText: 'You must provide an itemized receipt which includes provider, dates of services, amounts and the individual services provided.'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.ParticipantClaimEntryTemplate'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/getfuturerecurringpayments/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get Future Recurring Payments
      description: Get future recurring payments.
      operationId: Transactions_GetFutureRecurringPayments
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_1121-Transaction-FutureRecurringPaymentsArr'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_1121-Transaction-FutureRecurringPaymentsArr'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /registration/createuser:
    post:
      tags:
        - Registration
      summary: Create a user account
      description: 'Create a new user account in the system, allowing users to access WealthCare services and features.'
      operationId: Registration_CreateUser0218
      requestBody:
        description: 'Create User Request Details, which includes all necessary information for user registration.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.CreateUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.CreateUserRequest'
      responses:
        '200':
          description: 'Successfully created a user account, returning the status and response details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.CreateUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.CreateUserResponse'
  '/registration/employeeidnotes/{tpaId}/{employerId}':
    get:
      tags:
        - Registration
      summary: Get Employee ID Label and Help Text
      description: Retrieve the custom label and help text associated with the Employee ID for a specific TPA and employer. This endpoint is useful for displaying user-friendly information in member portals or applications.
      operationId: Registration_GetEmployeeIDNotes
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the Employee ID notes, including the label and help text.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.EmployeeIDNotes'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.EmployeeIDNotes'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
  '/registration/employers/{tpaId}':
    get:
      tags:
        - Registration
      summary: Get a list of Employer Names and IDs
      description: Retrieve a list of employer names and their corresponding IDs associated with a specific TPA (Third Party Administrator) identifier. This operation is useful for applications that need to display or utilize employer information for further processing or reporting.
      operationId: Registration_GetEmployerInformations
      parameters:
        - name: searchText
          in: query
          description: A filter to match Employer Names. This parameter is optional and can be used to narrow down the results based on specific employer name criteria.
          schema:
            type: string
        - name: maxRows
          in: query
          description: 'Maximum number of records to return. This parameter is optional, with a default value of 15,000. Use it to limit the size of the response for performance optimization.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'OK - The request was successful, and the response contains a list of employer information.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-EmployerInfoArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-EmployerInfoArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /registration/searchEmployee:
    post:
      tags:
        - Registration
      summary: Search Employee (Registration)
      description: 'Search for one or more employees based on specified criteria, such as name and location.'
      operationId: Registration_SearchEmployee_0522
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.RegistrationSearch'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.RegistrationSearch'
      responses:
        '200':
          description: Successfully retrieved employee information based on the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0522.RegistrationEmployee'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0522.RegistrationEmployee'
  /registration/sendCodeEmail:
    post:
      tags:
        - Registration
      summary: Send a verification code to an email address for the user to validate.
      description: 'Sends a verification code to the specified email address, allowing the user to validate their identity during the registration process.'
      operationId: Registration_SendEmail
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A request record that includes employee information and the email address to which the verification code will be sent. This is essential for ensuring the user can receive and validate the code for registration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeRequest'
      responses:
        '200':
          description: Successfully sent the verification code to the provided email address. The response includes details about the transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeResponse'
  /registration/sendCodeSMS:
    post:
      tags:
        - Registration
      summary: Send a verification code using SMS to a mobile number for the user to validate.
      description: 'This endpoint sends a verification code via SMS to a specified mobile number, allowing the user to validate their identity during the registration process.'
      operationId: Registration_SendSMS
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A request record that includes employee information and the mobile number to which the verification code will be sent via SMS. This data is essential for ensuring the correct user is being verified.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeRequest'
      responses:
        '200':
          description: 'OK - The request was successful, and the verification code has been sent to the specified mobile number.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeResponse'
  '/services/hsainvestment/accounts/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - HSAInvestment
      summary: Get the list of investment accounts
      description: 'Retrieve a list of investment accounts associated with a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for obtaining detailed investment account information for a participant in the HSA investment system.'
      operationId: HSAInvestment_GetParticipantAccountsInvestments
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the investment accounts for the specified participant.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.mobile.Business.Transactions.ParticipantAccountsInvestments'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.mobile.Business.Transactions.ParticipantAccountsInvestments'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/hsainvestment/trustplan/{tpaId}/{dataPartnerId}/{trustPlanId}':
    get:
      tags:
        - HSAInvestment
      summary: Get Data Partner trust plan information
      description: 'Retrieve detailed information about a specific trust plan associated with a data partner, identified by TPA ID, Data Partner ID, and Trust Plan ID.'
      operationId: HSAInvestment_GetDataPartnerTrustPlan
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved trust plan information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerTrustPlan'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerTrustPlan'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - name: dataPartnerId
        in: path
        description: Product Partner Id
        required: true
        schema:
          type: string
      - name: trustPlanId
        in: path
        description: Trust Plan Id
        required: true
        schema:
          type: string
  '/services/hsainvestment/disclosure/document/{tpaId}':
    get:
      tags:
        - HSAInvestment
      summary: Get disclose document details
      description: Retrieve detailed information about a specific disclosure document associated with a trust plan and file key.
      operationId: HSAInvestment_GetDisclosureDocument
      parameters:
        - name: trustPlanIdKey
          in: query
          description: The unique identifier for the trust plan associated with the disclosure document. This parameter is required to specify which trust plan's document details are being requested.
          required: true
          schema:
            type: integer
            format: int32
        - name: fileKey
          in: query
          description: The unique identifier for the specific file within the trust plan. This parameter is essential for retrieving the correct document details.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the disclosure document details. The response contains the document''s metadata, including its format, type, and upload date.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentInfo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /services/hsainvestment/account/generate:
    post:
      tags:
        - HSAInvestment
      summary: Create an investment account
      description: Create a new investment account for a participant using their unique identifiers and account details.
      operationId: HSAInvestment_GenerateInvestmentAccount
      requestBody:
        description: Investment Account Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentAccountCreateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentAccountCreateRequest'
      responses:
        '200':
          description: Successfully created the investment account. The response indicates whether the operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesHsainvestmentAccountGeneratePost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesHsainvestmentAccountGeneratePost200ApplicationJsonResponse'
  /services/hsainvestment/transfer/submit:
    post:
      tags:
        - HSAInvestment
      summary: Transfer the investment
      description: 'Initiates the transfer of investment funds for a specified account, allowing users to manage their HSA investments effectively.'
      operationId: HSAInvestment_SubmitTransferTxn
      parameters:
        - name: isReturnPendingTransfer
          in: query
          description: 'Indicates whether to return the list of pending transfer investments. Set to true to retrieve pending transfers; otherwise, it will return null.'
          schema:
            type: boolean
      requestBody:
        description: Investment Transfer Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentTransferRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentTransferRequest'
      responses:
        '200':
          description: Successfully processed the investment transfer request. The response contains details of the completed transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-InvestmentTrans'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-InvestmentTrans'
  '/services/hsainvestment/pending/{tpaId}/{employerId}/{participantId}/{flexAcctId}':
    get:
      tags:
        - HSAInvestment
      summary: Get the list of pending tranfer investment
      description: Get the list of pending tranfer investment
      operationId: HSAInvestment_GetPendingTransferTxns
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-InvestmentTrans'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-InvestmentTrans'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  '/services/innopartner/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - InnoPartner
      summary: Get list of innovation Partners
      description: 'Retrieve a list of innovation partners associated with a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining partner information relevant to the participant''s account.'
      operationId: InnoPartner_GetInnoPartners
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the list of innovation partners. The response contains an array of innovation partner objects, each representing a partner associated with the specified participant.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-InnoPartner-InnovationPartne'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-InnoPartner-InnovationPartne'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/innopartner/innoassociations/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - InnoPartner
      summary: Get the list of innovation Partners associated with the Tpa
      description: 'Retrieve a list of innovation partners linked to a specific TPA, identified by the TPA ID, Employer ID, and Participant ID. This operation is useful for understanding the collaborative partners available for a given participant within the TPA framework.'
      operationId: InnoPartner_GetInnoAssociations
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of innovation partners associated with the specified TPA.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesInnopartnerInnoassociationsTpaIdEmployerIdParticipantIdGet200Applica'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesInnopartnerInnoassociationsTpaIdEmployerIdParticipantIdGet200Applica'
    put:
      tags:
        - InnoPartner
      summary: Set the list of innovation Partners associated with the Tpa
      description: 'Update the list of innovation partners linked to a specific TPA, identified by the unique TPA ID, Employer ID, and Participant ID. This operation is used to manage partnerships and affiliations relevant to the TPA''s operations.'
      operationId: InnoPartner_SetInnoAssociations
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A list of innovation partner keys that denote the innovation partners associated with the TPA. This data is essential for updating the TPA's partnerships and must adhere to the specified schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InnoAssociations'
          application/xml:
            schema:
              $ref: '#/components/schemas/InnoAssociations'
      responses:
        '204':
          description: 'No Content - Indicates that the request was successful, and the list of innovation partners has been updated without returning any content.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /services/logon:
    post:
      tags:
        - Logon
      summary: Used to log on a user
      description: 'Initiates a user logon process, allowing users to authenticate and gain access to their accounts within the WealthCare system.'
      operationId: Logon_Logon
      responses:
        '200':
          description: 'Successful logon, returning user session information.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.IO.Stream'
            application/xml:
              schema:
                $ref: '#/components/schemas/System.IO.Stream'
  /services/mobilepay/issuerServices/1/0/authorizeService:
    post:
      tags:
        - MobilePay
      summary: Authorize Service
      description: 'Authorizes a service request for mobile payment digitization, enabling the provisioning of payment tokens for specified services.'
      operationId: PreDigitization_AuthorizeService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest'
      responses:
        '200':
          description: 'Successfully authorized the service request, returning the relevant token and service details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse'
  /services/mobilepay/issuerServices/1/0/deliverActivationCode:
    post:
      tags:
        - MobilePay
      summary: DeliverActivationCode Service
      description: This endpoint delivers an activation code for digitization to a specified participant using their unique identifiers. It is typically used in scenarios where a participant needs to receive an activation code via a selected method for accessing services.
      operationId: PreDigitization_DeliverActivationCodeService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCDeliverActivationCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCDeliverActivationCodeRequest'
      responses:
        '200':
          description: Successfully delivered the activation code to the participant. The response includes details about the delivery process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCDeliverActivationCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCDeliverActivationCodeResponse'
  /services/mobilepay/issuerServices/1/0/validateActivationCode:
    post:
      tags:
        - MobilePay
      summary: ValidateActivationCode Service
      description: 'Validates the activation code for digitization, ensuring that the provided code is correct and can be used to proceed with the provisioning process.'
      operationId: PreDigitization_ValidateActivationCodeService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCValidateActivationCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCValidateActivationCodeRequest'
      responses:
        '200':
          description: 'Successfully validated the activation code, allowing the provisioning process to continue.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCValidateActivationCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCValidateActivationCodeResponse'
  /services/mobilepay/issuerServices/1/0/notifyServiceActivated:
    post:
      tags:
        - MobilePay
      summary: Notify service activated
      description: 'Update the system to indicate that a specific service has been activated for a user, enabling them to utilize the associated features. This operation is essential for provisioning services related to mobile payments and requires valid request data.'
      operationId: PreDigitization_NotifyServiceActivatedService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCNotifyServiceActivatedRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCNotifyServiceActivatedRequest'
      responses:
        '200':
          description: 'Successfully notified that the service has been activated, and the system is updated accordingly.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCNotifyServiceActivatedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCNotifyServiceActivatedResponse'
  /services/mobilepay/issuerServices/1/0/notifyTokenUpdated:
    post:
      tags:
        - MobilePay
      summary: Notify token updated Service
      description: 'This endpoint allows you to notify the system of updates to payment tokens, which may include changes in status or re-digitization events. It is primarily used by mobile payment providers to communicate token state changes to the issuer.'
      operationId: PreDigitization_NotifyTokenUpdatedService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCNotifyTokenUpdatedRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCNotifyTokenUpdatedRequest'
      responses:
        '200':
          description: Successfully processed the token update notification.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCNotifyTokenUpdatedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCNotifyTokenUpdatedResponse'
  '/services/participant/accounts/summary/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get Account Summary
      description: 'Get Participant Account Summary (with option for account details) - Includes account details, account balances, grace period dates, deductible status, display overrides and fund rollover information and more.  You may also need to call other services to obtain additional information about accounts, such as Get Account Service Categories, Get Balance Due Amounts, Get Account Interval Tracker Details (for plans with monthly, quarterly or calendar year limits)'
      operationId: ParticipantAccount_GetAccountSummary0822
      parameters:
        - name: planyear
          in: query
          description: Plan Year
          required: true
          schema:
            enum:
              - None
              - ALL
              - Current
              - Previous
              - Future
              - Active
              - CurrentAndFuture
            type: string
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: accountdetail
          in: query
          description: 'Indicate whether the result includes the account details. 1: include, 0: do not include default to 0.'
          schema:
            type: integer
            format: int32
        - name: externalbank
          in: query
          description: 'Indicate whether the result includes external bank accounts. 1: include, 0: do not include default to 1.'
          schema:
            type: integer
            format: int32
        - name: optinstatus
          in: query
          description: 'Indicate whether the result incudes the value of OptInStatus. 1: return, 0: do not return, default to 1.'
          schema:
            type: integer
            format: int32
        - name: calcEmpeAndEmprContributionAmount
          in: query
          description: 'Indicate whether the result includes the value of Employee Annual Election and Employer Annual Election Amounts, 1: return, 0: do not return, default to 0.'
          schema:
            type: integer
            format: int32
        - name: loadCarryoverInfo
          in: query
          description: 'Indicate whether the results include the rollover balance, expiring balance, and other carryover information details.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0822-AccountSummaryArray'
              example:
                - AccountDetailInfo: 
                  CarryoverEnabled: false
                  CarryoverEligibility: true
                  CarryoverMinAmount: 
                  InterestApplicable: false
                  InterestPaidPlanToDate: 0
                  HighYieldEligibility: false
                  HighYieldOptIn: false
                  PreTaxAmtPtd: 
                  PostTaxAmtPtd: 
                  HidePayrollInfoAndCharts: false
                  HideDeadlinesChartAndData: false
                  HideFamilyDetails: false
                  HideCoveragePeriodDetails: false
                  HideTaxRelatedInfo: false
                  IsCustomLabelsAdded: false
                  GracePeriodDeductibleStatus: 1
                  GracePeriodDeductibleMetDte: 
                  DeductibleMetDte: '2023-01-01T08:00:00.0000000+00:00'
                  SourceFlexAcctKey: -1
                  CarryoverAmountCustomLabel: 
                  ExpiringAmountCustomLabel: 
                  CarryoverPeriodCustomMessage: 
                  ExpiringAmount: 
                  RolloverBalance: 
                  SpendingLastDate: '2023-01-01T08:00:00.0000000+00:00'
                  CoverageContinuation: false
                  EnableAccountDormancy: false
                  CustomPlanDescription: '9999'
                  HsaAdvInitialAmt: 0
                  HsaAdvUsedYtd: 0
                  HsaAdvRecoveredYtd: 0
                  HsaAdvOutstandingBal: 0
                  HsaAdvAvailBal: 0
                  HsaAdvBeginDte: '2023-01-01T08:00:00.0000000+00:00'
                  HsaAdvEndDte: '2023-01-01T08:00:00.0000000+00:00'
                  HsaAdvDepositOffsetYtd: 0
                  TotalDisbursableBal: 3.75
                  HsaAdvAccessibilityFlag: true
                  HsaAdvNonAccessibilityReason: 16
                  EmployeeContributions: 0
                  EmployerContributions: 0
                  HsaAdvEligibility: true
                  CardEligible: false
                  PlanUsageDescription: ''
                  GracePeriodCarryoverBalance: 
                  PlanYrExtDte: '        '
                  FlexAcctOptions: 0
                  ProductPartnerAcctStatus: 0
                  ReassociationAcctNum: ''
                  ProductId: QBH1
                  LinkFlexAccountKey: -1
                  IsLinkedDTR: false
                  ExternalBankAccounts: [ ]
                  DisplayableFields:
                    - OriginalFieldName: AccountDisplayHeader
                      AlternativeFieldName: AccountDisplayHeader
                      DisplayOptions: 2
                      DisplaySpecifications: 0
                    - OriginalFieldName: HSABalance
                      AlternativeFieldName: HSABalance
                      DisplayOptions: 2
                      DisplaySpecifications: 0
                    - OriginalFieldName: PortfolioBalance
                      AlternativeFieldName: PortfolioBalance
                      DisplayOptions: 2
                      DisplaySpecifications: 0
                    - OriginalFieldName: TotalHSABalance
                      AlternativeFieldName: TotalHSABalance
                      DisplayOptions: 2
                      DisplaySpecifications: 0
                  FlexAccountKey: 1192
                  AccountType: string
                  AccountDisplayHeader: '9999'
                  PlanStartDate: '20160101'
                  PlanEndDate: '29991231'
                  AnnualElection: 0
                  TotalContributions: 0
                  AdditionalDeposits: 0
                  Payments: -112
                  Balance: 3.75
                  HSABalance: 3.75
                  PortfolioBalance: 0
                  TotalHSABalance: 3.75
                  AccountDisplayOptions: None
                  AccountTypeOptions: 0
                  ProductPartnerId: QBH
                  PlanYear: 1
                  Priority: 193
                  PlanId: QB29999
                  SubmitClaimsLastDate: '2023-01-01T08:00:00.0000000+00:00'
                  ExternalFunded: true
                  OptInStatus: 
                  GracePeriodEndDte: '29991231'
                  BalanceDue: 0
                  FlexAcctId: '0000001192'
                  HraAcct: false
                  AcctStatusCde: 2
                  IsWCABank: 1
                  PlanOptions2: 0
                  DataPartnerOptions: 0
                  PreauthBalance: 0
                  AvailBalance: 3.75
                  AcctTypeClassCde: FSA
                  AcctTypeClassDescription: string
                  OtherDeposits: 0
                  RolloverDeposits: 0
                  HideDollarAmount: false
                  LifetimeLimitPerEvent: 3.75
                  LifetimeSpendingLimit: 3.75
                  LifetimeLimitOnNumberOfEvents: 1
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0822-AccountSummaryArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /securelogon/enroll:
    post:
      tags:
        - SecureLogon
      summary: Enroll for authentication
      description: 'Enroll a user for authentication by providing necessary details such as user ID, email, and challenge questions. This operation is typically used during the initial setup of user authentication in the WealthCare system.'
      operationId: SecureLogon_EnrollUser
      requestBody:
        description: 'Enroll User Request Details, including user identification and security challenge information necessary for the authentication process.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.EnrollUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.EnrollUserRequest'
      responses:
        '200':
          description: Successfully enrolled the user for authentication. The response contains confirmation of the enrollment and may include additional user-specific information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonEnrollPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonEnrollPost200ApplicationJsonResponse'
  '/securelogon/masterquestion/{user}':
    get:
      tags:
        - SecureLogon
      summary: Get security questions
      description: Retrieve a list of security challenge questions associated with a specific user. This endpoint is typically used during the login process to verify user identity through security questions.
      operationId: SecureLogon_GetMasterQuestions
      responses:
        '200':
          description: Successfully retrieved the list of security questions for the specified user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-QuestionArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-QuestionArray'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/securelogon/oobsms/{user}':
    post:
      tags:
        - SecureLogon
      summary: Get out-of-band(SMS) token
      description: 'Initiates the process to obtain an out-of-band (SMS) token for user authentication, enhancing security during the login process.'
      operationId: SecureLogon_GetOobSMSToken
      requestBody:
        description: Out-Of-Band(SMS) Request containing the user's phone number and related details for sending the SMS token.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.GetOobSmsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.GetOobSmsRequest'
      responses:
        '200':
          description: Successfully initiated the SMS token request. The response contains the status of the request and any relevant data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonOobsmsUserPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonOobsmsUserPost200ApplicationJsonResponse'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/securelogon/oobsmsauthenticate/{user}':
    post:
      tags:
        - SecureLogon
      summary: Submit out-of-band(SMS) token for verification
      description: This endpoint allows you to submit an out-of-band (SMS) token for user verification during the secure logon process. It is typically used to confirm the identity of a user attempting to access their account.
      operationId: SecureLogon_OobSMSAuthenticate
      parameters:
        - name: token
          in: query
          description: The out-of-band (SMS) token sent to the user's registered phone number. This token is required for verification and must match the token sent to the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful verification of the SMS token. The response will include authentication details confirming the user's identity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.AuthenticateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.AuthenticateResponse'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/securelogon/otpemailauthenticate/{user}':
    post:
      tags:
        - SecureLogon
      summary: Submit out-of-band(Email) token for verification
      description: Submits an out-of-band (Email) token for verification to authenticate the user.
      operationId: SecureLogon_OtpEmailAuthenticate
      parameters:
        - name: token
          in: query
          description: The out-of-band (Email) token sent to the user for verification. This token must be provided to complete the authentication process.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Authentication successful. The response contains the authentication status and any relevant error codes or descriptions if applicable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.AuthenticateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.AuthenticateResponse'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/securelogon/otptoken/{user}':
    get:
      tags:
        - SecureLogon
      summary: Get out-of-band(Email) token
      description: 'Retrieve an out-of-band (email) token for secure login, which is essential for verifying user identity during the authentication process.'
      operationId: SecureLogon_GetOTPToken
      responses:
        '200':
          description: Successfully retrieved the OTP token. The response contains the token needed for the next step in the authentication process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonOtptokenUserGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonOtptokenUserGet200ApplicationJsonResponse'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/securelogon/otpemailtouser/{user}':
    post:
      tags:
        - SecureLogon
      summary: Send out-of-band(Email) token to user
      description: Sends an out-of-band (email) one-time password (OTP) to the specified user for secure login verification.
      operationId: SecureLogon_GetOtpEmailConfirmationCode
      requestBody:
        description: Contains the necessary information to generate and send the OTP via email.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.SecureLogon.OtpEmailRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.SecureLogon.OtpEmailRequest'
      responses:
        '200':
          description: Successfully sent the OTP email to the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonOtpemailtouserUserPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonOtpemailtouserUserPost200ApplicationJsonResponse'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  /securelogon/ResetUserChallengeQuestions:
    post:
      tags:
        - SecureLogon
      summary: Reset User Challenge Questions
      description: Resets the user's challenge questions to allow for a new set of security questions to be established.
      operationId: SecureLogon_ResetChallengeQuestions
      parameters:
        - name: username
          in: query
          description: The username of the account for which the challenge questions are being reset. This parameter is required to identify the user whose questions need to be reset.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully reset the challenge questions for the specified user. The response indicates that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonResetUserChallengeQuestionsPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonResetUserChallengeQuestionsPost200ApplicationJsonResponse'
  /securelogon/UnlockRsaUser:
    post:
      tags:
        - SecureLogon
      summary: This method unlocks RSA user status
      description: 'Unlocks the RSA user status for a specified user, allowing them to regain access to their account. This operation is typically used when a user has been locked out due to multiple failed login attempts.'
      operationId: SecureLogon_UnlockRsaUser
      parameters:
        - name: username
          in: query
          description: 'The unique identifier for the user, represented by the SA_USER_GUID ID. This parameter is essential for identifying which user''s RSA status should be unlocked.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully unlocked the RSA user status. The response confirms that the user can now access their account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonUnlockRsaUserPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonUnlockRsaUserPost200ApplicationJsonResponse'
  /securelogon/GetRsaUserStatus:
    get:
      tags:
        - SecureLogon
      summary: This method queries RSA user status from RSA backoffice
      description: 'Retrieves the current status of a user from the RSA backoffice system, allowing for verification of user authentication and access rights.'
      operationId: SecureLogon_GetRsaUserStatus
      parameters:
        - name: username
          in: query
          description: 'The unique identifier for the user, represented by the SA_USER_GUID ID. This parameter is essential for querying the user''s RSA status.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully retrieved the RSA user status. The response contains the current status of the user, indicating whether they are authenticated and their access level.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurelogonGetRsaUserStatusGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecurelogonGetRsaUserStatusGet200ApplicationJsonResponse'
  '/services/communications/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Communications
      summary: Returns a list of communications
      description: 'This operation will retrieve a list of notifications, alerts, and other messages sent to participants.'
      operationId: Communications_GetCommunicationsList
      parameters:
        - name: includeLegacy
          in: query
          description: Include legacy communications
          schema:
            type: boolean
        - name: type
          in: query
          description: Filter by communication type - please see 'Communication Types' table below.
          schema:
            type: string
        - name: showLetter
          in: query
          description: 'Include letter communications (Manual Claim letter, Reimbursement letters, Receipt Notification letters)'
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Communication-CommunicationR'
              example:
                - CommunicationRequestKey: 27629
                  CommunicationRuleType: 0
                  CommunicationRuleKey: -1
                  CommunicationRuleName: Auto Denial Letter
                  CommunicationRuleChannels: 4
                  Subject: Auto Denial Letter
                  InsertDte: '2023-01-01T08:00:00.0000000+00:00'
                  UpdateDte: '2023-01-01T08:00:00.0000000+00:00'
                  CommunicationVersion: 1
                  ReadDte: 
                - CommunicationRequestKey: 27628
                  CommunicationRuleType: 0
                  CommunicationRuleKey: -1
                  CommunicationRuleName: 'Pending Letter #1'
                  CommunicationRuleChannels: 4
                  Subject: Pending Letter
                  InsertDte: '2023-01-01T08:00:00.0000000+00:00'
                  UpdateDte: '2023-01-01T08:00:00.0000000+00:00'
                  CommunicationVersion: 1
                  ReadDte: 
                - CommunicationRequestKey: 27628
                  CommunicationRuleType: 0
                  CommunicationRuleKey: -1
                  CommunicationRuleName: 'Pending Letter #2'
                  CommunicationRuleChannels: 4
                  Subject: Pending Letter
                  InsertDte: '2023-01-01T08:00:00.0000000+00:00'
                  UpdateDte: '2023-01-01T08:00:00.0000000+00:00'
                  CommunicationVersion: 1
                  ReadDte: 
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Communication-CommunicationR'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/communications/{tpaId}/{employerId}/{participantId}/{communicationKey}':
    get:
      tags:
        - Communications
      summary: Returns details of a communication
      description: Use this operation to read messages sent from an administrator to a specific participant.
      operationId: Communications_GetCommunicationMessage_0222
      parameters:
        - name: communicationVersion
          in: query
          description: 'Communication version 1:Legacy, 2:Premium (default value is 1)'
          required: true
          schema:
            type: integer
            format: int32
        - name: communicationFileType
          in: query
          description: 'Communication File Type 0:Unknown, 1:Html, 2:PortalHtml, 3:Txt, 4:Pdf (default value is 2)'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0222.CommunicationMessage'
              example:
                RecipientAddress: recipient@2016.com
                FileByteArray: 
                DocumentTrackingNum: 0
                SenderAddress: yearend24@2016.com
                Subject: Test Year End Reminder
                Body: "<table border=\"0\" class=\"mbi_box\">\r\n  <tr>\r\n    <td class=\"mbi_text_bold\" width=\"30%\">\r\n\t\t\t\t\t\tAdministrator Name:\r\n\t\t\t\t\t</td>\r\n    <td class=\"mbi_text\">Quane Benefit Systems</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"mbi_text_bold\">\r\n\t\t\t\t\t\tAdministrator Address:\r\n\t\t\t\t\t</td>\r\n    <td class=\"mbi_text\">101 Huntington Avenue<br>Boston,\r\n\t\t\t\t\t\tMA\r\n02116</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"mbi_text_bold\">\r\n\t\t\t\t\t\tEmployer Name:\r\n\t\t\t\t\t</td>\r\n    <td class=\"mbi_text\">ZXC Media LLC</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"mbi_text_bold\">\r\n\t\t\t\t\t\t\tParticipant Name: \r\n\t\t\t\t\t\t</td>\r\n    <td class=\"mbi_text\">Rhys Test</td>\r\n  </tr>\r\n</table><br><table class=\"mbi_box_no_border\"></table>\r\n<table class=\"mbi_box_no_border\">\r\n  <table class=\"mbi_box_no_border\">\r\n    <tr>\r\n      <td class=\"mbi_text_bold\">Account Details</td>\r\n    </tr><br></table>\r\n  <table class=\"mbi_box\">\r\n    <tr>\r\n      <td class=\"mbi_text_underline\">Account</td>\r\n      <td class=\"mbi_text_underline\">Start Date</td>\r\n      <td class=\"mbi_text_underline\">End Date</td>\r\n      <td class=\"mbi_text_underline\">Run Out Date</td>\r\n      <td class=\"mbi_text_underline\">Election</td>\r\n      <td class=\"mbi_text_underline\">Total Contributions</td>\r\n      <td class=\"mbi_text_underline\">Disbursements</td>\r\n      <td class=\"mbi_text_underline\">Balance</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"mbi_text\">FSA</td>\r\n      <td class=\"mbi_text\">01/01/2022</td>\r\n      <td class=\"mbi_text\">12/31/2022</td>\r\n      <td class=\"mbi_text\">04/30/2023</td>\r\n      <td class=\"mbi_text\">$500.00</td>\r\n      <td class=\"mbi_text\">$0.00</td>\r\n      <td class=\"mbi_text\">$193.66</td>\r\n      <td class=\"mbi_text\">$306.34</td>\r\n    </tr>\r\n  </table><br></table><table width='100%'><tr><td class='mbi_text'><span style=\"font-size: 16px;\">This is a reminder that the plan year end is quickly approaching. Please note the balance contained in this message, as this is your balance remaining for the plan period.<br /><br />If you have any questions or concerns, please contact us at:<br /><br />Thank you,<br />Quane Benefits Systems</span></td></tr></table>"
                ParticipantId: 570
                CommunicationRuleType: 21
                CommunicationRuleKey: 23
                CommunicationChannels: 1
                BarcodeStream: ''
                BarcodeAlign: Left
                CommunicationVersion: 1
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0222.CommunicationMessage'
    put:
      tags:
        - Communications
      summary: Make updates to a Communication
      description: 'Update the status of a specific communication for a participant, allowing them to mark it as read or delete it as needed.'
      operationId: Communications_UpdateCommunication
      parameters:
        - name: isRead
          in: query
          description: Indicates whether the communication should be marked as read (true) or unread (false).
          required: true
          schema:
            type: boolean
        - name: communicationVersion
          in: query
          description: 'Specifies the version of the communication; 1 for standard offerings, 2 for future offerings.'
          required: true
          schema:
            type: integer
            format: int32
        - name: action
          in: query
          description: 'Determines the action to take on the communication: true to mark for deletion, false for no action.'
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: 'No Content - Indicates that the request was successful, and no content is returned.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: communicationKey
        in: path
        description: Communication Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/communications/{tpaId}/{employerId}/{participantId}/unreadcount':
    get:
      tags:
        - Communications
      summary: Returns the number of unread communications
      description: This operation returns the number of communications that are unread by a participant.
      operationId: Communications_GetUnreadCommunicationsCount
      parameters:
        - name: includeLegacy
          in: query
          description: This is currently true for all clients.  Non-legacy communications will be launched at a future date.
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesCommunicationsTpaIdEmployerIdParticipantIdUnreadcountGet200Applicati'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesCommunicationsTpaIdEmployerIdParticipantIdUnreadcountGet200Applicati'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/details/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get Account Details
      description: 'Get Participant Account Details - Includes account details, account balances, grace period dates, deductible status, display overrides and fund rollover information and more.  You may also need to call other services to obtain additional information about accounts, such as Get Account Service Categories, Get Balance Due Amounts, Get Account Interval Tracker Details (for plans with monthly, quarterly or calendar year limits)'
      operationId: ParticipantAccount_GetAccountDetails0822
      parameters:
        - name: flexaccountkey
          in: query
          description: A system generated ID for the benefit account being retrieved
          required: true
          schema:
            type: integer
            format: int32
        - name: accttypecode
          in: query
          description: The account type code for the benefit account
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.AccountDetailInfo'
              example:
                HsaAdvEligibility: false
                CarryoverAmountCustomLabel: 
                ExpiringAmountCustomLabel: 
                CarryoverPeriodCustomMessage: 
                ExpiringAmount: 
                RolloverBalance: 
                CoverageContinuation: false
                SourceFlexAcctKey: -1
                GracePeriodCarryoverBal: 
                DeductibleMetDte: '2023-01-01T08:00:00.0000000+00:00'
                GracePeriodDeductibleStatus: 1
                GracePeriodDeductibleMetDte: 
                PreTaxAmtPtd: 
                PostTaxAmtPtd: 
                PlanOptions2: 0
                HidePayrollInfoAndCharts: false
                HideDeadlinesChartAndData: false
                HideFamilyDetails: false
                HideCoveragePeriodDetails: false
                HideTaxRelatedInfo: false
                CarryoverEnabled: false
                CarryoverEligibility: true
                CarryoverMinAmount: 
                RolloverInLabel: 
                RolloverOutLabel: 
                RolloverInAmt: 
                RolloverOutAmt: 
                InterestApplicable: false
                InterestEligible: false
                InterestPaidPlanToDate: 0
                VestingPercentage: 0
                HighYieldEligibility: false
                HighYieldOptIn: false
                CoveragePeriodInfo: 
                Spent: -112
                RemainingBalance: 3.75
                OnHoldAmount: 0
                BalanceDue: 0
                IsEmprPlanMonthlyLimit: false
                MonthlyDepositLimit: -1
                MonthlySpendingLimit: -1
                EmprPlanAllowFundRollover: false
                PrimaryFundRolloverDate: '2023-01-01T08:00:00.0000000+00:00'
                PrimaryFundRolloverAmount: 0
                PrimaryFundRolloverRate: 0
                PrimaryFundsRolloverAccountPlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
                PrimaryFundsRolloverAccountPlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
                PrimaryFundRolloverRule: 0
                PyIndividualRolloverAmount: 0
                PyIndividualRolloverRate: 0
                PrimaryFundsRolloverAccount: 
                IsPrimaryRollover: false
                SecondaryFundRolloverDate: '2023-01-01T08:00:00.0000000+00:00'
                SecondaryFundRolloverAmount: 0
                SecondaryFundRolloverRate: 0
                SecondaryFundsRolloverAccount: 
                IsSecondaryRollover: false
                PyFundsRolloverAccountPlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
                PyFundsRolloverAccountPlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
                SecondaryFundRolloverRule: 0
                SecondaryIndividualRolloverAmount: 0
                SecondaryIndividualRolloverRate: 0
                SdFundsRolloverAccountPlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
                SdFundsRolloverAccountPlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
                SdIndividualRolloverAmount: 0
                SdIndividualRolloverRate: 0
                EmprPlanDeductmanagerEnabled: false
                Deductible: 0
                DeductibleApplied: 0
                DeductibleRemaining: 0
                AccountStartDate: '2023-01-01T08:00:00.0000000+00:00'
                AccountEndDate: '2023-01-01T08:00:00.0000000+00:00'
                CurrentDate: '2023-01-01T08:00:00.0000000+00:00'
                SpendingLastDate: '2023-01-01T08:00:00.0000000+00:00'
                SubmitClaimsLastDate: '2023-01-01T08:00:00.0000000+00:00'
                EligDte: '2023-01-01T08:00:00.0000000+00:00'
                AccountDisplayOptions: 0
                AccountInfo:
                  - Status: 0
                    EmpeFlexAcctStatus: 0
                    DepFlexAcctStatus: 1
                    DepStatus: 1
                    FirstName: Madison
                    Initial: 
                    LastName: Webster
                    IndividualAmount: 0
                    AdditionalDeposits: 0
                    Payments: 0
                    Balance: 0
                    IsDep: true
                    FlexAcctKey: 1192
                    EmpeRelation: 0
                AccountPayRollInfo:
                  PayrollCycle: 1
                  EmployeePPPContribution: 0
                  EmployerPPPContributionsAmount: 0
                  ContributionsYTD: 0
                  RemainingContributions: 0
                  PlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
                  PlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
                  AutoDepositCalendarKey: 0
                  EmprAnnualElection: 0
                  EmpeAnnualElection: 0
                AccountType: QB2
                IsHRA: false
                AccountTypeOptions: 147199
                FundRolloverInfo:
                  - FundRolloverRule: 0
                    PrimaryFundRolloverAmount: 0
                    PrimaryFundRolloverRate: 0
                    SecondaryFundRolloverAmount: 0
                    SecondaryFundRolloverRate: 0
                    CoverageTierID: 
                    CoverageTierKey: 0
                MccFlags: 0
                PlanMccFlags: 0
                PlanExtOptions: 769
                InternalFlexAcctOptions: 1
                PlanDefaultAcctCrossover: false
                DPAccAllowManualClaims: false
                EnableAccountDormancy: false
                ShowCustomPlanDescriptionInCoveragePeriods: false
                CustomPlanDescription: '9999'
                IsAccountSuspended: false
                HsaAdvInitialAmt: 0
                HsaAdvUsedYtd: 0
                HsaAdvRecoveredYtd: 0
                HsaAdvOutstandingBal: 0
                HsaAdvAvailBal: 0
                HsaAdvBeginDte: '2023-01-01T08:00:00.0000000+00:00'
                HsaAdvEndDte: '2023-01-01T08:00:00.0000000+00:00'
                HsaAdvDepositOffsetYtd: 0
                TotalDisbursableBal: 3.75
                HsaAdvAccessibilityFlag: false
                HsaAdvNonAccessibilityReason: 16
                PriorYearHsaAdvInitialAmt: 0
                PriorYearHsaAdvAvailBal: 0
                PriorYearHsaAdvUsedYtd: 0
                PriorYearHsaAdvRecoveredYtd: 0
                PriorYearHsaAdvOutstandingBal: 0
                PriorYearHsaAdvDepositOffsetYtd: 0
                FutureYearHsaAdvInitialAmt: 0
                RestrictParticipantClaimEntry: true
                ExtDeductibleStatus_2019_07: 1
                HideDeductible: false
                PlanUsageDescription: 
                LinkFlexAccountKey: -1
                IsLinkedDTR: false
                IsQLE: false
                EmpeCanSetDeductible: false
                ExtDeductibleStatus: 1
                TransferAmountsAbove: 0
                MinAutoTransferAmount: 0
                DataPartnerAccountOptions: 0
                ProductId: 
                HraType: 0
                IsEmbedded: false
                PreauthBalance: 0
                AvailBalance: 3.75
                AcctTypeClassCde: 3
                AcctTypeClassDescription: HSA
                HideDollarAmount: false
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.AccountDetailInfo'
    put:
      tags:
        - ParticipantAccount
      summary: Update Account Details
      description: 'Update the account details for a specific participant identified by their TPA ID, Employer ID, and Participant ID. This operation is primarily used to modify account settings related to Auto Pay from Claims Crossover claims.'
      operationId: ParticipantAccount_UpdateAccountDetails0822
      parameters:
        - name: flexaccountkey
          in: query
          description: 'A unique identifier for the flex account, used to specify which account to update.'
          required: true
          schema:
            type: integer
            format: int32
        - name: accttypecode
          in: query
          description: 'The code representing the type of account being updated, which determines the applicable rules and settings for the account.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A JSON object containing the account details to be updated. Ensure that the fields provided conform to the expected schema for successful processing.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.AccountDetailInfo'
            example:
              HsaAdvEligibility: true
              CarryoverAmountCustomLabel: 
              ExpiringAmountCustomLabel: 
              CarryoverPeriodCustomMessage: 
              ExpiringAmount: 0
              RolloverBalance: 0
              CoverageContinuation: true
              SourceFlexAcctKey: 0
              GracePeriodCarryoverBal: 0
              DeductibleMetDte: 
              GracePeriodDeductibleStatus: 
              GracePeriodDeductibleMetDte: 
              PreTaxAmtPtd: 
              PostTaxAmtPtd: 
              PlanOptions2: 0
              HidePayrollInfoAndCharts: true
              HideDeadlinesChartAndData: true
              HideFamilyDetails: true
              HideCoveragePeriodDetails: true
              HideTaxRelatedInfo: true
              CarryoverEnabled: true
              CarryoverEligibility: true
              CarryoverMinAmount: 0
              RolloverInLabel: 
              RolloverOutLabel: 
              RolloverInAmt: 0
              RolloverOutAmt: 0
              InterestApplicable: true
              InterestEligible: true
              InterestPaidPlanToDate: 0
              VestingPercentage: 0
              HighYieldEligibility: true
              HighYieldOptIn: true
              CoveragePeriodInfo: 
              Spent: -112
              RemainingBalance: 969.53
              OnHoldAmount: 0
              BalanceDue: 0
              IsEmprPlanMonthlyLimit: false
              MonthlyDepositLimit: -1
              MonthlySpendingLimit: -1
              EmprPlanAllowFundRollover: false
              PrimaryFundRolloverDate: '2023-01-01T08:00:00.0000000+00:00'
              PrimaryFundRolloverAmount: 0
              PrimaryFundRolloverRate: 0
              PrimaryFundsRolloverAccountPlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
              PrimaryFundsRolloverAccountPlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
              PrimaryFundRolloverRule: 0
              PyIndividualRolloverAmount: 0
              PyIndividualRolloverRate: 0
              PrimaryFundsRolloverAccount: 
              IsPrimaryRollover: false
              SecondaryFundRolloverDate: '2023-01-01T08:00:00.0000000+00:00'
              SecondaryFundRolloverAmount: 0
              SecondaryFundRolloverRate: 0
              SecondaryFundsRolloverAccount: 
              IsSecondaryRollover: false
              PyFundsRolloverAccountPlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
              PyFundsRolloverAccountPlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
              SecondaryFundRolloverRule: 0
              SecondaryIndividualRolloverAmount: 0
              SecondaryIndividualRolloverRate: 0
              SdFundsRolloverAccountPlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
              SdFundsRolloverAccountPlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
              SdIndividualRolloverAmount: 0
              SdIndividualRolloverRate: 0
              EmprPlanDeductmanagerEnabled: false
              Deductible: 0
              DeductibleApplied: 0
              DeductibleRemaining: 0
              AccountStartDate: '2023-01-01T08:00:00.0000000+00:00'
              AccountEndDate: '2023-01-01T08:00:00.0000000+00:00'
              CurrentDate: '2023-01-01T08:00:00.0000000+00:00'
              SpendingLastDate: '2023-01-01T08:00:00.0000000+00:00'
              SubmitClaimsLastDate: '2023-01-01T08:00:00.0000000+00:00'
              EligDte: '2023-01-01T08:00:00.0000000+00:00'
              AccountDisplayOptions: 0
              AccountInfo:
                - Status: 0
                  EmpeFlexAcctStatus: 0
                  DepFlexAcctStatus: 1
                  DepStatus: 1
                  FirstName: Madison
                  Initial: 
                  LastName: TEST
                  IndividualAmount: 0
                  AdditionalDeposits: 0
                  Payments: 0
                  Balance: 0
                  IsDep: true
                  FlexAcctKey: 1192
                  EmpeRelation: 0
              AccountPayRollInfo:
                PayrollCycle: 1
                EmployeePPPContribution: 0
                EmployerPPPContributionsAmount: 10000
                ContributionsYTD: 1000
                RemainingContributions: 0
                PlanStartDate: '2023-01-01T08:00:00.0000000+00:00'
                PlanEndDate: '2023-01-01T08:00:00.0000000+00:00'
                AutoDepositCalendarKey: 0
                EmprAnnualElection: 0
                EmpeAnnualElection: 0
              AccountType: QB2
              IsHRA: false
              AccountTypeOptions: 147199
              FundRolloverInfo: 
              MccFlags: 0
              PlanMccFlags: 0
              PlanExtOptions: 769
              InternalFlexAcctOptions: 1
              PlanDefaultAcctCrossover: false
              DPAccAllowManualClaims: false
              EnableAccountDormancy: true
              ShowCustomPlanDescriptionInCoveragePeriods: true
              CustomPlanDescription: 
              IsAccountSuspended: true
              HsaAdvInitialAmt: 0
              HsaAdvUsedYtd: 0
              HsaAdvRecoveredYtd: 0
              HsaAdvOutstandingBal: 0
              HsaAdvAvailBal: 0
              HsaAdvBeginDte: '2023-01-01T08:00:00.0000000+00:00'
              HsaAdvEndDte: '2023-01-01T08:00:00.0000000+00:00'
              HsaAdvDepositOffsetYtd: 0
              TotalDisbursableBal: 0
              HsaAdvAccessibilityFlag: true
              HsaAdvNonAccessibilityReason: 0
              PriorYearHsaAdvInitialAmt: 0
              PriorYearHsaAdvAvailBal: 0
              PriorYearHsaAdvUsedYtd: 0
              PriorYearHsaAdvRecoveredYtd: 0
              PriorYearHsaAdvOutstandingBal: 0
              PriorYearHsaAdvDepositOffsetYtd: 0
              FutureYearHsaAdvInitialAmt: 0
              RestrictParticipantClaimEntry: true
              ExtDeductibleStatus_2019_07: 0
              HideDeductible: false
              PlanUsageDescription: Just for testing
              LinkFlexAccountKey: -1
              IsLinkedDTR: false
              IsQLE: false
              EmpeCanSetDeductible: false
              ExtDeductibleStatus: 1
              TransferAmountsAbove: 0
              MinAutoTransferAmount: 0
              DataPartnerAccountOptions: 0
              ProductId: 
              HraType: 0
              IsEmbedded: false
              PreauthBalance: 0
              AvailBalance: 969.53
              AcctTypeClassCde: 3
              AcctTypeClassDescription: HSA
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.AccountDetailInfo'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/{tpaId}/{employerId}/{participantId}/{letterHistKey}':
    get:
      tags:
        - ParticipantCommunication
      summary: Get PDF Letter Communication
      description: Get PDF Letter Communication
      operationId: ParticipantCommunication_GetCommunicationPdf760
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantCommunicationsTpaIdEmployerIdParticipantIdLetterHistKeyGe'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantCommunicationsTpaIdEmployerIdParticipantIdLetterHistKeyGe'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: letterHistKey
        in: path
        description: Letter History Key
        required: true
        schema:
          type: integer
          format: int32
  '/services/participant/communications/mobile/{phoneNumber}/accountbalances':
    get:
      tags:
        - ParticipantCommunication
      summary: Account available balances
      description: Retrieve the account descriptions and available balances for a mobile participant's current accounts based on their phone number.
      operationId: ParticipantCommunication_GetMobileAccountBalancesAsync
      responses:
        '200':
          description: Successfully retrieved account balances and descriptions.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: string
    parameters:
      - $ref: '#/components/parameters/phoneNumber'
  '/services/participant/communications/mobile/{phoneNumber}':
    put:
      tags:
        - ParticipantCommunication
      summary: Sets phone number optin status
      description: 'Update the opt-in status of a participant''s phone number, allowing them to manage their communication preferences effectively.'
      operationId: ParticipantCommunication_SetParticipantOptinStatusAsync
      requestBody:
        description: 'The participant phone number status to be set. Possible values are: Unregistered, Registered, Pending. This request allows participants to control their communication preferences regarding mobile notifications.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileParticipantStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileParticipantStatus'
        required: true
      responses:
        '200':
          description: Successfully updated the opt-in status of the participant's phone number.
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
      x-codegen-request-body-name: status
    parameters:
      - $ref: '#/components/parameters/phoneNumber'
  '/services/participant/communications/contactadmin/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - ParticipantCommunication
      summary: Contact an administrator
      description: Allows participants to send a message to an administrator regarding their account or related inquiries.
      operationId: ParticipantCommunication_ContactAdmin
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the details of the message to be sent to the administrator, including sender information and message content.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.ContactAdminReq'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.ContactAdminReq'
      responses:
        '204':
          description: 'No Content - The request was successful, and no additional content is returned. This indicates that the message has been sent to the administrator without any errors.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/contactadmin/emailAddress/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCommunication
      summary: This method returns the WealthCare Administrator's email address
      description: 'Retrieve the email address of the WealthCare Administrator associated with a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for contacting the administrator regarding participant-specific inquiries or issues.'
      operationId: ParticipantCommunication_GetContactAdminEmailAddress
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the email address of the WealthCare Administrator.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantCommunicationsContactadminEmailAddressTpaIdEmployerIdPart'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantCommunicationsContactadminEmailAddressTpaIdEmployerIdPart'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/items/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCommunication
      summary: Returns a list of participant communications
      description: 'Retrieve a list of communications for a specific participant, identified by their unique TPA ID, Employer ID, and Participant ID. This endpoint is useful for accessing various communication types, including letters, emails, and SMS messages sent to the participant.'
      operationId: ParticipantCommunication_GetCommunicationsList
      parameters:
        - name: type
          in: query
          description: 'Specifies the type of communication to retrieve. Use "1" to return only letter communications; otherwise, non-letter types (Email and SMS) will be returned.'
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: showLetter
          in: query
          description: 'Determines whether letter communications are included in the response. Set to "1" to include letters, or "0" to exclude them.'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantCommunic'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantCommunic'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/message/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCommunication
      summary: Get communication message details
      description: Get communication message details
      operationId: ParticipantCommunication_GetCommunicationMessage
      parameters:
        - name: id
          in: query
          description: Communication History Key
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.CommunicationMessage'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.CommunicationMessage'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/message/{tpaId}/{employerId}/{participantId}/update':
    get:
      tags:
        - ParticipantCommunication
      summary: Update communication message
      description: Update communication message
      operationId: ParticipantCommunication_UpdateCommunications
      parameters:
        - name: id
          in: query
          description: Communication History Key
          schema:
            type: integer
            format: int32
        - name: action
          in: query
          description: 'Indicate if the message should be deleted. True: delete, False: do not delete'
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/mobile/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCommunication
      summary: Get list of mobile numbers
      description: 'Retrieve a list of mobile numbers associated with a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for obtaining contact information for communication purposes.'
      operationId: ParticipantCommunication_GetMobileNumbers
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of mobile numbers for the specified participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-MobileNumberArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-MobileNumberArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/mobile/{tpaId}/{employerId}/{participantId}/{mobilePhoneNumber}':
    put:
      tags:
        - ParticipantCommunication
      summary: Unregister a mobile number
      description: 'Unregisters a specified mobile phone number for a participant, effectively removing it from their communication preferences.'
      operationId: ParticipantCommunication_UnregisterMobileNumber
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: validate
          in: query
          description: Indicates whether the mobile phone number format should be validated. Use 1 to validate and 0 to skip validation.
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: 'No Content - The request was successful, and the mobile number has been unregistered without returning any content.'
    post:
      tags:
        - ParticipantCommunication
      summary: Register mobile number
      description: Register mobile number
      operationId: ParticipantCommunication_RegisterMobileNumber
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: validate
          in: query
          description: 'Indicate if phone number format need be validated. 1: validate, 0: do not validate'
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
    delete:
      tags:
        - ParticipantCommunication
      summary: Delete a mobile number
      description: Remove a specified mobile phone number associated with a participant's account. This operation is typically used to update contact information when a participant no longer wishes to use a particular mobile number.
      operationId: ParticipantCommunication_DeleteMobileNumber
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: validate
          in: query
          description: 'Indicates whether to validate the format of the mobile phone number before deletion. Set to 1 to validate, or 0 to bypass validation.'
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: 'No Content - The mobile number was successfully deleted, and there is no additional content to return.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: mobilePhoneNumber
        in: path
        description: Mobile phone number
        required: true
        schema:
          type: string
  '/services/participant/communications/mobile/{phoneNumber}/messages/{messageId}':
    put:
      tags:
        - ParticipantCommunication
      summary: Sets the message delivery status
      description: Updates the delivery status of an outbound SMS message for a specific participant identified by their phone number and message ID.
      operationId: ParticipantCommunication_SetMessageDeliveryStatusAsync
      requestBody:
        description: 'The status of the SMS message that was sent, indicating whether it was successfully delivered or encountered issues.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileMessageHistoryStatus'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileMessageHistoryStatus'
        required: true
      responses:
        '200':
          description: Successfully updated the message delivery status. The response indicates that the operation was completed without errors.
    parameters:
      - $ref: '#/components/parameters/phoneNumber'
      - name: messageId
        in: path
        description: The message Id for the SMS message that was sent
        required: true
        schema:
          type: string
  '/services/participant/communications/notifications/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantCommunication
      summary: Get notification list associated with an employee
      description: 'Retrieve a list of notifications associated with a specific employee, identified by their unique TPA ID, Employer ID, and Participant ID. This endpoint is useful for accessing communication records relevant to the employee''s account.'
      operationId: ParticipantCommunication_GetAssignedNotificationList0218
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the notification list for the specified employee.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0218-ParticipantNotificationArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0218-ParticipantNotificationArray'
    post:
      tags:
        - ParticipantCommunication
      summary: Save notification list associated with an employee
      description: Save notification list associated with an employee
      operationId: ParticipantCommunication_SaveAssignedNotificationList
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: The list of notification related data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantNotifica'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantNotifica'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantNotifica'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantNotifica'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/dependent/{tpaId}':
    post:
      tags:
        - ParticipantDependent
      summary: Search dependent
      description: This endpoint allows you to search for dependents associated with a specific TPA ID. It is useful for retrieving dependent information based on various search criteria.
      operationId: ParticipantDependent_SearchDependents
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. If a requested language does not have a translated value for a specific field, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      requestBody:
        description: 'The request body contains the search criteria for locating dependents. It should include parameters such as employer ID, search type, and the maximum number of records to return.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantSearch'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantSearch'
      responses:
        '200':
          description: Successfully retrieved dependent information based on the search criteria provided. The response will include an array of dependent summaries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DependentSummaryArr'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DependentSummaryArr'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/participant/dependent/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantDependent
      summary: Get list of an employee's dependent
      description: Get list of an employee's dependent
      operationId: ParticipantDependent_GetEmployeeDependents0619
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: ageRestrict
          in: query
          description: An optional parameter with default to -1 but if value provided greater than 0 then restricts dependents' age by this number
          schema:
            type: integer
            format: int32
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DependentSummaryArr'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DependentSummaryArr'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/dependent/{tpaId}/{employerId}/{participantId}/{dependentId}':
    get:
      tags:
        - ParticipantDependent
      summary: Get dependent details
      description: 'Retrieve detailed information about a specific dependent, including demographic data, Medicare information, and privacy settings. This endpoint is useful for applications that need to display or manage dependent-related information for participants.'
      operationId: ParticipantDependent_GetDependentDetails0619
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. The API will return text in the specified language, defaulting to English if not provided or if an invalid value is sent. Note that if a requested language does not have a translation for a specific field, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successful retrieval of dependent details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DependentDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DependentDetails'
    put:
      tags:
        - ParticipantDependent
      summary: Update Dependent Details
      description: Update Dependent Details
      operationId: ParticipantDependent_UpdateDependentDetails0619
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      requestBody:
        description: Details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
    delete:
      tags:
        - ParticipantDependent
      summary: Delete dependent
      description: Remove a dependent from a participant's account using their unique identifiers. This operation is typically used when a dependent is no longer eligible for benefits or needs to be removed for administrative purposes.
      operationId: ParticipantDependent_DeleteDependent
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the dependent. The response indicates that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantDependentTpaIdEmployerIdParticipantIdDependentIdDelete200'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantDependentTpaIdEmployerIdParticipantIdDependentIdDelete200'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: dependentId
        in: path
        description: Unique identifier for the Dependent.
        required: true
        schema:
          type: string
  /services/participant/dependent/adddependent:
    post:
      tags:
        - ParticipantDependent
      summary: Add a dependent
      description: 'This operation allows you to set up both Dependent Demographics, a Dependent Account, and issue the dependent a card.'
      operationId: ParticipantDependent_AddDependent760
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Details to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0217.DependentDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0217.DependentDetails'
      responses:
        '204':
          description: No Content
  '/services/participant/dependent/adddependent/{tpaId}/{employerId}/{participantId}/{dependentId}':
    post:
      tags:
        - ParticipantDependent
      summary: Add a dependent
      description: Add a dependent to a participant's account using their unique identifiers. This operation is typically used to register a new dependent for benefits or update existing dependent information.
      operationId: ParticipantDependent_AddDependent0618
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the details of the dependent to be added, including personal information and eligibility data.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
      responses:
        '200':
          description: Successfully added the dependent. The response includes the details of the dependent that was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0618.DependentDetails'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: dependentId
        in: path
        description: Unique identifier for the Dependent
        required: true
        schema:
          type: string
  '/services/participant/document/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantDocument
      summary: Get a list of document queues associated with the Admin/Data Partner
      description: 'Retrieve a list of document queues linked to a specific Admin or Data Partner, identified by their unique identifiers. This endpoint is useful for monitoring document processing activities and understanding the status of various document queues.'
      operationId: ParticipantDocument_GetDocumentQueuesList
      parameters:
        - name: dataPartnerId
          in: query
          description: 'Optional identifier for the Data Partner. If specified, the response will include a list of Data Partner Queues; if omitted, the response will return Admin Queues.'
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the list of document queues. The response contains an array of document queue objects, each representing a specific queue associated with the Admin or Data Partner.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Document-DocumentQueueArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Document-DocumentQueueArray'
    post:
      tags:
        - ParticipantDocument
      summary: Upload a document to the Admin Queue or the Data Partner Queue
      description: 'Uploads a document to either the Admin Queue or the Data Partner Queue, facilitating the management of participant-related documentation.'
      operationId: ParticipantDocument_UploadDocument
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'The request body must contain the document details, including the file and associated metadata, formatted as JSON or XML.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueueUpload'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueueUpload'
      responses:
        '200':
          description: 'Successfully uploaded the document, returning the details of the document queue.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueue'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueue'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/employee/{tpaId}':
    post:
      tags:
        - ParticipantEmployee
      summary: Search employees
      description: 'Search for employees based on specified criteria, including employer ID and various search parameters.'
      operationId: ParticipantEmployee_SearchEmployees0921
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. If Spanish or French is requested and a field lacks a translated value, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      requestBody:
        description: 'Contains the search criteria for locating employees. This includes parameters such as the employer ID, search type, and specific search value.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0921.ParticipantSearch'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0921.ParticipantSearch'
      responses:
        '200':
          description: Successful retrieval of employee data based on the search criteria provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeSummaryArra'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeSummaryArra'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/participant/employee/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantEmployee
      summary: Get employee details
      description: 'Retrieve detailed information about a specific employee, including personal and contact details, banking information, and eligibility status. This endpoint is useful for applications that need to display or process employee data for benefits management or HR purposes.'
      operationId: ParticipantEmployee_GetEmployeeDetails
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. The API will return text in the specified language, defaulting to English if not provided or if an invalid value is sent. Note that if a requested language (Spanish or French) lacks a translation for a specific field, the English value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successful retrieval of employee details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDetails'
    put:
      tags:
        - ParticipantEmployee
      summary: Update employee details
      description: The Update Employee Details API is used to update an employee's demographic information
      operationId: ParticipantEmployee_UpdateEmployeeDetails0424
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      requestBody:
        description: Employee details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0423.EmployeeDetails'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0423.EmployeeDetails'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0723.EmployeeDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0723.EmployeeDetails'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/employee/accessattribute/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantEmployee
      summary: Check the participant's access right
      description: 'Retrieve the access rights of a specific participant based on their unique identifiers, allowing you to determine which features or functionalities they can access.'
      operationId: ParticipantEmployee_GetEmployeeAccessAttributes0717
      parameters:
        - name: accessAttributes
          in: query
          description: 'A bit field representing one or more AccessAttributes enumeration values, used to check if the participant has access to specific features or functionalities. Combine values by adding them together to request multiple attributes simultaneously.'
          schema:
            enum:
              - None
              - AllowParticipantClaimEntry
              - AllowParticipantReceiptUpload
              - AllowParticipantPayProvider
              - AllowParticipantEmailUpdates
              - AllowParticipantEmailAdmin
              - AllowParticipantAccessDependentInfo
              - AllowParticipantRequestNewCard
              - AllowParticipantUpdateDemoInfo
              - AllowParticipantUpdateDirectDepositInfo
              - AllowParticipantViewDirectDepositInfo
              - AllowParticipantClaimsCrossOver
              - AllowParticipantCommunicationSelection
              - AllowEmpeSelfCreation
              - AllowParticipantUpdateAutoReimbSettings
              - AllowParticipantAddDependent
              - AllowParticipantLinkDependentAccount
              - AllowParticipantCreateDependentCard
              - AllowParticipantRequireDependentDOBSSN
              - AllowParticipantCardReimbursement
              - IsEligibleEnroll
              - GetAcctClassification
              - GetInnoPartners
              - GetParticipantPortalAccessInfo
              - EmployerNoDebitCard
              - DirectDepositBankAccountValidation
              - AllowParticipantOnlineRepayment
              - AllowOfflineSAAuthenticationToken
              - AllowSAFeatureOnOff
              - AllowParticipantTransaction
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the participant's access rights.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.ParticipantAccessAttribute'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.ParticipantAccessAttribute'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/employee/contact/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantEmployee
      summary: Get contact information for employee
      description: Get contact information for employee
      operationId: ParticipantEmployee_GetContactInfoForEmployee
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.ContactInfoForEmployee'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.ContactInfoForEmployee'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/employee/enrollment/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantEmployee
      summary: Get employee demographic
      description: 'Retrieve the demographic information of a specific employee, including their name, address, email, and other identifying details. This operation is useful for obtaining up-to-date employee information for administrative or reporting purposes.'
      operationId: ParticipantEmployee_GetEmployeeDemographic
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved employee demographic information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
    put:
      tags:
        - ParticipantEmployee
      summary: Update employee demographic
      description: 'The Update Employee Demographic API is used to update an employee’s basic demographic information including name, billing and shipping address, email, phone and other miscellaneous employee details.'
      operationId: ParticipantEmployee_UpdateEmployeeDemographic
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Demographic Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
            example:
              ParticipantId: '43123412'
              FirstName: John
              LastName: Smith
              MiddleInitial: M
              BirthDate: '1998-09-01'
              EmployeeSSN: '123456789'
              MaritalStatus: None
              Gender: Male
              MotherMaidenName: string
              DriverLicenceNumber: string
              Phone: '9991231234'
              Email: email@email.com
              AddressLine1: 100 First Street
              AddressLine2: Apt 1
              City: Smithville
              State: FL
              Zip: '12345'
              Country: US
              ShippingAddressLine1: 100 First Street
              ShippingAddressLine2: Apt 1
              ShippingAddressCity: Smithville
              ShippingAddressState: FL
              ShippingAddressZip: '12345'
              ShippingAddressCountry: US
              LastUpdated: '2023-01-01T08:00:00.0000000+00:00'
              MiscData:
                CitizenStatusCode: None
                CitizenshipCountry: string
                BaseSalary: 0
                EmployermentStatus: None
                EmployerName: string
                EmployerCity: string
                EmployerState: string
                JobTitle: string
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
    post:
      tags:
        - ParticipantEmployee
      summary: Add employee demographic
      description: Add employee demographic. In order to utilize this call the Allow Employee Demographic Self Creation via Online Enrollment admin level setting must be turned on in WCA under Admin>Processing>Options.
      operationId: ParticipantEmployee_AddEmployeeDemographic
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Demographic Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/employee/enrollment/{tpaId}/{employerId}/{participantId}/directDeposit':
    put:
      tags:
        - ParticipantEmployee
      summary: Validate Participant Direct Deposit Account
      description: 'Validate the direct deposit account for a specific participant, ensuring that the provided transaction amounts meet the necessary criteria for account validation.'
      operationId: ParticipantEmployee_ProcessDirectDepositAccountValidation_0216
      parameters:
        - name: txnAmount1
          in: query
          description: The first transaction amount used for validating the direct deposit account. This value must be a positive number and is required for the validation process.
          required: true
          schema:
            type: number
            format: double
        - name: txnAmount2
          in: query
          description: The second transaction amount used for validating the direct deposit account. This value must be a positive number and is required for the validation process.
          required: true
          schema:
            type: number
            format: double
        - name: txnAmount3
          in: query
          description: The third transaction amount used for validating the direct deposit account. This value must be a positive number and is required for the validation process.
          required: true
          schema:
            type: number
            format: double
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully validated the direct deposit account. The response contains the validation results and any relevant account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantEmployeeEnrollmentTpaIdEmployerIdParticipantIdDirectDepos'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantEmployeeEnrollmentTpaIdEmployerIdParticipantIdDirectDepos'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/recent/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get Recent Transactions
      description: 'Retrieve a list of recent transactions for a specific participant, including details such as tax year, pre-tax amount, and post-tax amount.'
      operationId: Transactions_GetRecentTransactions_0822
      parameters:
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. The default is English, and if an invalid value is provided, English will be used.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - name: flexAccountKey
          in: query
          description: 'A unique identifier for the flex account created by WCA, used to filter transactions associated with a specific account.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: includereceipts
          in: query
          description: Indicates whether to include receipt information in the response. Set to 1 to include receipts; any other value will exclude them.
          schema:
            type: integer
            format: int32
        - name: opt
          in: query
          description: 'Controls the visibility of certain information on dependent claims. Use 0 to show all information, 1 to mask provider details, or 2 to mask only if Dependency Privacy is enabled.'
          schema:
            type: integer
            format: int32
        - name: year
          in: query
          description: 'Filters transactions by service start date within the specified calendar year. Use a 4-digit year (e.g., 2022). Sending 0 retrieves transactions from all years.'
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: 'Indicates the page of results to return, used with pageSize for pagination. For example, pageNumber 2 with pageSize 10 returns transactions 11-20.'
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: 'Specifies the number of transactions to return per page, with a maximum of 2000. This works in conjunction with pageNumber for pagination.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful retrieval of recent transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-TransactionActivityPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-TransactionActivityPage'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/resubmitfxclaim/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - Transactions
      summary: Resubmit/Reprocess FX claim line - Allow to Update provider
      description: 'Resubmits or reprocesses a foreign exchange (FX) claim line, allowing for updates to the provider information associated with the claim.'
      operationId: Transactions_ReSubmitFXClaim0218
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'The request body contains the FX claim data that needs to be resubmitted, including details such as the external claim ID and reimbursement method.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.FXClaimForResubmit'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.FXClaimForResubmit'
      responses:
        '200':
          description: Successfully resubmitted the FX claim line. The response includes a boolean indicating the success of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantTransactionsResubmitfxclaimTpaIdEmployerIdParticipantIdPo'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantTransactionsResubmitfxclaimTpaIdEmployerIdParticipantIdPo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/detailsex/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get transaction details
      description: 'Retrieve detailed information about a specific transaction for a participant, including tax year, pre-tax amount, and post-tax amount.'
      operationId: Transactions_GetTransactionDetailsEx_0221
      parameters:
        - name: transactionid
          in: query
          description: 'A unique identifier for the transaction, generated by WCA when the transaction was first inserted. This parameter is used to specify which transaction details to retrieve.'
          schema:
            type: string
        - name: setldate
          in: query
          description: 'The date when the transaction was finalized in WCA, also known as the settlement date. This parameter can help filter transactions based on their settlement date.'
          schema:
            type: string
        - name: seqnum
          in: query
          description: 'For card transactions, this field contains the transaction sequence number received from the card terminal. For transactions performed through the WealthCare Admin UI, it contains the sequence number assigned by WealthCare Admin. This parameter helps in identifying specific transaction sequences.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: opt
          in: query
          description: 'Indicates whether to mask certain information on the transaction if it pertains to a dependent. Use 0 to not mask, 1 to mask provider information, or 2 to mask only if Dependency Privacy is enabled. This affects the visibility of sensitive transaction details.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful retrieval of transaction details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0221.TransactionDetailsEx'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0221.TransactionDetailsEx'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/updatefxclaimline/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - Transactions
      summary: Updates Out Of Pocket amount for FX claim line
      description: 'Updates the Out Of Pocket amount for a specific FX claim line associated with a participant, identified by their unique identifiers.'
      operationId: Transactions_UpdateFXClaimLine
      parameters:
        - name: externalClaimId
          in: query
          description: 'The unique identifier for the external claim, used to reference the claim being updated.'
          required: true
          schema:
            type: string
        - name: claimLine
          in: query
          description: 'The specific line number of the claim being updated, which allows for precise modifications to the claim details.'
          required: true
          schema:
            type: integer
            format: int32
        - name: empePaidAmt
          in: query
          description: 'The amount that the employee has paid out of pocket for this claim line, represented as a double.'
          required: true
          schema:
            type: number
            format: double
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully updated the Out Of Pocket amount for the specified FX claim line.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantTransactionsUpdatefxclaimlineTpaIdEmployerIdParticipantId'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantTransactionsUpdatefxclaimlineTpaIdEmployerIdParticipantId'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/payprovider/search/{tpaId}':
    post:
      tags:
        - PayProvider
      summary: Return the list of provider based on the search criteria.
      description: 'This endpoint allows you to search for pay providers based on specified criteria, returning a list of matching providers. It is useful for retrieving provider information based on various search parameters such as name, address, or status.'
      operationId: PayProvider_SearchProviders
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Pay Provider Search Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProviderSearch'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProviderSearch'
      responses:
        '200':
          description: 'OK - The request was successful, and the response contains a list of pay providers that match the search criteria.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProviderSearchResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProviderSearchResults'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/payprovider/get/{tpaId}':
    get:
      tags:
        - PayProvider
      summary: Get a provider
      description: Retrieve detailed information about a specific pay provider using the unique TPA ID. This operation is useful for obtaining provider details necessary for processing payments or managing provider relationships.
      operationId: PayProvider_GetProvider
      parameters:
        - name: payproviderkey
          in: query
          description: 'Unique key representing the pay provider, used to identify the specific provider in the system.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the pay provider details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/payprovider/getnewproviderid/{tpaId}':
    get:
      tags:
        - PayProvider
      summary: Get a new provider id
      description: 'Retrieve a new provider ID associated with a specific TPA ID, which can be used for further operations related to pay providers.'
      operationId: PayProvider_GetNewProviderId
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the new provider ID. The response contains the provider ID as a string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPayproviderGetnewprovideridTpaIdGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPayproviderGetnewprovideridTpaIdGet200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /services/payprovider/save:
    post:
      tags:
        - PayProvider
      summary: Save a provider
      description: Update or create a Pay Provider record in the system using the provided details.
      operationId: PayProvider_SaveProvider
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the details of the Pay Provider to be saved, including identifiers, contact information, and status.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
      responses:
        '200':
          description: Successfully saved the Pay Provider details. The response includes the updated Pay Provider information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
  '/services/payprovider/delete/{tpaId}':
    delete:
      tags:
        - PayProvider
      summary: Delete a provider
      description: Deletes a specified pay provider identified by the TPA ID and an optional pay provider key. This operation is typically used to remove a provider from the system when it is no longer needed.
      operationId: PayProvider_DeleteProvider
      parameters:
        - name: payproviderkey
          in: query
          description: 'Optional key that uniquely identifies the pay provider to be deleted. If provided, it specifies which provider to remove; otherwise, the operation will target the default provider associated with the TPA ID.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the provider. The response indicates that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPayproviderDeleteTpaIdDelete200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPayproviderDeleteTpaIdDelete200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/portalinfo/visibletoemployer/{tpaId}':
    get:
      tags:
        - PortalInfo
      summary: Get a list of employers who have portal visibility
      description: 'Retrieve a list of employers that have visibility to the WealthCare Portal, identified by the unique TPA ID. This endpoint is useful for determining which employers can access the portal functionalities for their employees.'
      operationId: PortalInfo_GetVisibleToEmployerList
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of employers with portal visibility.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-VisibleToEmployerArra'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-VisibleToEmployerArra'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /services/portalinfo/haseditaccess:
    get:
      tags:
        - PortalInfo
      summary: Returns a flag indicating whether the current user has Edit access right to portal information
      description: This endpoint checks if the current user has the necessary permissions to edit portal information. It is useful for determining access rights before attempting to modify any data.
      operationId: PortalInfo_HasEditAccess
      responses:
        '200':
          description: OK - The response indicates that the user has edit access rights to the portal information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoHaseditaccessGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoHaseditaccessGet200ApplicationJsonResponse'
  '/services/portalinfo/announcement/{tpaId}/{employerId}':
    get:
      tags:
        - PortalInfo
      summary: Get a list of annoncements
      description: 'Retrieve a list of announcements for a specific TPA and employer, allowing participants to stay informed about important updates and information.'
      operationId: PortalInfo_GetAnnouncements
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. If a requested translation is unavailable, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of announcements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-AnnouncementArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-AnnouncementArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
  '/services/portalinfo/announcement/{tpaId}':
    get:
      tags:
        - PortalInfo
      summary: Get annoncement details
      description: Retrieve detailed information about a specific announcement associated with a given TPA ID. This endpoint is useful for obtaining the latest updates or notifications relevant to participants.
      operationId: PortalInfo_GetAnnouncement
      parameters:
        - name: infoKey
          in: query
          description: The unique identifier for the portal information being requested. This integer value is essential for fetching the correct announcement details.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. Valid options are "es" for Spanish, "en" for English, and "fr" for French. If not specified or if an invalid value is provided, the response will default to English. Note that if a requested language lacks a translation for a specific field, the English version will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the announcement details. The response contains the announcement information in the requested format (JSON or XML).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
    delete:
      tags:
        - PortalInfo
      summary: Delete an announcement
      description: Deletes a specific announcement identified by the TPA ID and the provided info key. This operation is typically used to remove outdated or irrelevant announcements from the portal.
      operationId: PortalInfo_DeleteAnnouncement
      parameters:
        - name: infoKey
          in: query
          description: The unique identifier for the portal information entry that you wish to delete. This integer value is required to specify which announcement to remove.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the announcement. The response indicates that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoAnnouncementTpaIdDelete200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoAnnouncementTpaIdDelete200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /services/portalinfo/announcement:
    put:
      tags:
        - PortalInfo
      summary: Edit an announcement
      description: 'Update the details of a specific announcement in the portal, allowing for modifications to its content and visibility settings.'
      operationId: PortalInfo_UpdateAnnouncement
      requestBody:
        description: Announcement Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
      responses:
        '200':
          description: Successfully updated the announcement. The response contains the updated announcement details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
    post:
      tags:
        - PortalInfo
      summary: Add an annoncement
      description: 'Allows you to create a new announcement in the portal, which can be used to communicate important information to participants. This operation is typically used to inform users about updates, events, or changes relevant to their benefits.'
      operationId: PortalInfo_AddAnnouncement
      requestBody:
        description: Announcement Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
      responses:
        '200':
          description: Successfully created the announcement. The response contains the details of the newly created announcement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
  '/services/portalinfo/downloadableform/{tpaId}/{employerId}':
    get:
      tags:
        - PortalInfo
      summary: Get a list of downloadable forms
      description: Retrieve a list of downloadable forms associated with a specific TPA and employer. This endpoint is useful for accessing various forms that participants may need for their benefits management.
      operationId: PortalInfo_GetDownloadableForms
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the list of downloadable forms.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-DownloadableFormArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-DownloadableFormArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
  '/services/portalinfo/downloadableform/{tpaId}':
    get:
      tags:
        - PortalInfo
      summary: Get the details of a downloadable form
      description: 'Retrieve detailed information about a specific downloadable form associated with a given TPA ID. This endpoint is useful for accessing form metadata, such as its description, visibility, and expiration details.'
      operationId: PortalInfo_GetDownloadableForm
      parameters:
        - name: infoKey
          in: query
          description: 'The unique identifier for the portal information, used to specify which form details to retrieve.'
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the downloadable form details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
    delete:
      tags:
        - PortalInfo
      summary: Delete a downloadable form
      description: Deletes a specified downloadable form associated with the given TPA ID. This operation is typically used to remove outdated or unnecessary forms from the portal.
      operationId: PortalInfo_DeleteDownloadableForm
      parameters:
        - name: infoKey
          in: query
          description: The unique key identifying the specific portal information to be deleted. This integer value is required to locate the form within the system.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the downloadable form. The response confirms that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoDownloadableformTpaIdDelete200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoDownloadableformTpaIdDelete200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /services/portalinfo/downloadableform:
    put:
      tags:
        - PortalInfo
      summary: Edit a downloadable form
      description: 'Update the details of a specific downloadable form in the portal. This operation is used to modify existing form information, such as file details, visibility settings, and associated metadata.'
      operationId: PortalInfo_UpdateDownloadableForm
      requestBody:
        description: Downloadable Form Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
      responses:
        '200':
          description: OK - The downloadable form has been successfully updated. The response will include the updated form details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
    post:
      tags:
        - PortalInfo
      summary: Add a downloadable form
      description: 'Allows you to upload a downloadable form to the portal, making it accessible to participants. This operation is typically used to update or add new forms that participants can download for their reference.'
      operationId: PortalInfo_AddDownloadableForm
      requestBody:
        description: Downloadable Form Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
      responses:
        '200':
          description: 'OK - The form was successfully added to the portal. The response will include the details of the uploaded form, confirming its addition.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
  '/services/portalinfo/downloadableform/download/{tpaId}':
    get:
      tags:
        - PortalInfo
      summary: Get download form
      description: Retrieve a downloadable form associated with a specific TPA ID. This operation is typically used to access forms needed for various participant-related processes.
      operationId: PortalInfo_GetDownloadForm
      parameters:
        - name: fileKey
          in: query
          description: The unique identifier for the file being requested. This integer value is essential for retrieving the correct file.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the requested file details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FileDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FileDetails'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/portalinfo/faq/{tpaId}/{employerId}':
    get:
      tags:
        - PortalInfo
      summary: Get a list of FAQs
      description: 'Retrieve a list of frequently asked questions (FAQs) for a specific TPA and employer combination. This endpoint is useful for participants seeking information about services, policies, or procedures related to their benefits.'
      operationId: PortalInfo_GetFaqs
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text values in the specified language, defaulting to English if not specified or if an invalid value is sent. If Spanish or French is requested and a particular field lacks a translated value, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of FAQs. The response contains an array of FAQ objects relevant to the specified TPA and employer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-FAQArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Portal-FAQArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
  '/services/portalinfo/faq/{tpaId}':
    get:
      tags:
        - PortalInfo
      summary: Get the details of a FAQ
      description: Retrieve detailed information about a specific FAQ entry identified by the TPA ID and Info Key. This operation is useful for displaying FAQ content in the WealthCare Portal or Mobile applications.
      operationId: PortalInfo_GetFaq
      parameters:
        - name: infoKey
          in: query
          description: 'The unique identifier for the FAQ entry, used to retrieve specific information about that FAQ.'
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. The API will return text in the specified language (Spanish, English, or French), defaulting to English if not provided or if an invalid value is sent. If a requested language lacks a translation for a specific field, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the FAQ details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
    delete:
      tags:
        - PortalInfo
      summary: Delete a FAQ entry
      description: This endpoint allows you to delete a specific FAQ entry identified by the TPA ID and the information key. It is typically used to manage and update the FAQ content in the portal.
      operationId: PortalInfo_DeleteFaq
      parameters:
        - name: infoKey
          in: query
          description: The unique identifier for the FAQ entry that you wish to delete. This integer value specifies which FAQ entry to remove from the system.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully deleted the FAQ entry. The response confirms that the operation was completed without errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoFaqTpaIdDelete200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoFaqTpaIdDelete200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  /services/portalinfo/faq:
    put:
      tags:
        - PortalInfo
      summary: Edit a FAQ entry
      description: Update the details of a specific FAQ entry in the portal. This operation is typically used to modify existing FAQ information to ensure it remains accurate and relevant.
      operationId: PortalInfo_UpdateFaq
      requestBody:
        description: FAQ Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
      responses:
        '200':
          description: Successfully updated the FAQ entry. The response contains the updated FAQ details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
    post:
      tags:
        - PortalInfo
      summary: Add a FAQ entry
      description: 'Allows you to add a new FAQ entry to the system, providing users with essential information regarding the portal''s functionalities. This operation is typically used to keep users informed about common queries and updates.'
      operationId: PortalInfo_AddFaq
      requestBody:
        description: FAQ Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
      responses:
        '200':
          description: Successfully added the FAQ entry. The response contains the details of the newly created FAQ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
  '/services/portalinfo/portaloptions/{tpaId}':
    get:
      tags:
        - PortalInfo
      summary: Get Portal Options
      description: Retrieve the available portal options for a specific TPA (Third Party Administrator) identified by the `tpaId`. This endpoint is typically used to configure or customize the portal experience based on the TPA's settings.
      operationId: PortalInfo_GetPortalOptions
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved portal options for the specified TPA. The response contains a list of available configurations and settings that can be applied to the portal.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoPortaloptionsTpaIdGet200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesPortalinfoPortaloptionsTpaIdGet200ApplicationJsonResponse'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/participant/employee/threshold/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantEmployee
      summary: Get Card Suspension Threshold Information of Employee
      description: 'Retrieve the card suspension threshold information, including balance due and card suspension status, for a specific participant identified by their TPA ID, Employer ID, and Participant ID.'
      operationId: ParticipantEmployee_GetThresholdInfo1019
      responses:
        '200':
          description: Successfully retrieved the threshold information for the specified participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1019.ParticipantThresholdInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1019.ParticipantThresholdInfo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/expenses/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantExpenses
      summary: Get list of expenses
      description: 'Retrieve a list of expenses associated with a specific participant, identified by their unique TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining expense records over a specified date range.'
      operationId: ParticipantExpenses_GetParticipantExpenses1018
      parameters:
        - name: dateFilter
          in: query
          description: 'Specifies the time frame for which to retrieve expenses. Options include filtering for the last 90 days, last 6 months, last year, or all available records.'
          required: true
          schema:
            enum:
              - Last90Days
              - Last6Months
              - LastOneYear
              - All
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: opt
          in: query
          description: 'Determines the visibility of dependent provider information. Use 0 to unmask all information, 1 to mask all, or 2 for conditional masking based on privacy settings. Defaults to 0.'
          schema:
            type: integer
            format: int32
        - name: Accept-Language
          in: header
          description: 'Indicates the participant’s preferred language for response content. The API will return text in the specified language, defaulting to English if not provided or if an invalid value is sent. If a requested language lacks a translation for a specific field, the English value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of expenses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1018.ParticipantExpenses'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1018.ParticipantExpenses'
    put:
      tags:
        - ParticipantExpenses
      summary: Update an existing expense
      description: Update an existing expense
      operationId: ParticipantExpenses_UpdateParticipantExpense750
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Participant Expense Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1016.ParticipantExpenseDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1016.ParticipantExpenseDetail'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1016.ParticipantExpenseDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1016.ParticipantExpenseDetail'
    post:
      tags:
        - ParticipantExpenses
      summary: Add an expense
      description: Add an expense
      operationId: ParticipantExpenses_AddParticipantExpense750
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Expense Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0216.ParticipantExpenseDetail'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0216.ParticipantExpenseDetail'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0216.ParticipantExpenseDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0216.ParticipantExpenseDetail'
    delete:
      tags:
        - ParticipantExpenses
      summary: Delete an expense
      description: Delete an expense
      operationId: ParticipantExpenses_DeleteParticipantExpense750
      parameters:
        - name: expKey
          in: query
          description: Format - int64. Expense Key
          required: true
          schema:
            type: integer
            format: int64
        - name: org
          in: query
          description: Transaction Original Code
          required: true
          schema:
            enum:
              - None
              - POSCardSwipe
              - POSKeyedIn
              - POSPhonedIn
              - POSMbiSubmitted
              - ManualScreen
              - ManualEFT
              - ManualAgent
              - ParticipantManualScreen
              - ParticipantMobileScreen
              - HZDirect
              - eClaimManagerManual
              - eClaimManagerTPS
              - WebServiceClaim
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/expenses/details/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantExpenses
      summary: Get expense details
      description: Get expense details
      operationId: ParticipantExpenses_GetParticipantExpenseDetails1018
      parameters:
        - name: expKey
          in: query
          description: Format - int64. Expense Key
          required: true
          schema:
            type: integer
            format: int64
        - name: org
          in: query
          description: Transaction Original Code
          required: true
          schema:
            enum:
              - None
              - POSCardSwipe
              - POSKeyedIn
              - POSPhonedIn
              - POSMbiSubmitted
              - ManualScreen
              - ManualEFT
              - ManualAgent
              - ParticipantManualScreen
              - ParticipantMobileScreen
              - HZDirect
              - eClaimManagerManual
              - eClaimManagerTPS
              - WebServiceClaim
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: opt
          in: query
          description: "0: UnMask all dependent provider information. 1: Mask all dependent provider information. 2: Mask dependent provider information based on dependent privacy, default to 0.\n"
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1018.ParticipantExpenseDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1018.ParticipantExpenseDetail'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/expenses/ExpenseList/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantExpenses
      summary: Get the Plan Level Expenses assigned to the Service Category
      description: 'Retrieve the plan-level expenses associated with a specific service category for a participant, identified by their unique identifiers. This operation is useful for displaying relevant expense information on the Mobile and Azure portals.'
      operationId: ParticipantExpenses_GetPlanExpenseList
      parameters:
        - name: planId
          in: query
          description: The unique identifier for the plan whose expenses are being queried. This parameter is required to filter the expenses specific to the selected plan.
          required: true
          schema:
            type: string
        - name: planStartDate
          in: query
          description: The start date of the plan in ISO 8601 format (YYYY-MM-DD). This parameter is required to define the time frame for which expenses are being retrieved.
          required: true
          schema:
            type: string
        - name: planEndDate
          in: query
          description: The end date of the plan in ISO 8601 format (YYYY-MM-DD). This parameter is required to specify the duration for which expenses are being queried.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully retrieved the list of plan-level expenses. The response contains an array of expense objects, each detailing the specific expenses associated with the service category for the given plan and participant.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-PlanExpenseListArra'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-PlanExpenseListArra'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/accounts/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get HSA account details
      description: Get HSA account details
      operationId: ParticipantHsa_GetDataPartnerAccount
      parameters:
        - name: flexAcctId
          in: query
          description: Flex Account Id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DataPartnerAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DataPartnerAccount'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/accounts/reassoc/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get Reassociated HSA Account details
      description: Get Reassociated HSA Account details
      operationId: ParticipantHsa_GetReassociatedDataPartnerAccountsAsync
      parameters:
        - name: flexAcctId
          in: query
          description: Flex Account Id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ReassociatedDataPar'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ReassociatedDataPar'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/bankaccounts/{tpaId}/{employerId}/{participantId}/{dataPartnerId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get list of the External Bank Accounts
      description: Get list of the External Bank Accounts
      operationId: ParticipantHsa_GetBankAccounts
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ExternalBankAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ExternalBankAccount'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: dataPartnerId
        in: path
        description: Data Partner Id
        required: true
        schema:
          type: string
  '/services/participant/hsa/bankaccounts/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get an External Bank Account details
      description: Get an External Bank Account details
      operationId: ParticipantHsa_GetBankAccount
      parameters:
        - name: accountKey
          in: query
          description: Bank Account Key
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
    put:
      tags:
        - ParticipantHsa
      summary: Edit an External Bank Account
      description: 'Update the details of an external bank account associated with a specific participant, identified by TPA ID, Employer ID, and Participant ID. This operation is typically used to modify bank account information such as account name, type, and routing details.'
      operationId: ParticipantHsa_EditBankAccount
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Bank Account Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
      responses:
        '200':
          description: Successfully updated the external bank account details. The response contains the updated bank account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
    post:
      tags:
        - ParticipantHsa
      summary: Add an External Bank Account
      description: 'Add an external bank account for a specific participant, identified by their TPA ID, Employer ID, and Participant ID. This operation is used to link an external bank account for transactions such as ACH transfers.'
      operationId: ParticipantHsa_AddBankAccount_0424
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Bank Account Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0424.ExternalBankAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0424.ExternalBankAccount'
      responses:
        '204':
          description: 'No Content - The request was successful, and the external bank account has been added without any content in the response body.'
    delete:
      tags:
        - ParticipantHsa
      summary: Delete a bank account
      description: Delete a bank account
      operationId: ParticipantHsa_DeleteBankAccount
      parameters:
        - name: accountKey
          in: query
          description: Format - int64. Bank Account Key
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/bankaccounts/validation/{tpaId}/{employerId}/{participantId}':
    post:
      tags:
        - ParticipantHsa
      summary: Validate External Bank Account
      description: Validate an external bank account associated with a participant by verifying the provided credit amounts against the bank's records.
      operationId: ParticipantHsa_ValidateExternalBankAccount
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: External Bank Account Validation Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccountValidationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccountValidationRequest'
      responses:
        '200':
          description: Successfully validated the external bank account. The response indicates whether the validation was successful or not.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantHsaBankaccountsValidationTpaIdEmployerIdParticipantIdPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantHsaBankaccountsValidationTpaIdEmployerIdParticipantIdPost'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/contributions/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get pending contribution
      description: 'Retrieve the pending contributions for a specific participant identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for checking the status of contributions that have not yet been processed.'
      operationId: ParticipantHsa_GetPendingContributions
      parameters:
        - name: flexaccountkey
          in: query
          description: 'The Flex Account Key associated with the participant''s account, used to identify specific flex accounts for contribution retrieval.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the pending contributions for the specified participant. The response contains an array of pending contribution objects, each detailing the contribution''s status, amounts, and relevant dates.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-PendingContribu'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-PendingContribu'
    put:
      tags:
        - ParticipantHsa
      summary: Update contribution
      description: 'Update the contribution details for a specific participant identified by their TPA ID, Employer ID, and Participant ID.'
      operationId: ParticipantHsa_UpdatePendingContributions
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Contribution Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
      responses:
        '200':
          description: OK - The contribution details were successfully updated. The response body contains the updated contribution information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
    post:
      tags:
        - ParticipantHsa
      summary: Insert contribution
      description: 'Insert a new contribution for a specific participant identified by TPA ID, Employer ID, and Participant ID. This operation is used to record contributions to Health Savings Accounts (HSAs) and is essential for managing participant funding.'
      operationId: ParticipantHsa_InsertPendingContributions_0222
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Contribution Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
    delete:
      tags:
        - ParticipantHsa
      summary: Delete contribution
      description: Delete contribution
      operationId: ParticipantHsa_DeletePendingContributions
      parameters:
        - name: pendingcontributionkey
          in: query
          description: Format - int64. Pending Contribution Key
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/contributions/datebounds/{dataPartnerId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get the date bounds for making HSA contributions
      description: Retrieve the date boundaries for making Health Savings Account (HSA) contributions based on the specified data partner ID.
      operationId: ParticipantHsa_GetContributionDateBounds
      responses:
        '200':
          description: Successfully retrieved the contribution date bounds.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Transactions.ContributionDateBoundsInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Transactions.ContributionDateBoundsInfo'
    parameters:
      - name: dataPartnerId
        in: path
        description: The data partner id for the days to delay that should be included in the return object
        required: true
        schema:
          type: string
  '/services/participant/hsa/contributions/earliestdate/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get earliest HSA contribution date
      description: 'Retrieve the earliest date for HSA contributions for a specific participant, identified by their TPA ID, Employer ID, and Participant ID.'
      operationId: ParticipantHsa_GetEarliestHsaContributionDate
      parameters:
        - name: flexaccountkey
          in: query
          description: 'Flex Account Key, an integer representing the specific account for which the contribution date is being retrieved.'
          required: true
          schema:
            type: integer
            format: int32
        - name: prioryear
          in: query
          description: Boolean flag indicating whether to retrieve the earliest contribution date for the prior year. Set to true to query the previous year's data.
          required: true
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the earliest HSA contribution date for the specified participant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantHsaContributionsEarliestdateTpaIdEmployerIdParticipantIdG'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantHsaContributionsEarliestdateTpaIdEmployerIdParticipantIdG'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/contributions/withdrawldate/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get the expected withdrawl date
      description: Retrieve the expected withdrawal date for a participant's HSA contributions based on their unique identifiers and specified contribution date.
      operationId: ParticipantHsa_GetExpectedWithdrawlDate
      parameters:
        - name: flexaccountkey
          in: query
          description: 'Unique identifier for the participant''s account, used to specify which account''s withdrawal date is being requested.'
          required: true
          schema:
            type: integer
            format: int32
        - name: contributiondate
          in: query
          description: The date of the contribution in RFC3339 format (date-time). This date is used to calculate the expected withdrawal date.
          required: true
          schema:
            type: string
            format: date-time
        - name: prioryear
          in: query
          description: A boolean flag indicating whether to retrieve the expected withdrawal date for the prior year. Set to true to get the prior year's date.
          required: true
          schema:
            type: boolean
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the expected withdrawal date. The response contains the date formatted as a string in date-time format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantHsaContributionsWithdrawldateTpaIdEmployerIdParticipantId'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantHsaContributionsWithdrawldateTpaIdEmployerIdParticipantId'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/datapartners/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get data partner list associated with an employee
      description: 'Retrieve a list of data partners associated with a specific employee identified by their TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining relevant data partner information for employee benefit management.'
      operationId: ParticipantHsa_GetDataPartners
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the data partner list. The response contains an array of data partner objects associated with the specified employee.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DataPartnerArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DataPartnerArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/payments/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantHsa
      summary: Get HSA payments
      description: Get HSA payments
      operationId: ParticipantHsa_GetHSAPayments
      parameters:
        - name: status
          in: query
          description: "Indicate whether it''s to get the failed payment or pending payment. 1: Failed payment. 0: pending payment\n"
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Transactions-HSAOnlinePaymentInfoAr'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-Transactions-HSAOnlinePaymentInfoAr'
    post:
      tags:
        - ParticipantHsa
      summary: Add HSA payment
      description: This API operation is not for partner use.  Please contact Alegeus with any questions.
      operationId: ParticipantHsa_AddHSAPayment
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Payment request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.FlexClaims.OnlinePaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.FlexClaims.OnlinePaymentRequest'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/hsa/payments/{tpaId}/{employerId}/{participantId}/{expenseKey}':
    post:
      tags:
        - ParticipantHsa
      summary: Add HSA Payment for expenses
      description: This API operation is not for partner use.  Please contact Alegeus with any questions.
      operationId: ParticipantHsa_AddHSAPaymentForExpenses
      parameters:
        - name: org
          in: query
          description: '2: eClaims by manual entry from mobile apps, 3: eClaims by TPS from mobile apps, 6: eClaims by manual entry from WCP, 7: eClaims by TPS from WCP'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Online Payment Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.FlexClaims.OnlinePaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.FlexClaims.OnlinePaymentRequest'
      responses:
        '204':
          description: No Content
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - name: expenseKey
        in: path
        description: Format - int64. Expense Key
        required: true
        schema:
          type: integer
          format: int64
  '/services/participant/hsa/payments/{tpaId}/{employerId}/{participantId}/details':
    get:
      tags:
        - ParticipantHsa
      summary: Get HSA payment details
      description: Get HSA payment details
      operationId: ParticipantHsa_GetHSAPaymentDetails_2106
      parameters:
        - name: claimKey
          in: query
          description: Claim Key
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Transactions.HSAOnlinePaymentInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Transactions.HSAOnlinePaymentInfo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/receipts/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantClaimReceipts
      summary: View receipt
      description: 'Retrieve the details of a specific receipt associated with a participant, identified by TPA ID, Employer ID, and Participant ID. This operation is useful for accessing receipt information for claims submitted by participants.'
      operationId: ParticipantClaimReceipts_ViewReceipt
      parameters:
        - name: filekey
          in: query
          description: Unique system-generated key used to identify an image file uploaded by the client. This key is essential for retrieving the specific receipt image.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successfully retrieved the receipt details. The response contains the receipt information, including file metadata and the receipt image in Base64 format.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
              example:
                FileKey: 851
                FileFormat: 64
                ContentLength: 55008
                ContentType: 
                FileName: Blank Receipt.jpg
                InputStream: 
                Base64: /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQc.....
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/receipts/submitted/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - ParticipantClaimReceipts
      summary: Upload manual claim receipt
      description: Upload a manual claim receipt.
      operationId: ParticipantClaimReceipts_UploadManualClaimReceipt
      parameters:
        - name: claimkey
          in: query
          description: A system generated key that indicates the specific claim to which the receipt should be added
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: File info to upload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
            example:
              FileKey: 359
              FileFormat: 64
              ContentLength: 8886
              ContentType: 
              FileName: FAKE RECEIPT.jpg
              InputStream: 
              Base64: /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsJCQcJCQcJCQkJ.....
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/receipts/pos/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - ParticipantClaimReceipts
      summary: Upload card transaction receipt
      description: Upload a card transaction receipt to associate it with a specific transaction for record-keeping and claims processing.
      operationId: ParticipantClaimReceipts_UploadCardTransacationReceipt
      parameters:
        - name: transactionid
          in: query
          description: The identifier for the transaction to which you wish to add a receipt. This ID must match an existing transaction in the system.
          required: true
          schema:
            type: string
        - name: setldate
          in: query
          description: The settlement date of the transaction to which you wish to add a receipt. This date should be in the format YYYY-MM-DD.
          required: true
          schema:
            type: string
        - name: seqnum
          in: query
          description: The transaction sequence number received from the card terminal when the transaction was completed. This number is essential for linking the receipt to the correct transaction.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'The receipt file information to upload, including its metadata and content. This data is necessary for processing claims and maintaining transaction records.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
            example:
              FileKey: 0
              FileFormat: 64
              ContentLength: 8886
              ContentType: 
              FileName: FAKE RECEIPT.jpg
              InputStream: 
              Base64: /9j/4AAQSkZJRgABAQAAAQABAA....
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
      responses:
        '200':
          description: Successfully uploaded the receipt and associated it with the specified transaction. The response includes details about the updated claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/receipts/receiptinfo/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - ParticipantClaimReceipts
      summary: Upload Receipt against POS Posts or Manual Claims
      description: 'Uploads a receipt for a specific participant, identified by TPA ID, Employer ID, and Participant ID, to be associated with either Point of Sale (POS) posts or manual claims.'
      operationId: ParticipantClaimReceipts_UploadReceiptInfo
      parameters:
        - name: setldate
          in: query
          description: 'The date on which the settlement occurs, formatted as a string (e.g., "YYYY-MM-DD"). This parameter is required to specify the settlement date for the receipt being uploaded.'
          required: true
          schema:
            type: string
        - name: seqnum
          in: query
          description: 'The sequence number associated with the settlement, represented as an integer. This parameter is required to uniquely identify the settlement sequence for the receipt upload.'
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the file information for the receipt being uploaded, including metadata and the actual file content. The request body must adhere to the specified schema for successful processing.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
      responses:
        '200':
          description: 'Successfully uploaded the receipt. The response contains information about the uploaded receipt, including system-generated identifiers and metadata.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /registration/validateCodeEmail:
    post:
      tags:
        - Registration
      summary: Verify a validation code to match with the code sent to a user through email previously.
      description: Verify a validation code to match with the code sent to a user through email previously.
      operationId: Registration_ValidateEmail
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'A request record including employee information and the IDs, which identiy the code which was sent previously.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationResponse'
  /registration/validateCodeSMS:
    post:
      tags:
        - Registration
      summary: Verify a validation code to match with the code sent to a user through SMS previously.
      description: 'This endpoint verifies a validation code against the code previously sent via SMS to the user, ensuring that the user has access to the provided phone number.'
      operationId: Registration_ValidateSMS
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: A request record that includes employee information and identifiers necessary to validate the previously sent code.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationRequest'
      responses:
        '200':
          description: Successfully verified the validation code. The response contains the status of the verification process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationResponse'
  /registration/validateuser:
    post:
      tags:
        - Registration
      summary: Validate a user account
      description: This endpoint validates a user account by checking the provided credentials against the system. It is typically used during the registration process to ensure that the user can be authenticated successfully.
      operationId: Registration_ValidateUser
      responses:
        '200':
          description: OK - The user account has been successfully validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationValidateuserPost200ApplicationJsonResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegistrationValidateuserPost200ApplicationJsonResponse'
  '/securelogon/analyze/{user}':
    post:
      tags:
        - SecureLogon
      summary: Perform authentication analysis
      description: Analyzes authentication attempts for a specified user to assess security and identify potential issues. This endpoint is typically used to evaluate login activities and trigger appropriate security measures based on the analysis results.
      operationId: SecureLogon_Analyze0222
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Analyze Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.AnalyzeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.AnalyzeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0222.AnalyzeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0222.AnalyzeResponse'
    parameters:
      - name: user
        in: path
        description: User Name
        required: true
        schema:
          type: string
  '/services/participant/accounts/disclosure/{tpaId}':
    get:
      tags:
        - ParticipantAccount
      summary: "Get Employee Disclosure Accounts.\r\nThis method returns the decrypted EmployeeId, FirstName and LastName."
      description: 'Retrieves the disclosure accounts for a specific employee, returning their decrypted Employee ID, First Name, and Last Name. This operation is useful for obtaining sensitive employee information securely.'
      operationId: ParticipantAccount_GetEmployeeDisclosureAccounts0317
      parameters:
        - name: employerId
          in: query
          description: 'Unique identifier for the employer, assigned during employer creation. This identifier consists of a 3-character prefix followed by a unique string.'
          required: true
          schema:
            type: string
        - name: participantId
          in: query
          description: The unique identifier for the participant whose disclosure accounts are being retrieved.
          required: true
          schema:
            type: string
        - name: lastName
          in: query
          description: 'The last name of the participant, used to filter the disclosure accounts returned.'
          required: true
          schema:
            type: string
        - name: tokenId
          in: query
          description: 'The Disclosure Acknowledgement Token ID, which is required to verify the participant’s consent for accessing their disclosure information.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeDisclosureA'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeDisclosureA'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/participant/accounts/disclosure/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: "Get Employee Disclosure Accounts.\r\nThis method returns the decrypted EmployeeId, FirstName and LastName."
      description: 'Retrieves the disclosure accounts for a specific employee, identified by their TPA ID, Employer ID, and Participant ID. This operation is useful for obtaining sensitive employee information in a secure manner.'
      operationId: ParticipantAccount_GetEmployeeDisclosureAccounts0717
      parameters:
        - name: lastName
          in: query
          description: 'The last name of the participant, used to filter the results. This parameter is required to ensure accurate retrieval of employee disclosure accounts.'
          required: true
          schema:
            type: string
        - name: tokenId
          in: query
          description: The unique identifier for the disclosure acknowledgement token. This token is necessary for validating the request and ensuring that the user has acknowledged the disclosure.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successful retrieval of employee disclosure accounts. The response contains the decrypted Employee ID, First Name, and Last Name, along with additional account details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeDisclosureA'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeDisclosureA'
    put:
      tags:
        - ParticipantAccount
      summary: Update the Data Partner Account that the Employee has viewed the Disclosures
      description: Update the status of disclosures viewed by a specific employee associated with a data partner account.
      operationId: ParticipantAccount_UpdateDisclosureViewedStatus
      parameters:
        - name: dataPartnerId
          in: query
          description: Unique identifier for the data partner associated with the employee's account.
          required: true
          schema:
            type: string
        - name: flexAcctKey
          in: query
          description: Identifier for the flexible account linked to the employee's disclosures.
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: 'No Content - The request was successful, and the disclosure status has been updated without returning any content.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/hsainvestments/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get HSA Investment Details
      description: 'Retrieve detailed investment information for a specific HSA account, identified by TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining the current balance and portfolio details of HSA investments managed by Devenir.'
      operationId: ParticipantAccount_GetHsaInvestmentDetails
      parameters:
        - name: flexaccountkey
          in: query
          description: 'A system-generated ID for the benefit account being retrieved, which helps to uniquely identify the specific account within the system.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: 'Successful retrieval of HSA investment details. The response contains the total balance, portfolio balance, and a list of investment allocations.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.HsaInvestmentDetails'
              example:
                TotalBalance: 969.53
                PortfolioBalance: 0
                Portfolio:
                  - Name: 
                    Description: 
                    MarketValue: 0
                  - Name: 
                    Description: 
                    MarketValue: 0
                  - Name: 
                    Description: 
                    MarketValue: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.HsaInvestmentDetails'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/hsainvestments/autotransfersetup/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - ParticipantAccount
      summary: Update Auto Transfer to Investment setting
      description: Update Auto Transfer to Investment setting
      operationId: ParticipantAccount_UpdateAutoTransferInvestmentsSettings
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: Auto Transfer to Investment Info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0617.AutoTransferSetting'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0617.AutoTransferSetting'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesParticipantAccountsHsainvestmentsAutotransfersetupTpaIdEmployerIdPar'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServicesParticipantAccountsHsainvestmentsAutotransfersetupTpaIdEmployerIdPar'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/hsasummary/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get HSA Account Summary
      description: 'Retrieve a summary of a participant''s Health Savings Account (HSA), including contributions, balances, and investment details. This endpoint is essential for obtaining up-to-date financial information regarding a participant''s HSA.'
      operationId: ParticipantAccount_GetHsaSummary_0421
      parameters:
        - name: flexaccountId
          in: query
          description: 'A unique identifier for the flex account, used to retrieve specific account details.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the HSA account summary.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0421.HSAAccountSummary'
              example:
                HSACurrentBalance: 969.53
                CashAndEquivalents: 0
                FixedIncome: 0
                EquitiesAndMutualFunds: 0
                Category1Desc: 
                Category1Value: 0
                Category2Desc: 
                Category2Value: 0
                Category3Desc: 
                Category3Value: 0
                Category4Desc: 
                Category4Value: 0
                Category5Desc: 
                Category5Value: 0
                Category6Desc: 
                Category6Value: 0
                Category7Desc: 
                Category7Value: 0
                Category8Desc: 
                Category8Value: 0
                Category9Desc: 
                Category9Value: 0
                Category10Desc: 
                Category10Value: 0
                Category11Desc: 
                Category11Value: 0
                Category12Desc: 
                Category12Value: 0
                Category13Desc: 
                Category13Value: 0
                Category14Desc: 
                Category14Value: 0
                Category15Desc: 
                Category15Value: 0
                Category16Desc: 
                Category16Value: 0
                Category17Desc: 
                Category17Value: 0
                Category18Desc: 
                Category18Value: 0
                Category19Desc: 
                Category19Value: 0
                Category20Desc: 
                Category20Value: 0
                HSAProductPartnerName: Quane Bank HSA
                PortfolioBalance: 0
                TotalHSABalance: 969.53
                PendingTrades: 0
                TotalAvailabletoSpend: 969.53
                MinimumBalanceRqdinHSAAcct: 500
                MinimumBalToInvestInTrustAcct: 501
                TotalAvailabletoInvest: 469.53
                CurrentYearContributions: 1000
                CurrentYearTotContributions: 1000
                CurrentYearRolloverContributions: 0
                CurrentYearDistributions: -112
                CurrentYearInterestPaid: 0.03
                PriorYearContributions: 0
                PriorYearRolloverContributions: 0
                PriorYearDistributions: 0
                RemainingBalanceAmt: 0
                SpentAmt: 0
                ExternalAcctId: '29000000638'
                TrustAcctNum: eOgRNWLdC9tiPoD3MrEImA==
                YourContributionsYTD: 1000
                EmployerContributionsYTD: 0
                TotalContributionsYTD: 1000
                EmployerPerPayPeriodAmt: 10000
                EmployeePerPayPeriodAmt: 0
                YourPriorYearContributions: 0
                EmployerPriorYearContributions: 0
                TotalPriorContributions: 0
                CurrYrSingleLimit: 3650
                CurrYrFamilyLimit: 7300
                CurrYrCatchUpContribution: 1000
                PriorYrSingleLimit: 3600
                PriorYrFamilyLimit: 7200
                PriorYrCatchUpContribution: 1000
                CurrentYear: 2022
                IsTransferBlocked: false
                TransferBlockedExpDte: '2023-01-01T08:00:00.0000000+00:00'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0421.HSAAccountSummary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/intervaltracker/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get Account Interval Tracker Details
      description: Get Account Interval Tracker Details
      operationId: ParticipantAccount_GetAccountIntervalTrackerDetails
      parameters:
        - name: flexaccountId
          in: query
          description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, i.e., "0001699940".'
          required: true
          schema:
            type: string
        - name: year
          in: query
          description: 'If sent, only interval tracker details in that calendar year will be included.  This should be a 4-digit year (i.e., 2025). If 0 is sent, interval tracker details from all applicable years will be sent.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountIntervalTrac'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountIntervalTrac'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/accounts/servicecategories/{tpaId}/{employerId}/{participantId}/{flexAcctId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get Account Service Categories
      description: 'Retrieve the accepted Merchant Category and Service Category Codes for a specific benefit account, helping to identify eligible merchants and services for fund usage.'
      operationId: ParticipantAccount_GetAccountServiceCategories
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference for the response. If not specified or invalid, defaults to English. If a requested language lacks a translation for a field, the English value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      responses:
        '200':
          description: Successfully retrieved the account service categories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountServiceCateg'
              example:
                - SCId: Dental
                  SCName: Dental
                  DefReimbMethodCde: 0
                  MaxTransAmt: -1
                  MaxCategoryTotalAmt: -1
                  CopayPerTransAmt: 0
                  PercentPerTrans: 0
                  TierTypeId: 
                  CostShareOptions: 1
                  SCCodes:
                    - SCCode: Rx
                      Description: Prescription
                      ServiceCategoryCodeTiers:
                        - TierKey: 0
                          TierId: 
                          BypassDeductible: 0
                          DeductibleNotMetAction: 0
                          ReimbTotalAmt: 3
                          ReimbDeductibleAmt: 3
                          ReimbCoinsuranceAmt: 3
                          ReimbCopayAmt: 3
                          ReimbBenefitMaxMetAmt: 3
                          ReimbBenefitExcessAmt: 3
                          ReimbNotCoveredAmt: 3
                          ReimbAboveRCAmt: 3
                  MCCodes:
                    - CardTypeCode: 1
                      MerchantCategoryCode: '0013'
                      Description: NewBroadcast
                      MCCFlags: 1
                  SpecialMCCodes:
                    - CardTypeCode: 0
                      MerchantCategoryCode: string
                      Description: string
                      MCCFlags: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountServiceCateg'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  '/services/participant/accounts/stablevalueprovider/{tpaId}/{flexAcctId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get HSA Interest Plan Stable Value Provider
      description: 'Retrieve detailed information about the stable value provider associated with a participant''s Health Savings Account (HSA) interest plan, identified by the TPA ID and flex account ID.'
      operationId: ParticipantAccount_GetHsaInterestPlanStableValueProvider_0725
      responses:
        '200':
          description: Successfully retrieved the stable value provider information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0725.HsaInterestPlanStableValueProvider'
              example:
                TpaId: 
                FlexAcctId: 
                ProviderName: 
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0725.HsaInterestPlanStableValueProvider'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  '/services/participant/accounts/disclosures/{tpaId}/{flexAcctId}':
    get:
      tags:
        - ParticipantAccount
      summary: Get HSA Interest Plan Disclosures
      description: 'Retrieve detailed information regarding the HSA (Health Savings Account) interest plan disclosures associated with a specific participant''s flex account. This endpoint is essential for understanding the terms, conditions, and potential risks of high-yield savings or investment products.'
      operationId: ParticipantAccount_GetHsaInterestPlanDisclosures_0725
      responses:
        '200':
          description: Successfully retrieved the HSA interest plan disclosures.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0725.HsaInterestPlanDisclosures'
              example:
                Disclosures:
                  - TpaId: 
                    FlexAcctId: 
                    DisclosureDescription: 
                    DisclosureUrl: 
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0725.HsaInterestPlanDisclosures'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/flexAcctIdPath'
  '/services/participant/receipts/transaction/{tpaId}/{employerId}/{participantId}/setlseq':
    put:
      tags:
        - ParticipantClaimReceipts
      summary: Upload transaction activity receipt
      description: 'Upload a transaction activity receipt for a specific participant, identified by TPA ID, Employer ID, and Participant ID. This operation is typically used to submit receipts related to transactions for record-keeping and claims processing.'
      operationId: ParticipantClaimReceipts_UploadTransacationActivityReceiptSetlSeq_2106
      parameters:
        - name: setlSeqNum
          in: query
          description: 'Sequential number assigned by Alegeus settlement within a settlement date, used to uniquely identify the transaction. This parameter is required for associating the receipt with the correct transaction.'
          required: true
          schema:
            type: integer
            format: int32
        - name: setlDate
          in: query
          description: The settlement date of the transaction to which you wish to add a receipt. This date must be in a valid format and corresponds to the transaction's settlement period.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      requestBody:
        description: 'Contains the file information to upload, including the receipt details. The request body must conform to the specified schema to ensure successful processing.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
            example:
              FileKey: 0
              FileFormat: 64
              ContentLength: 8886
              ContentType: 
              FileName: FAKE RECEIPT.jpg
              InputStream: 
              Base64: /9j/4AAQSkZJRgABAQAAAQABAAD/2wB....
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
      responses:
        '200':
          description: Successfully uploaded the receipt and associated it with the transaction. The response includes details about the transaction activity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionActivity'
              example:
                TransactionDate: '2023-01-01T08:00:00.0000000+00:00'
                TransactionType: Claim
                Description: Purchase
                TransactionAmt: 0
                HSATransactionType: 
                TransactionStatus: Denied
                TxnStatusToolTipText: false
                TransactionId: 1040024307-20221031-13331394
                SeqNumber: 0
                SettlementDate: '20221031'
                CanUploadReceipt: 
                HasReceipt: true
                ReceiptExpired: 
                ReceiptsInfo:
                  - TpaId: T02506
                    FileKey: 860
                    DocId: e449acbcb0554bccaf93b6166c1d0c20
                    DocDisplayName: e449acbcb0554bccaf93b6166c1d0c20
                    OriginalFileName: 
                    UploadDate: '2023-01-01T08:00:00.0000000+00:00'
                Claimant: 
                ServiceStartDate: '2023-01-01T08:00:00.0000000+00:00'
                AcctTypeCode: 
                AcctTypeDesc: 
                FlexAcctKey: 0
                DisplayName: 
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionActivity'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/reimbursements/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantReimbursements
      summary: Get a list of current (existing) reimbursement records associated with the participant.
      description: Get a list of current (existing) reimbursement records associated with the participant.
      operationId: ParticipantReimbursements_GetReimbursements_0424
      parameters:
        - name: recordcount
          in: query
          description: The maximum number of reimbursement records to return in the list
          required: true
          schema:
            type: integer
            format: int32
        - name: txnKey
          in: query
          description: The key to the transaction.
          schema:
            type: string
        - name: reimbKey
          in: query
          description: The key to the reimbursement.
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0424.ReimbursementSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0424.ReimbursementSummary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/reimbursements/pending/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantReimbursements
      summary: Get a list of pending reimbursement records associated with the participant.
      description: Get a list of pending reimbursement records associated with the participant.
      operationId: ParticipantReimbursements_GetPendingReimbursements
      parameters:
        - name: recordcount
          in: query
          description: The maximum number of reimbursement records to return in the list
          required: true
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-PendingReimbursemen'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Employee-PendingReimbursemen'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/cancelpayment/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - Transactions
      summary: Stop recurring payment
      description: Update the status of a recurring payment to stop future transactions for a specified participant. This operation is typically used when a participant wishes to discontinue automatic payments.
      operationId: Transactions_StopRecurringPayment
      parameters:
        - name: taskScheduleKey
          in: query
          description: Unique identifier for the scheduled payments associated with a recurring payment. This key is returned by the GetFutureRecurringPayments API and is essential for identifying which payment schedule to cancel.
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: 'No Content - Indicates that the request to stop the recurring payment was successful, and no further content is returned.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/adjudicatecard/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - Transactions
      summary: Adjudicate card transaction
      description: Update the adjudication status of a specific card transaction to "Ineligible". This operation is typically used to correct or update the status of a transaction based on eligibility criteria.
      operationId: Transactions_AdjudicateCard
      parameters:
        - name: setlDte
          in: query
          description: 'Settlement date for the transaction, formatted as YYYY-MM-DD. This date indicates when the transaction was settled and is required for processing the adjudication.'
          required: true
          schema:
            type: string
        - name: txnKey
          in: query
          description: 'Unique key for the transaction, used to identify the specific transaction being adjudicated. This key is essential for ensuring the correct transaction is updated.'
          required: true
          schema:
            type: string
        - name: etxnSeqNum
          in: query
          description: 'Sequence number for the transaction, which helps in tracking the order of transactions. This integer value is required to uniquely identify the transaction sequence.'
          required: true
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: 'Adjudication status for the transaction. The only allowed value is "Ineligible", indicating that the transaction does not meet eligibility criteria.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '204':
          description: 'No Content - The request was successful, and the adjudication status has been updated to "Ineligible". No additional content is returned in the response.'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/fxclaimlines/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get transaction details
      description: Get transaction details
      operationId: Transactions_GetFXClaimLines
      parameters:
        - name: externalClaimId
          in: query
          description: 'For an FX claim, this is the external identifier for the claim'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/decryptQuery'
        - name: opt
          in: query
          description: 'If a returned transaction is for a dependent, this flag indicates whether to mask certain information on the transaction or not. 0: do not mask 1: mask provider information on dependent transaction. PRIVATE will be returned for the transaction description, transaction provider descripton, transaction provder ID, service category code, service category code description, and merchant name.  2: mask provider information on dependent transaction only if Dependency Privacy is enabled. PRIVATE will be returned for the transaction description, transaction provider description, transaction provder ID, service category code, service category code description, and merchant name.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0717-TransactionDetailsExArray'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-_0717-TransactionDetailsExArray'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/reassoc/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get Recent Transactions for reassociated account.
      description: 'Retrieve recent transactions for a reassociated account identified by TPA ID, Employer ID, and Participant ID. This endpoint is useful for obtaining transaction history when an account has been reassociated with a new TPA or employer.'
      operationId: Transactions_GetReassocTransactions
      parameters:
        - name: flexAccountId
          in: query
          description: Unique identifier for the Flex Account associated with the participant's transactions.
          required: true
          schema:
            type: string
        - name: reassocTpaId
          in: query
          description: 'Unique identifier assigned to the reassociated TPA, used to track transactions under the new association.'
          required: true
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: 'Unique identifier for the reassociated Employer, necessary for filtering transactions relevant to the new employer.'
          required: true
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: 'Unique identifier for the reassociated Participant, ensuring that the transactions returned are specific to this participant.'
          required: true
          schema:
            type: string
        - name: reassocFlexAccountId
          in: query
          description: 'Unique identifier for the reassociated Flex Account, which helps in retrieving the correct transaction records.'
          required: true
          schema:
            type: string
        - name: recordCount
          in: query
          description: 'Specifies the number of transaction records to return. If not provided, a default number of records will be returned.'
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
        - name: includereceipts
          in: query
          description: 'Indicates whether to include receipts in the response. Set to 1 to include receipts; otherwise, receipts will not be included.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK - Successful retrieval of recent transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-TransactionActi'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-TransactionActi'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/reassoc/detailsex/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get Transaction Details for reassociated account.
      description: 'Retrieve detailed transaction information for a reassociated account identified by TPA ID, Employer ID, and Participant ID. This operation is useful for auditing and reviewing transaction history related to a participant''s account.'
      operationId: Transactions_GetReassocTransactionDetailsEx
      parameters:
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. Note: If Spanish or French is requested and a particular field does not have a translated value, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - name: flexAccountId
          in: query
          description: Unique identifier for the Flex Account. This ID is essential for retrieving transactions associated with a specific account.
          required: true
          schema:
            type: string
        - name: reassocTpaId
          in: query
          description: Unique identifier assigned to the reassociated TPA by WealthCare Admin. This ID is necessary to identify the TPA context for the transaction.
          required: true
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: Unique identifier for the reassociated Employer. This ID links the transaction to the specific employer context.
          required: true
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: Unique identifier for the reassociated Participant. This ID is crucial for identifying the participant whose transaction details are being requested.
          required: true
          schema:
            type: string
        - name: reassocFlexAccountId
          in: query
          description: Unique identifier for the reassociated Flex Account. This ID is used to filter transactions specific to the flex account.
          required: true
          schema:
            type: string
        - name: reassocTransactionid
          in: query
          description: Unique identifier for a reassociated transaction. This parameter can be used to retrieve details for a specific transaction.
          schema:
            type: string
        - name: reassocSetldate
          in: query
          description: Settlement Date for the reassociation. This date helps in filtering transactions based on when they were settled.
          schema:
            type: string
        - name: reassocSeqnum
          in: query
          description: Sequence Number assigned by WealthCare Admin to the reassociated transaction. This number is used for tracking and identifying the transaction order.
          schema:
            type: integer
            format: int32
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.TransactionDetailsEx'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.TransactionDetailsEx'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/transactions/getemployeeactivity/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - Transactions
      summary: Get Employee Activity
      description: 'Retrieve detailed activity records for a specific employee, including transactions related to card usage, claims, and reimbursements. This endpoint is essential for tracking an employee''s financial interactions within the system.'
      operationId: Transactions_GetEmployeeActivity_1023
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The response will return text in the specified language, defaulting to English if not specified or if an invalid value is sent. Note: If Spanish or French is requested and a particular field lacks a translated value, the English text will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
        - name: includereceipts
          in: query
          description: Indicate whether to include receipt details in the response. Use 1 to include receipts; any other value will exclude them.
          schema:
            type: integer
            format: int32
        - name: opt
          in: query
          description: 'Controls the visibility of certain information on dependent claims. Use 0 to show all information, 1 to mask provider information, or 2 to mask it only if Dependency Privacy is enabled.'
          schema:
            type: integer
            format: int32
        - name: year
          in: query
          description: 'Filter transactions by the specified calendar year (4-digit format, e.g., 2022). Sending 0 will return transactions from all applicable years.'
          schema:
            type: integer
            format: int32
        - name: flexAcctKey
          in: query
          description: A unique identifier for the flex account created by WCA when the account was first inserted.
          schema:
            type: integer
            format: int32
        - name: onlybalduetxns
          in: query
          description: Specify whether to return only transactions with a balance due. Use 0 for all transactions and 1 for those with a balance due.
          schema:
            type: integer
            format: int32
        - name: getReassocTxn
          in: query
          description: 'Indicate if transactions from reassociated accounts should be included. Default is 0 (current transactions only). If set to 1, additional parameters are required.'
          schema:
            type: integer
            format: int32
        - name: reassocTpaId
          in: query
          description: The unique identifier for the admin instance associated with the reassociated account. Obtainable via the Get Reassociated HSA Account details API.
          schema:
            type: string
        - name: reassocEmployerId
          in: query
          description: The unique identifier for the employer that owns the reassociated HSA account. Obtainable via the Get Reassociated HSA Account details API.
          schema:
            type: string
        - name: reassocParticipantId
          in: query
          description: The employee ID of the participant for the reassociated account. Obtainable via the Get Reassociated HSA Account details API.
          schema:
            type: string
        - name: reassocFlexAcctId
          in: query
          description: The unique identifier for the flex account of the reassociated HSA account. Leading zeroes will be trimmed. Obtainable via the Get Reassociated HSA Account details API.
          schema:
            type: string
        - name: pageNumber
          in: query
          description: 'Indicates which batch of transactions to return, used with pageSize. Transactions are returned in descending order of service start dates. For example, if pageNumber is 2 and pageSize is 10, transactions 11-20 will be returned.'
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: 'Specifies how many transactions to return per batch (maximum 2000). Used with pageNumber for pagination. For example, if pageNumber is 1 and pageSize is 100, the first 100 transactions will be returned.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful retrieval of employee activity data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-0822-Transaction-EmployeeActivityPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-0822-Transaction-EmployeeActivityPage'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/participant/communications/mobile/campaigns/{tpaId}':
    get:
      tags:
        - ParticipantCommunication
      summary: Retrieve SMS campaign for an administrator
      description: This endpoint retrieves the details of an SMS campaign associated with a specific administrator identified by the TPA ID. It is useful for administrators to monitor and manage their SMS communication campaigns effectively.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Rest.Mobile.Clients.SmsServiceClient.CampaignViewModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Rest.Mobile.Clients.SmsServiceClient.CampaignViewModel'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
  '/services/participant/communications/mobile/campaigns/{tpaId}/consents/{phoneNumber}':
    get:
      tags:
        - ParticipantCommunication
      summary: Retrieve consent status for a participant phone number
      description: 'This operation retrieves the consent status associated with a specific participant''s phone number, identified by the TPA ID. It is useful for verifying whether a participant has consented to receive communications via their mobile number.'
      responses:
        '200':
          description: Successfully retrieved the consent status for the specified phone number.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
                    description: The consent status for the phone number.
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/phoneNumber'
  '/services/administrator/features/{tpaId}':
    get:
      tags:
        - Administrator
      summary: Get features information for Admin
      description: Retrieve the available features for a specific administrator identified by their unique TPA ID. This endpoint is useful for administrators to understand the functionalities they can access and manage within the WealthCare system.
      operationId: Administrator_GetAdminFeatures
      parameters:
        - $ref: '#/components/parameters/tpaIdPath'
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the features information for the specified administrator.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Admin.AdministratorFeatures'
  '/services/participant/employee/features/{tpaId}/{employerId}/{participantId}':
    get:
      tags:
        - ParticipantEmployee
      summary: Get features information for Participant User
      description: 'Retrieve the feature information associated with a specific participant user, identified by their unique TPA ID, Employer ID, and Participant ID. This endpoint is useful for understanding the available features for an employee, such as whether certain benefits are enabled on their active plan.'
      operationId: ParticipantEmployee_GetEmployeeFeatures1024
      parameters:
        - $ref: '#/components/parameters/tpaIdPath'
        - $ref: '#/components/parameters/employerIdPath'
        - $ref: '#/components/parameters/participantIdPath'
        - $ref: '#/components/parameters/decryptQuery'
      responses:
        '200':
          description: Successfully retrieved the feature information for the specified participant. The response contains details about the features available to the employee.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1024.EmployeeFeatures'
  '/services/HSAdrive/submit/transaction/{tpaId}/{employerId}/{participantId}':
    post:
      description: 'Submits a transaction for a specific participant identified by their TPA ID, Employer ID, and Participant ID. This operation is typically used to process transactions related to benefits or account activities for the specified participant.'
      responses:
        '200':
          description: Successfully processed the transaction. The response may include confirmation details or a transaction ID.
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/HSAdrive/void/transaction/{tpaId}/{employerId}/{participantId}':
    put:
      responses:
        '200':
          description: OK
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/HSAdrive/update/transaction/{tpaId}/{employerId}/{participantId}':
    put:
      responses:
        '200':
          description: OK
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  '/services/HSAdrive/setup/transaction/{tpaId}/{employerId}/{participantId}':
    post:
      responses:
        '200':
          description: OK
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
  /services/datapartners:
    get:
      tags:
        - DataPartner
      summary: Get data partners
      description: Retrieve a list of data partners associated with an MBI user or the specific data partner linked to a partner user.
      operationId: GetDataPartners
      responses:
        '200':
          description: Successfully retrieved the list of data partners.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft-Contracts-DataContracts-Business-DataPartner-DataPartnerArray'
  '/services/employer/card/digitalcardconfig/{tpaId}/{employerId}':
    get:
      tags:
        - Employer
      summary: Get the employer digital card config details
      description: 'Retrieve the configuration details for the employer''s digital card, including the issuance type and associated product information.'
      operationId: Employer_GetEmployerDigitalCardConfig
      responses:
        '200':
          description: Successfully retrieved the employer digital card configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerDigitalCardConfig'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerDigitalCardConfig'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
  '/services/participant/cards/{tpaId}/{employerId}/{participantId}':
    put:
      tags:
        - ParticipantCard
      summary: Update Participant Card details
      description: The Update Card Details API is used to update Card details
      operationId: ParticipantCard_UpdateCardDetails
      parameters:
        - $ref: '#/components/parameters/decryptQuery'
        - name: Accept-Language
          in: header
          description: 'Specify the participant’s language preference. The corresponding response will then return text/string values in the language specified, defaulting to English if not specified or if an invalid value is sent.  Note: If Spanish or French is requested and a particular field does not have a translated value (Spanish or French), then the English text value will be returned.'
          schema:
            enum:
              - es
              - en
              - fr
            type: string
      requestBody:
        description: Update Card details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.CardSummary'
    parameters:
      - $ref: '#/components/parameters/tpaIdPath'
      - $ref: '#/components/parameters/employerIdPath'
      - $ref: '#/components/parameters/participantIdPath'
components:
  schemas:
    HealthCheckResultList:
      type: object
      properties:
        Status:
          enum:
            - Healthy
            - Unhealthy
          type: string
          description: 'The overall health status, which is ''Healthy'' if all checks are healthy, otherwise ''Unhealthy''.'
        Checks:
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckResult'
          description: A list of individual health check results.
      description: 'Represents the result of a health check, including the overall status and individual check results to help diagnose potential issues.'
    HealthCheckResult:
      type: object
      properties:
        Status:
          enum:
            - Healthy
            - Unhealthy
          type: string
          description: 'The status of the health check, which can be ''Healthy'' or ''Unhealthy''.'
        Description:
          type: string
          description: A description of the health check result.
      description: Represents the result of an individual health check.
    ServicesParticipantHsaContributionsEarliestdateTpaIdEmployerIdParticipantIdG:
      type: string
      format: date-time
    ServicesParticipantHsaContributionsWithdrawldateTpaIdEmployerIdParticipantId:
      type: string
      format: date-time
    BenSoft.Contracts.DataContracts._0621.DisplayableFields:
      type: object
      properties:
        OriginalFieldName:
          type: string
          description: 'This is the original name of the field, as assigned by Alegeus.'
        AlternativeFieldName:
          type: string
          description: 'If an Alternative Field Name has been configured in WCA (Claim Entry Template or Edit Plan) for this field, it will be returned here. This value should be used for the field display if DisplayOptions = 2.'
        DisplayOptions:
          enum:
            - NoDisplay
            - Original
            - Alternative
          type: string
          description: 'Numeric code used to indicate what should be displayed for this field: Don''t Display = 0, Original Field Name = 1, Alternative Field Name = 2'
        DisplaySpecifications:
          enum:
            - None
            - IsVisible
            - IsRequired
            - IsOptional
            - IsReadOnly
            - IsOptionalWeekly
            - IsOptionalMonthly
            - MAX_COMMON_VALUE
          type: string
          description: 'A bitwise value used to indicate how this value should be displayed: None = 0, IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8, MAX_COMMON_VALUE = 4294967296'
      description: DisplayableFields
    BenSoft.Contracts.DataContracts._1121.ServiceCategoryCode:
      type: object
      properties:
        ClaimDocumentationName:
          type: string
          description: The Claim Documentation Name is used to identify the SCC override for Claim Documentation on the claim entry template. This corresponds to the Claim Documentation Instruction Name on the SCC override on the Claim Documentation tab of the claim entry template.
        DocumentationLabel:
          type: string
          description: 'The Documentation Label is text the admin configures in WCA used to customize how a receipt or other documentation is requested from the participant. Note: if using SCC overrides on the claim entry template, please use the DocumentationLabel value on the SCC the participant selected instead of this value.  If the SCC does not have a DocumentationLabel value or you are not using SCCs for claims processing, this is the correct value to present to the participant. This corresponds to the “Add Documentation Label” text from the Claim Documentation tab of the Claim Entry Template.'
        HelpTextLinkLabel:
          type: string
          description: Displays Help Text Link information specific to SCCs
        DocumentationSubstantiationHelpText:
          type: string
          description: 'DocumentationSubstantiationHelpText value is text the admin configures in WCA and is used to explain to the participant what sort of documentation they must provide for their claim. Note: if using SCC overrides on the claim entry template, please use the DocumentationSubstantiationHelpText value on the SCC the participant selected instead of this value.  If the SCC does not have a DocumentationSubstantiationHelpText value or you are not using SCCs for claims processing, this is the correct value to present to the participant. This corresponds to the "Documentation/Substantiation Help Text" from the Claim Documentation tab of the Claim Entry Template.'
        ClaimEvents:
          type: array
          items:
            type: string
          description: This is a collection of strings which indicate events that have already been added to this SCC by the participant. It should be used to allow participants to select an existing event if they want to add an additional claim to that event. This will be null if no claim events have been created for this participant.
        ClaimEventHeader:
          type: string
          description: The ClaimEventHeader value is used as a header on a UI where a participant is creating a claim event. This will be null if not configured. This corresponds to the Claim Event Header field on the SCC override on the Claim Items tab of the claim entry template.
        ClaimEventCustomLabel:
          type: string
          description: 'The ClamEventCustomLabel value is used to customize the claim event submission in a way that is specific to your benefit offering.  For example, if you are offering an adoption plan, the Claim Event Custom Label may be "Adoptee Name," which will guide the participant to name the event they''re creating with the name of their potential adoptee, making it easy to track all claims related to this claim event. This will be null if not configured. This corresponds to the Claim Event Custom Label field on the SCC override on the Claim Items tab of the claim entry template.'
        ClaimEventInstructions:
          type: string
          description: The ClaimEventInstructions value is used to guide the participant through what they need for the specific claim event they are creating. This will be null if not configured. This corresponds to the Claim Event Instructions field on the SCC override on the Claim Items tab of the claim entry template.
        ReceiptInstructionName:
          type: string
          description: The Receipt Instructions Name is used to identify the SCC override for the receipt form (claim submission form) on the claim entry template. This corresponds to the Receipt Form Instructions Name on the SCC override on the Receipt Form tab of the claim entry template.
        ReceiptInstructionText:
          type: string
          description: 'The Receipt Instructions Text is used to help the participant better understand alternative methods available to them to submit their claim, utilizing the claim submission form. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the ReceiptInstructionText on the ParticipantClaimEntryTemplate object. This corresponds to the “Receipt Form Instructions Text” from the Receipt Form tab of the Claim Entry Template'
        ItemInstructionsName:
          type: string
          description: The Item Instructions Name is used to identify the SCC override for Claim Documentation on the claim entry template. This corresponds to the Items Instruction Name on the SCC override on the Claim Items tab of the claim entry template.
        ItemInstructionsText:
          type: string
          description: 'The Item Instructions Text is used to help the participant better understand the specific claim they are submitting. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the ItemInstructionsText on the ParticipantClaimEntryTemplate object. This corresponds to the “Instructions Text” from the Claim Items tab of the Claim Entry Template'
        DisplayableFields:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0621.DisplayableFields'
          description: 'Displays Alter native Field Name, Original Field Name, Display Specifications, Display Options..etc'
        ScKey:
          type: integer
          description: A unique value used to identify the service category this service category code is under.
          format: int32
        ScCde:
          type: string
          description: Unique identifier for the service category code.
        ScCdeDesc:
          type: string
          description: 'Descriptive name for the service category code (ex.: Dr. visit, Labs, RX, etc).'
        ScCdeOptions:
          type: integer
          description: 'A bitwise value to indicate which Service Category Code Options are enabled for this service category code. Valid options are: None = 0, TPA = 1, Plan = 2, DefaultPlan = 4, SkipCheck = 8, SCTemplate = 16'
          format: int32
        IsDirectSubmit:
          type: boolean
          description: Indicates if this service category code allows direct submission or not.
        ServiceCategoryTiers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0220.ServiceCategoryTier'
          description: Displays Collection of Service Category Tiers.
        AllowESignature:
          type: boolean
          description: 'Indicates if e-signature is allowed. Note: if using SCC overrides on the claim entry template, please use the AllowESignature value on the SCC the participant selected instead of this value. This corresponds to “Allow claim submission with a provider e-Signature?” on the E-Signature Form tab of the Claim Entry Template in WCA.'
        AllowPayProvider:
          type: boolean
          description: 'Indicates if Pay Provider is allowed for certain service category codes.If this is true, refer to the AllowPayProvider field on the ServiceCategoryCode object to know which SCCs allow pay provider. This corresponds to “Allow Pay Provider by Service Category Code” on the Pay Provider tab of the Claim Entry Template in WCA'
        AllowFutureDatedClaims:
          type: boolean
          description: 'Indicates if Future Dated Claims are allowed for this service category code. This will be true for SCCs that are in the “Allowed SCCs” section of a Future Dated Claims template in use by this employer (in WCA, go to Admin menu > Processing > Future Dated Claims)'
        CertificationName:
          type: string
          description: The certification name is used to identify the SCC override on the claim entry template. This corresponds to the Certification Name on the SCC override on the Certification Text tab of the claim entry template.
        CertificationText:
          type: string
          description: 'The certification text is used to ensure that the participant understands that submitting a manual claim could be subject to IRS, employer, or other review. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the DefaultCertificationText on the ParticipantClaimEntryTemplate object. This corresponds to the SCC override “Certification Text” value on the Certification Text tab of the Claim Entry Template.'
      description: Service Category Code
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionResponse:
      type: object
      properties:
        SequenceNumber:
          type: string
        ErrorCode:
          type: integer
          format: int32
        AvailAmount:
          type: number
          format: double
        TransactionKey:
          type: string
        SettlementDate:
          type: string
        Message:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.WaiveEnrollmentInfo:
      type: object
      properties:
        TpaId:
          type: string
        EmployerId:
          type: string
        ParticipantId:
          type: string
        PlanId:
          type: string
        PlanKey:
          type: integer
          format: int32
        FlexAcctKey:
          type: integer
          format: int32
        AcctTypeCde:
          type: string
        PlanDesc:
          type: string
        PlanStartDte:
          type: string
        PlanEndDte:
          type: string
        WaiveText:
          type: string
        WaiveNotElectText:
          type: string
        TemplateKey:
          type: integer
          format: int32
        HeaderLogoFileKey:
          type: integer
          format: int32
        HeaderLogoStream:
          type: string
          format: byte
        HeaderLogoFileFormat:
          enum:
            - All
            - Unknown
            - Fixed
            - Csv
            - Xml
            - Pdf
            - Qif
            - Excel
            - Jpeg
            - Gif
            - Bmp
            - FixedNacha
            - Delimited
            - Word
            - Png
            - Tiff
            - ExtFileFormat
          type: string
        PageFooterText:
          type: string
      description: 'Contains detailed information about the Waive Enrollment, including identifiers, plan details, and associated texts.'
    BenSoft.Vendors.Services.Providers.Models.Provider:
      type: object
      properties:
        Age:
          type: integer
          format: int32
        Degrees:
          type: array
          items:
            type: string
        Educations:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderEducation'
        FirstName:
          type: string
        Gender:
          type: string
        Insurances:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderInsurance'
        Languages:
          type: array
          items:
            type: string
        LastName:
          type: string
        Locations:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderLocation'
        MiddleName:
          type: string
        Npi:
          type: string
        OnlineProfiles:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderOnlineProfile'
        ProviderTypes:
          type: array
          items:
            type: string
        RatingsAvg:
          type: number
          format: float
        RatingsCount:
          type: integer
          format: int32
        Specialities:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderSpeciality'
    BenSoft.Vendors.Services.Providers.Models.ProviderEducation:
      type: object
      properties:
        Type:
          type: string
        Education:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderEducationData'
        Year:
          type: integer
          format: int32
    BenSoft.Vendors.Services.Providers.Models.ProviderInsurance:
      type: object
      properties:
        Id:
          type: string
        CarrierAssociation:
          type: string
        CarrierBrand:
          type: string
        CarrierName:
          type: string
        DisplayName:
          type: string
        PlanName:
          type: string
    BenSoft.Vendors.Services.Providers.Models.ProviderLocation:
      type: object
      properties:
        Address:
          type: string
        AddressDetails:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderLocationAddress'
        GoogleMapsLink:
          type: string
        Latitude:
          type: number
          format: float
        Longitude:
          type: number
          format: float
        Name:
          type: string
        Uuid:
          type: string
        PhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.ProviderLocationPhoneNumber'
    BenSoft.Vendors.Services.Providers.Models.ProviderOnlineProfile:
      type: object
      properties:
        Url:
          type: string
    BenSoft.Vendors.Services.Providers.Models.ProviderSpeciality:
      type: object
      properties:
        BoardSpeciality:
          type: string
        BoardSubSpeciality:
          type: string
        Colloquial:
          type: string
        Display:
          type: string
        NonMdSpeciality:
          type: string
        NonMdSubSpeciality:
          type: string
        ProviderName:
          type: string
        Taxonomy1:
          type: string
        Taxonomy2:
          type: string
        Taxonomy3:
          type: string
        TaxonomyCode:
          type: string
        Uuid:
          type: string
    BenSoft.Vendors.Services.Providers.Models.ProviderEducationData:
      type: object
      properties:
        Uuid:
          type: string
        Name:
          type: string
    BenSoft.Vendors.Services.Providers.Models.ProviderLocationAddress:
      type: object
      properties:
        City:
          type: string
        State:
          type: string
        Street:
          type: string
        Zip:
          type: string
    BenSoft.Vendors.Services.Providers.Models.ProviderLocationPhoneNumber:
      type: object
      properties:
        Phone:
          type: string
        Details:
          type: string
    BenSoft.Contracts.DataContracts._0220.ServiceCategoryTier:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier that WealthCare Admin assigns to you.
        TierKey:
          type: integer
          description: A system generated value used to uniquely identify the service category tier associated with this service category
          format: int32
        TierId:
          type: string
          description: This is the service category tier ID for the tier associated with this service category
        TierDesc:
          type: string
          description: This is the service category tier description for the tier associated with this service category
    ServicesParticipantAccountsHsainvestmentsAutotransfersetupTpaIdEmployerIdPar:
      type: boolean
    BenSoft.Contracts.DataContracts._0617.AutoTransferSetting:
      type: object
      properties:
        TpaId:
          type: string
        EmployerId:
          type: string
        ParticipantId:
          type: string
        FlexAcctId:
          type: string
        TransferAmountsAbove:
          type: number
          format: double
        MinAutoTransferAmount:
          type: number
          format: double
        IsAcctAutoTransferEnabled:
          type: boolean
      description: Issue#49174 - For Auto Transfer to Investment setup
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.HsaInvestmentDetails:
      type: object
      properties:
        TotalBalance:
          type: number
          description: Total HSA balance not invested
          format: double
        PortfolioBalance:
          type: number
          description: Total value of portfolio assets with Devenir
          format: double
        Portfolio:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.InvestmentAllocation'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.InvestmentAllocation:
      type: object
      properties:
        Name:
          type: string
          description: Description of asset category
          nullable: true
        Description:
          type: string
          description: Description of asset category
          nullable: true
        MarketValue:
          type: number
          description: Market value of asset category
          format: double
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountCoverageTier:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountCoverageTier'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountCoverageTier:
      type: object
      properties:
        TpaId:
          type: string
          description: An internal id assigned to TPA in the WCA system.
        FlexAcctId:
          type: string
          description: An internal id assigned to benefit accounts in the WCA system.
        CoverageTierId:
          type: string
          description: An unique id created under coverage tier type in the WCA system.
        CoverageTierDesc:
          type: string
          description: The description of the coverage tier id which was created under coverage tier type in the WCA system
    BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails:
      type: object
      properties:
        DocumentKey:
          type: integer
          format: int32
        TpaId:
          type: string
        DocumentId:
          type: string
        DocumentName:
          type: string
        Description:
          type: string
        DocumentPostDate:
          type: string
          format: date-time
        ExpireDate:
          type: string
          format: date-time
        CategoryId:
          type: string
        CategoryName:
          type: string
        DisplayOrder:
          type: integer
          format: int32
        AudienceId:
          type: string
        AudienceName:
          type: string
        DocumentFileKey:
          type: integer
          format: int32
        FileDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentFileDetails'
        LastUpdateDate:
          type: string
          format: date-time
        Employers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Employer'
        isLegacyDocument:
          type: boolean
        AssignedOption:
          enum:
            - None
            - Hidden
            - AllEmployer
            - SelectedEmployer
            - DocumentAudience
            - All
          type: string
    BenSoft.Contracts.DataContracts.Business.Document.DocumentFileDetails:
      type: object
      properties:
        DocumentFileKey:
          type: integer
          format: int32
        ContentLength:
          type: integer
          format: int32
        ContentType:
          type: string
        FileName:
          type: string
        InputStream:
          type: string
          format: byte
        Base64:
          type: string
        FileFormat:
          enum:
            - All
            - Unknown
            - Fixed
            - Csv
            - Xml
            - Pdf
            - Qif
            - Excel
            - Jpeg
            - Gif
            - Bmp
            - FixedNacha
            - Delimited
            - Word
            - Png
            - Tiff
            - ExtFileFormat
          type: string
    BenSoft.Contracts.DataContracts.Mobile.EmployeeIDNotes:
      type: object
      properties:
        EmployeeIDLabel:
          type: string
          description: Custom Label Field Name
        EmployeeIDHelpText:
          type: string
          description: Custom Label Field Help Text
      description: Employee ID Notes
    BenSoft.Contracts.DataContracts.Employee.Claimant:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
          nullable: true
        EmprId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
          nullable: true
        CardholderKey:
          type: integer
          description: A system generated key used to indicate the specific employee or dependent.
          format: int32
        LastName:
          type: string
          description: The last name of the claimant.
        FirstName:
          type: string
          description: The first name of the claimant.
        SocSecNum:
          type: string
          description: 'Depending on the CardholderTypeCde, this will be the employee ID or the dependent ID (this is not necessarily an actual SSN unless you use SSNs for your employee IDs).'
          nullable: true
        NamePrefix:
          type: string
          description: 'The prefix for the claimant''s name. Valid values are Mr., Mrs., Ms., Dr., and Rev.'
          nullable: true
        Initial:
          type: string
          description: The middle initial of the claimant
          nullable: true
        CardholderTypeCde:
          type: integer
          description: 'Cardholder Type Cde: Employee = 1, Dependent = 2'
          format: int32
        CardNum:
          type: string
          description: Card Proxy Number
          nullable: true
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.AccountInfo:
      type: object
      properties:
        FlexAccountKey:
          type: integer
          description: Displays Employee Flex account key
          format: int32
        AccountType:
          type: string
          description: Display Employee Account Type code
        PlanStartDate:
          type: string
          description: Displays account start date (plan start date)
        PlanEndDate:
          type: string
          description: Displays account End date (Plan end date)
        AccountTypeOptions:
          type: integer
          description: "Displays AccountType Options. Valid values are  ExcludeZBATotaling = 1,HideBucketSplitting = 2,HideTxnToCardHolder = 4,AllowBalanceNonAffectingDeposits = 8,HideBankTxnToReconRpt = 16,\r\nHideBankTxnToEOExport = 32,DisableZeroPrefundedAmount = 64,HideTPASettlementRpt = 128,ProductPartnerManageCommissions = 256,\r\nHideAnnualElection = 512,AllowYtdContributions = 1024,ManageOptIn = 2048,DoNotAllowRollover = 4096,PlanEndDteInfinite = 8192,IrsPlanExtensionEnabled = 16384,\r\nAuthorizedTransitEnabled = 32768,IiasEnabled = 65536,EnableQualifiedLifeEvents = 131072,EmbeddedDeductible = 262144,\r\nHRXIndORFamilyHRA = 524288,TransitORParking = 1048576,SpecialPrefunded = 2097152,ProductPartnerHSA = 4194304,\r\nDeductibleTypes = 8388608,PayrollFunded = 16777216,DoNotAllowPlanCreation = 33554432, AllowCoverageContinuation = 67108864"
          format: int64
        ProductPartnerId:
          type: string
          description: Displays Product Partner Id
          nullable: true
        ServiceCategoryCodes:
          type: array
          items:
            type: string
          description: 'A list of Service Category Codes based on the account type selection.  This will be populated when Account Type is Optional and Service Category Code is Required on the Claim Entry Template; otherwise, it will be null. If only Service Category Code is required then ParticipantClaimEntryTemplateData.AccountsInfo will be null.'
          nullable: true
    BenSoft.Contracts.DataContracts._1121.ParticipantClaimEntryTemplateData:
      type: object
      properties:
        Claimants:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.Claimant'
          description: Displays collection of Employees data.
        ReimbursementMethod:
          type: array
          items:
            type: string
            nullable: true
          description: 'This returns the reimbursement methods that are available to the participant, as configured by the employer. Valid values are: None, Check, DirectDeposit, External Check, External Direct Deposit, Card, Payroll. An example value for this is: ["Check","Direct Deposit","Payroll","Card"]'
        ServiceCategoryCodes:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.ServiceCategoryCode'
          description: Displays Collection of Service Category codes.
          nullable: true
        AccountsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.AccountInfo'
          description: Displays Collection of employees accounts information.
        SCCDirectSubmit:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.ServiceCategoryCode'
          description: Displays Service Category code Direct Submit list.
          nullable: true
      description: ParticipantClaimEntryTemplateData
    BenSoft.Contracts.DataContracts._1121.DisplayableFields:
      type: object
      properties:
        OriginalFieldName:
          type: string
          description: Displays Orignal Filed Name.
        AlternativeFieldName:
          type: string
          description: Displays Alternative Field Name.
          nullable: true
        DisplayOptions:
          type: integer
          description: 'Field Display Options -  NoDisplay = 0, Original = 1, Alternative = 2,'
        DisplaySpecifications:
          type: integer
          description: "Field Display Specifications - None = 0, IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8, \r\nIsOptionalWeekly = 16, IsOptionalMonthly = 32, MAX_COMMON_VALUE = 4294967296"
      description: DisplayableFields
    BenSoft.Contracts.DataContracts._1121.ParticipantClaimEntryTemplate:
      type: object
      properties:
        Key:
          type: integer
          description: System Generated key used to identify the specific claim entry template.
          format: int32
        FormInstructions:
          type: string
          description: Form Instructions are used to help guide the participant through the claim entry process. This corresponds to the “Instructions Text” from the Claim Form tab of the Claim Entry Template.
        DefaultCertificationText:
          type: string
          description: 'The default certification text is used to ensure that the participant understands that submitting a manual claim could be subject to IRS, employer, or other review. Note: if using SCC overrides on the claim entry template, please use the CertificationText value on the SCC the participant selected instead of this value.  If the SCC does not have a CertificationText value or you are not using SCCs for claims processing, this is the correct value to present to the participant. This corresponds to the “Default Certification Text” value on the Certification Text tab of the Claim Entry Template.'
        ConfirmationText:
          type: string
          description: Text that should appear after the participant clicks the submit button. It provides confirmation that the claim was successfully submitted. This corresponds to the "Confirmation Text" on the Claim Form tab of the Claim Entry Template.
        ItemInstructionsText:
          type: string
          description: 'The Item Instructions Text is used to help the participant better understand the specific claim they are submitting. Note: if using SCC overrides on the claim entry template, please use the ItemInstructionsText value on the SCC the participant selected instead of this value.  If the SCC does not have a ItemInstructionsText value or you are not using SCCs for claims processing, this is the correct value to present to the participant. This corresponds to the “Instructions Text” from the Claim Items tab of the Claim Entry Template.'
        ReimbursementMethod:
          type: string
          description: 'This returns the reimbursement methods that are available to the participant, as configured by the employer. Valid values are: None, Check, DirectDeposit, External Check, External Direct Deposit, Card, Payroll. An example value for this is: ["Check","Direct Deposit","Payroll","Card"]'
          nullable: true
        AccountType:
          type: string
          description: The account type code for the benefit accounts associated with the employee.
          nullable: true
        ServiceCategoryCode:
          type: string
          description: A collection of all service category codes (includes both SCCs that have Direct Submit enabled and those that do not). Please see "Service Category Code" table below
          nullable: true
        Notes:
          type: string
          description: Claim Notes
          nullable: true
        ReceiptsFileType:
          type: integer
          description: 'This is a bitwise value used to indicate which file types may be accepted for claim documentation: Fixed-1, Csv-2, Xml-4, Pdf-8, Qif-16, Excel-32, Jpeg-64, Gif-128, Bmp-256, FixedNacha-512, Delimited-1024, Word-2048, Png-4096, Tiff-8192, ExtFileFormat-16394 This corresponds to the values checked under “Receipt Upload Files” on the Claim Items tab of the Claim Entry Template.'
        ReceiptInstructionText:
          type: string
          description: 'The Receipt Instructions Text is used to help the participant better understand alternative methods available to them to submit their claim, utilizing the claim submission form. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the ReceiptInstructionText on the ParticipantClaimEntryTemplate object. This corresponds to the “Receipt Form Instructions Text” from the Receipt Form tab of the Claim Entry Template'
        BarCodeSymbology:
          type: integer
          description: 'Indicates the type of bar code that is represented in the bar code stream (a symbology is a defined method of representing numeric or alphabetic digits using bars and spaces that are easily scanned by computer systems). None = 0, Code39 = 1, Code39Ext = 2, Code128 = 4, EAN128 = 8, Code93 = 16, Code93Ext = 32, None = 0, Code39 = 1, Code39Ext = 2, Code128 = 4, EAN128 = 8, Code93 = 16, Code93Ext = 32'
        DisplayableFields:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.DisplayableFields'
          description: 'Displayable Fields - Please see "DisplayableFields" table below. Note: if using SCC overrides on the claim entry template, please use the DisplayableFields values on the SCC the participant selected instead of this value.  If the SCC does not have a DisplayableFields values or you are not using SCCs for claims processing, this is the correct value to present to the participant.'
        ParticipantClaimEntryTemplateData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.ParticipantClaimEntryTemplateData'
        AllowPayProvider:
          type: boolean
          description: Indicates if Pay Provider is allowed for this service category code. This will be true for SCCs that are in the “Allowed SCCs” section of the Pay Provider tab of the Claim Entry Template.
        DeductibleAmount:
          type: number
          description: 'A bitwise value used to indicate how/if deductible amount should be presented to the participant for claim entry. IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8 This corresponds to the setting for Deductible Amount under Extra Fields on the Claim Items tab on the Claim Entry Template.'
          format: double
        CoinsuranceAmount:
          type: number
          description: 'A bitwise value used to indicate how/if coinsurance amount should be presented to the participant for claim entry: IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8. This corresponds to the setting for Coinsurance Amount under Extra Fields on the Claim Items tab on the Claim Entry Template.'
          format: double
        CopayAmount:
          type: number
          description: 'A bitwise value used to indicate how/if copay amount should be presented to the participant for claim entry: IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8. This corresponds to the setting for Copay Amount under Extra Fields on the Claim Items tab on the Claim Entry Template.'
          format: double
        AllowESignature:
          type: boolean
          description: Indicates if e-signature is allowed for this service category code. This will be true for SCCs that are in the "Allowed SCCs" section of the ESignature Form tab of the Claim Entry Template.
        ESignatureOptionLabel:
          type: string
          description: The ESignature Option Label is used for uploading the e-signature. This corresponds to the "E-Signature Option Label text" from the E-Signature Form tab of the Claim entry Template.
        ESignatureDescription:
          type: string
          description: The E-Signature Description value is text the admin configures in WCA to help the participant understand what e-signature is and how to use. This corresponds to the "E-Signature Description text" from the E-Signature Form tab of the Claim entry Template.
        ESignatureAgreement:
          type: string
          description: The E-Signature Agreement value is text the admin configures in WCA that the service provider must agree to when adding an e-signature for the participant. This corresponds to the “E-Signature Agreement text” from the E-Signature Form tab of the Claim entry Template.
        DocumentationLabel:
          type: string
          description: 'The Documentation Label is text the admin configures in WCA used to customize how a receipt or other documentation is requested from the participant. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the DocumentationLabel on the ParticipantClaimEntryTemplate object. This corresponds to the SCC override “Add Documentation Label” value on the Claim Documentation tab of the Claim Entry Template.'
        HelpTextLinkLabel:
          type: string
          description: 'The Help Text Link Label may be used to dictate the text that should show on a link which participants can click to see more information about what the documentation requirements are.  Upon clicking the link, the DocumentationSubstantiationHelpText should be presented to the participant. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the HelpTextLinkLabel on the ParticipantClaimEntryTemplate object. This corresponds to the SCC override “Help Text Link Label” Text from the Claim Documentation tab of the Claim Entry Template.'
        DocumentationSubstantiationHelpText:
          type: string
          description: 'DocumentationSubstantiationHelpText value is text the admin configures in WCA and is used to explain to the participant what sort of documentation they must provide for their claim. If this is populated for the SCC the participant chose for claim submission, this value should be displayed instead of the DocumentationSubstantiationHelpText on the ParticipantClaimEntryTemplate object. This corresponds to the SCC override “Documentation / Substantiation Help Text” value on the Claim Documentation tab of the Claim Entry Template.'
      description: ParticipantClaimEntryTemplate
    BenSoft.Contracts.DataContracts._0423.UserInfo:
      type: object
      properties:
        Status:
          enum:
            - New
            - Active
            - TempInactive
            - PermInactive
            - TempActive
          type: string
        TpaId:
          type: string
        EmployerId:
          type: string
        EmployeeId:
          type: string
        FirstName:
          type: string
          description: First Name of the User
        LastName:
          type: string
          description: Last Name of the User
        Email:
          type: string
          description: Email Id of the User
        Phone:
          type: string
          description: Phone Number of the User
        MobileNum:
          type: string
          description: Mobile Number of the User
        SSN:
          type: string
          description: Unique Social Security number of the User
        DOB:
          type: string
          description: Date of Birth of the User
        MiddleName:
          type: string
          description: Middle Name of the User
        Address:
          type: string
          description: Address of the User
        State:
          type: string
          description: State of the User
        City:
          type: string
          description: City of the User
        Country:
          type: string
          description: Country of the User
        ZipCode:
          type: string
          description: Zip Code of the State
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDetails:
      type: object
      properties:
        Prefix:
          type: string
          description: 'Title for employee, such as Mr., Mrs., Ms., Dr., or Rev'
        LastName:
          type: string
          description: Employee's last name.
        FirstName:
          type: string
          description: Employee's first name.
        MiddleInitial:
          type: string
          description: Employee's middle initial.
        Phone:
          type: string
          description: 'Employee''s phone number, including area code.'
        MobileNumber:
          type: string
          description: Employee's mobile phone number including area code.
        AddressLine1:
          type: string
          description: First line of the employee's mailing address.
        AddressLine2:
          type: string
          description: Second line of the employee's mailing address.
        City:
          type: string
          description: City associated with the employee's mailing address.
        State:
          type: string
          description: Two-character state code associated with the employee's mailing address.
        Zip:
          type: string
          description: ZIP code associated with the employee's mailing address.
        Country:
          type: string
          description: 'Country associated with the employee''s mailing address, usually US.'
        ReimbursementMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
          description: Reimbursement Method for reimbursing an employee or dependent.
        Email:
          type: string
          description: Employee's email address.
        UserDefinedField:
          type: string
          description: You can define this field. WCA does not use it.
        EmployeeStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: Activity status for the employee.
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
        MaritalStatus:
          enum:
            - None
            - Single
            - Married
            - Separated
            - Widowed
            - Divorced
          type: string
          description: Marital status of the employee.
        ShippingAddressLine1:
          type: string
          description: First line of the employee's shipping address.
        ShippingAddressLine2:
          type: string
          description: Second line of the employee's shipping address.
        ShippingAddressCity:
          type: string
          description: City associated with an employee's shipping address.
        ShippingAddressState:
          type: string
          description: The 2-character state code associated with the employee's shipping address.
        ShippingAddressZip:
          type: string
          description: ZIP code associated with the employee's shipping address.
        ShippingAddressCountry:
          type: string
          description: Country associated with the employee's shipping address.
        BirthDate:
          type: string
          description: Employee's Date of birth.
        BankRoutingNumber:
          type: string
          description: Bank Routing number of employee direct deposit account.
        BankAccountNumber:
          type: string
          description: Employee's bank account number for direct deposit reimbursements.
        BankAccountTypeCode:
          enum:
            - None
            - Checking
            - Savings
            - GeneralLedger
          type: string
          description: Employee's bank account type.
        BankName:
          type: string
          description: Bank Name of employee direct deposit account.
        Remarks:
          type: string
          description: "Any comments about the employee.\r\nNote: This is field is for information only."
        EmployeeSSN:
          type: string
          description: Employee's social security number.
        HealthPlanID:
          type: string
          description: "An assigned ID for the employee's health plan.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        DentalID:
          type: string
          description: "An assigned ID for the employee's dental plan.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        VisionID:
          type: string
          description: "An assigned ID for the employee's vision plan.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        PBMID:
          type: string
          description: "An assigned ID for the pharmacy benefits management (PBM) organization handling pharmaceutical benefits for employees.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        EligibilityDate:
          type: string
          description: Date when the employee was hired.
        LastUpdated:
          type: string
          description: Last date the employee demographic data was modified.
          format: date-time
        CardNumber:
          type: string
          description: Benefits Card number of the employee.
        TerminationDate:
          type: string
          description: Employee's Date of Termination.
        Division:
          type: string
          description: 'Division to which employee is assigned, if division functionality is in use.'
        EmployerName:
          type: string
          description: Name of employer for whom employee works.
        HealthcareCoverageDefault:
          type: string
          description: "Coverage ID that is associated with an employee's primary Healthcare Coverage.\r\nThe employee will be linked to all healthcare coverage \r\ntypes—Medical, Pharmacy, Dental, Hospital, and Vision and/or Hearing copays—associated with this Healthcare Coverage option."
        MedicalCoverage:
          type: string
          description: "Coverage ID that is associated with the Medical\r\nCoverage type and links the employee to the copays for this coverage type."
        PharmacyCoverage:
          type: string
          description: "Coverage ID that is associated with the Pharmacy \r\nCoverage type and links the employee to the copays for this coverage type."
        DentalCoverage:
          type: string
          description: "Coverage ID that is associated with the Dental Coverage type and links the employee to the copays for this coverage type.\r\nNote 1: Providing a Coverage ID for Dental Coverage takes priority over the default Healthcare Coverage for this type.\r\nNote 2: The Coverage ID is required in order for employee-level co-pay amounts to be associated with this particular coverage."
        HospitalCoverage:
          type: string
          description: "Coverage ID that is associated with the Hospital \r\nCoverage type and links the employee to the copays for this coverage type."
        VisionCoverage:
          type: string
          description: "Coverage ID that is associated with the Vision \r\nCoverage type and links the employee to the copays for this coverage type."
        HearingCoverage:
          type: string
          description: "Coverage ID that is associated with the Hearing.\r\nCoverage type and links the employee to the copays for this coverage type."
        HighDeductableHealthPlanEligible:
          type: boolean
          description: "Flag indicating whether the employee is eligible for an High Deductible Health Plan.\r\n0 = No\r\n1 = Yes"
        DriverLicenceNumber:
          type: string
          description: Employee Driver's License Number.
        MotherMaidenName:
          type: string
          description: Employee's mother's maiden name.
        MedicareBeneficiary:
          enum:
            - None
            - PrimaryBeneficiary
            - SecondaryBeneficiary
          type: string
          description: Indicates participant as a Medicare beneficiary.
        MedicareID:
          type: string
          description: This value is the active covered individual's/beneficiary's health insurance claim number.
        ProcessingNotes:
          type: string
          description: This is the processing notes entered by the administrator for the specified individual.
        PersonCode:
          type: string
          description: "This code is used to identify specific individuals on a policy for Medicare Reporting.\r\nThe values are established by the insurer. May also be known as a Dependent Code."
        EndStageRenalDisease:
          type: boolean
          description: "Indicates whether the participant has ESRD for Medicare Reporting.\r\n0 = No, this person does not have ESRD\r\n1 = Yes, this person has ESRD"
        CardReimbAvail:
          type: boolean
          description: 'If the Employer is eligible for Card and has got a CRA Plan, then True, Otherwise False.'
        ReimbursementMethodList:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementMethodType'
          description: List of available reimbursement methods for employee to choose.
        HoldDirectDepositPaymentsReason:
          type: string
          description: The reason for holding direct deposits from being paid out to the employee.
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentEmpePlan:
      type: object
      properties:
        PlanKey:
          type: integer
          format: int32
        PlanId:
          type: string
        PlanYrStartDte:
          type: string
        PlanYrEndDte:
          type: string
        AnnualElectMin:
          type: number
          format: double
        AnnualElectMax:
          type: number
          format: double
        EligibilityDte:
          type: string
        EnrollmentStartDte:
          type: string
        EnrollmentEndDte:
          type: string
        DependentDesc:
          type: string
        FlexAcctId:
          type: string
        CoverageTierKey:
          type: integer
          format: int32
        CoverageTierDesc:
          type: string
        EmpeBrokerId:
          type: string
        AcctTypeCde:
          type: string
        AcctTypeDesc:
          type: string
        IsPrefunded:
          type: boolean
        IsHsaPlan:
          type: boolean
        OeTemplateTpaId:
          type: string
        OeTemplateKey:
          type: integer
          format: int32
        HasAnnouncement:
          type: boolean
        DataPartnerId:
          type: string
        AllowClaimsCrossover:
          type: boolean
        AllowManualClaims:
          type: boolean
        AllowAcctReassociation:
          type: boolean
        AllowManageOptin:
          type: boolean
        ReassociationAcctNum:
          type: string
        TrustPaper:
          type: string
        ProxyCde:
          type: string
        EmpeElectCde:
          enum:
            - None
            - Participate
            - Waive
            - DidNotEnroll
          type: string
        ContributionPeriod:
          type: integer
          format: int32
        PpElectAmt:
          type: number
          format: double
        AnnualElectAmt:
          type: number
          format: double
        LastElectAmt:
          type: number
          format: double
        AutoDepositCalendarKey:
          type: integer
          format: int32
        EmprId:
          type: string
        EmprName:
          type: string
        AcctStatusCde:
          type: integer
          format: int32
        PlanExtOptions:
          type: integer
          format: int32
        EmpeElectAmtPp:
          type: number
          format: double
        CustomDescription:
          type: string
        DataPartnerReplStatusCode:
          enum:
            - None
            - PendingCreate
            - PendingUpdate
            - UpToDate
            - ValidationError
            - UnexpectedError
            - Deactivated
            - InvalidAccount
            - ApplicationApprovedManually
            - ApplicationApproved
            - ApplicationDeniedNoReapply
            - ApplicationDeniedReapplyAllowed
            - RequiresBankReview
            - AwaitingAdditionalInformation
            - ApplicationProcessing
            - ApplicationSentToBank
            - AccountReassociated
            - DisclosuresToBeIssued
            - DisclosureAcknowledgementRequired
            - DisclosureAcknowledgementReceived
          type: string
        PaperElectronicTaxForm:
          type: integer
          format: int32
        MonthlyEnrollmentEndDay:
          type: integer
          format: int32
        EnrollStatusDesc:
          type: string
        IsEmprWithExternalCard:
          type: boolean
      description: EnrollmentEmpePlan
    BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmprFundingInvoice:
      type: object
      properties:
        InvoiceDte:
          type: string
          description: Date that the invoice was generated.
          format: date-time
        InvoiceNumber:
          type: string
          description: Identifier associated with the invoice.
        DivisionName:
          type: string
          description: Name of Employer Divsion associated with the invoice.
        EmployerBillingGroupName:
          type: string
          description: Name of Employer Billing Group associated with the invoice.
        EmployerAccountSegmentName:
          type: string
          description: Name of Employer Account Segment associated with the invoice.
        AmountDue:
          type: number
          description: Invoice amount due.
          format: double
        DueDte:
          type: string
          description: Invoice due date.
          format: date-time
      description: Employer Funding Invoice Details.
    BenSoft-Contracts-DataContracts-Mobile-Business-Employer-EmployerAccountArra:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerAccount'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerAccount:
      type: object
      properties:
        TpaId:
          type: string
        EmprFlexAcctKey:
          type: integer
          format: int32
        EmprId:
          type: string
        DataPartnerId:
          type: string
        AvailBal:
          type: number
          format: double
        PlanKey:
          type: integer
          format: int32
        HoldAmt:
          type: number
          format: double
        AcctNum:
          type: string
        AccountName:
          type: string
        AuthPersonTitle:
          type: string
        AuthCompany:
          type: string
        AuthPersonName:
          type: string
        CurrAmt:
          type: number
          format: double
        PlanOptions2:
          type: integer
          format: int64
        AcctTypeCde:
          type: string
        PlanYrStartDte:
          type: string
        PlanYrEndDte:
          type: string
        LogicalBankAccountKey:
          type: integer
          format: int32
        LbaOptions:
          enum:
            - None
            - UseEmployerAccountCheckNumber
            - AllowInactiveEmployerStatus
            - IncludeBankNamePos
            - IncludeBankNameManual
            - ProcessLogicalDepositsOnFundingSchedule
            - FundingOptionsEnabled
            - NachaFundMethod
            - SendContribReminder
            - EmployerHSAFundingAccount
            - ProcessLogicalDepositsUponFundClearedDate
            - EnableInvoicingOptions
            - SuppressNACHA
            - FundNotClearedAlert
            - TrackInvoiceDueDate
            - RealtimeFundingAccount
            - WCAUserConfigured
            - IncentiveFundingEnabled
            - PushFunding
            - PullFunding
            - HSAAutoCreditValidation
            - HSAAutoCreditFailure
            - ExcludeDDActivity
            - GenerateHSAAdvaceNacha
          type: string
    BenSoft.Contracts.DataContracts.Business.IdCheck.IdCheckResponse:
      type: object
      properties:
        IdCheckOk:
          enum:
            - NoIdCheck
            - IdCheckPass
            - IdCheckFailed
          type: string
        IdFailureReason:
          enum:
            - NoIdVperformed
            - IdVwasnotcompleted
            - IdVNRF
            - OFACHit
            - IdVAddresscheckfailed
            - IdVDOBafterSSNEndissueDate
            - IdVDateofBirthcheckfailed
            - IdVenrolleeinDeceasedfile
            - IdVenrolleeunderaged
            - IdVNamecheckfailed
            - IdVSSNcheckfailed
            - IdAEnrolleefailedquestionnaire
            - IdAidentitynotlocated
            - NoIdAQuestionData
            - IdAVelocityLimitReached
          type: string
    BenSoft.Contracts.DataContracts.Business.IdCheck.IdAQuestions:
      type: object
      properties:
        Questions:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdAQuestion'
        QuizId:
          type: string
        TransId:
          type: string
    BenSoft.Contracts.DataContracts.Business.IdCheck.IdAQuestion:
      type: object
      properties:
        QuestionText:
          type: string
        QuestionId:
          type: string
        Answers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdAAnswerOption'
    BenSoft.Contracts.DataContracts.Business.IdCheck.IdAAnswerOption:
      type: object
      properties:
        AnswerId:
          type: string
        AnswerText:
          type: string
    ServicesEnrollmentDpaccountSyncstatuscdeTpaIdEmployerIdParticipantIdFlexAcct:
      type: boolean
    ServicesEnrollmentAccountTpaIdEmployerIdParticipantIdFlexAcctIdDelete200Appl:
      type: boolean
    BenSoft.Contracts.DataContracts.Employee.CardSummary:
      type: object
      properties:
        EmployeeId:
          type: string
          description: The EmployeeId of the card of the employee/dependent
        DependentId:
          type: string
          description: The DependentId of the card. Null if the card belongs to an employee
        CardLast4Digits:
          type: string
          description: The last four digits of the card
        CardProxyNumber:
          type: string
          description: 'For security purposes, a 16-digit proxy number is used to represent the card instead of the actual card number'
        CardStatusCode:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - LostStolen
          type: string
          description: 'The card status code: New = 1, Active = 2, TempInactive = 3, PermInactive = 4, LostStolen = 5'
        NamePrefix:
          type: string
          description: 'The prefix of cardholder''s name. Valid values are Mr., Mrs., Ms., Dr., and Rev.'
          nullable: true
        FirstName:
          type: string
          description: The cardholder's first name
        MiddleInitial:
          type: string
          description: The cardholder's middle name initial
          nullable: true
        LastName:
          type: string
          description: The cardholder's last name
        MailedDate:
          type: string
          description: Card Mailed Date in YYYYMMDD format
          nullable: true
        CardIssueCde:
          type: integer
          description: 'Card Issue Status Code: DoNotIssue = 1, Issue = 2, Sent = 3, Conditional = 4, Mailed = 5, Waiting = 6'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDemographic:
      type: object
      properties:
        ParticipantId:
          type: string
          description: Unique identifier for the employee.
        FirstName:
          type: string
          description: First name of employee.
        LastName:
          type: string
          description: Last name of employee.
        MiddleInitial:
          type: string
          description: Employee’s middle initial.
        BirthDate:
          type: string
          description: Birth date of employee.
        EmployeeSSN:
          type: string
          description: Social Security Number of employee.
        MaritalStatus:
          enum:
            - None
            - Single
            - Married
            - Separated
            - Widowed
            - Divorced
          type: string
          description: Marital status of the employee.
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
          description: Gender of employee.
        MotherMaidenName:
          type: string
          description: Maiden name of employee's mother.
        DriverLicenceNumber:
          type: string
          description: Employee Driver’s License Number.
        Phone:
          type: string
          description: 'Employee’s phone number, including area code.'
        Email:
          type: string
          description: Email id of employee.
        AddressLine1:
          type: string
          description: First line of employee’s mailing address.
        AddressLine2:
          type: string
          description: Second line of employee’s mailing address.
        City:
          type: string
          description: City associated with employee’s mailing address.
        State:
          type: string
          description: 2-character state code associated with the employee’s mailing address.
        Zip:
          type: string
          description: ZIP code associated with the employee’s mailing address.
        Country:
          type: string
          description: Country associated with employee’s mailing address.
        ShippingAddressLine1:
          type: string
          description: First line of the employee’s shipping address.
        ShippingAddressLine2:
          type: string
          description: Second line of the employee’s shipping address.
        ShippingAddressCity:
          type: string
          description: City associated with an employee’s shipping address.
        ShippingAddressState:
          type: string
          description: The 2-character state code associated with the employee’s shipping address.
        ShippingAddressZip:
          type: string
          description: ZIP code associated with the employee’s shipping address.
        ShippingAddressCountry:
          type: string
          description: Country associated with the employee’s shipping address.
        LastUpdated:
          type: string
          description: Last date the employee demographic data was modified.
          format: date-time
        MiscData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeMiscData'
      description: Initial version
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeMiscData:
      type: object
      properties:
        CitizenStatusCode:
          enum:
            - None
            - USCitizen
            - ResidentAlien
            - NonResidentAlien
          type: string
          description: State code associated with the employee’s citizenship.
        CitizenshipCountry:
          type: string
          description: Country name whose citizenship employee is holding.
        BaseSalary:
          type: number
          description: Initial Salary paid to an employee without any benefits.
          format: double
        EmployermentStatus:
          enum:
            - None
            - Employed
            - Unemployed
            - SelfEmployed
          type: string
          description: Employment status associated with employee.
        EmployerName:
          type: string
          description: Name of employer.
        EmployerCity:
          type: string
          description: City associated with employer's mailing address.
        EmployerState:
          type: string
          description: State code associated with the employer's mailing address.
        JobTitle:
          type: string
          description: Name that describes someone's job or position.
    BenSoft.Contracts.DataContracts._0222.CommunicationMessage:
      type: object
      properties:
        RecipientAddress:
          type: string
          description: The recipient's email address
        FileByteArray:
          type: string
          description: A byte array containing the file stream data for the communication.
          format: byte
          nullable: true
        DocumentTrackingNum:
          type: integer
          description: Document tracking number
          format: int64
        SenderAddress:
          type: string
          description: Email address of sender
        Subject:
          type: string
          description: Message subject
        Body:
          type: string
          description: Message body
        ParticipantId:
          type: integer
          description: The employee ID for the participant
          format: int32
        CommunicationRuleType:
          type: integer
          description: Communication rule type
        CommunicationRuleKey:
          type: integer
          description: Communication rule template id
          format: int32
        CommunicationChannels:
          type: integer
          description: "Communication channel bit flags \n0 = None,\n1 = Email,\n2 = Mobile,\n4 = Letter"
          format: int32
        BarcodeStream:
          type: string
          description: Barcode data
          format: byte
        BarcodeAlign:
          type: string
          description: "Barcode alignment.\nValues: \"Left\", \"Center\", \"Right\", \"None\", \"100%\""
        CommunicationVersion:
          type: integer
          description: "Communication version. \n1 = Legacy Communication, \n2 = Premium Communication"
          format: int32
    BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomEStatementOptInPDF:
      type: object
      properties:
        DataPartnerId:
          type: string
        FileKey:
          type: integer
          format: int32
        FileName:
          type: string
        Base64:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentInfo:
      type: object
      properties:
        TpaId:
          type: string
        FileKey:
          type: integer
          format: int32
        FileFormat:
          enum:
            - All
            - Unknown
            - Fixed
            - Csv
            - Xml
            - Pdf
            - Qif
            - Excel
            - Jpeg
            - Gif
            - Bmp
            - FixedNacha
            - Delimited
            - Word
            - Png
            - Tiff
            - ExtFileFormat
          type: string
        FileType:
          enum:
            - All
            - Unknown
            - BatchImport
            - BatchExport
            - BatchResults
            - AllEft
            - CheckExport
            - CheckPrinting
            - DirectDepositExport
            - CheckSignature
            - Report
            - CardStockImage
            - ReceiptNotification
            - LogoImage
            - DirectDepositNacha
            - TpsForm
            - ReminderNotification
            - RnImage
            - DenialLetter
            - DenialImage
            - ReimbursementLetter
            - ThermalLogoImage
            - FTP
            - DownloadableForm
            - UploadedReceiptClaim
            - UploadedReceiptPOS
            - AutomaticDirectDeposit
            - EmployerFundingNachaClaimBased
            - EmployerFundingNachaOnDemand
            - ParticipantExpenseReceipt
            - ParticipantInteractionDocument
            - TrustPlanDisclosureDocuments
            - EmployerInteractionDocument
            - EmployerDocuments
            - PositivePayFiles
            - WcaHsaStmtLogo
            - LetterCommunicationFiles
            - DataPartnerCheckLogo
            - DataPartnerCheckSignature
            - TpaLogo
            - TpaSignature
            - ReimbusmentCheck
            - HSACheck
            - EmprNonHSAPayrollFundingNACHA
            - PayrollExport
            - DocumentManagement
            - DataPartnerCustomEStatementOptInPDF
            - SFTPDocumentQueue
            - EmployerFundingNachaHSAAdv
            - EmployeeDocuments
            - HSACheckReimbursementCsv
            - HSACheckReimbursementResponseCsv
          type: string
        FileName:
          type: string
        UploadedDate:
          type: string
          format: date-time
        DocumentData:
          type: string
          format: byte
    InnoAssociations:
      type: array
      items:
        type: integer
        format: int32
    BenSoft-Contracts-DataContracts-Transaction-RepaymentRequestArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentRequest'
    BenSoft.Contracts.DataContracts.Transaction.RepaymentRequest:
      type: object
      properties:
        BankAccountKey:
          type: integer
          description: Bank Account Key
          format: int64
        BankAccountName:
          type: string
          description: Bank Account Name
        Amount:
          type: number
          description: Amount
          format: double
        RequestDate:
          type: string
          description: Request Date
          format: date-time
        Status:
          enum:
            - New
            - InitialStepComplete
            - FinalStepComplete
            - ACHFailure
            - FailureComplete
            - CardReactivated
          type: string
          description: Repayment Status
      description: Created for Issue#54889 - Online repayment of balance due
    BenSoft.Contracts.DataContracts._0218.ResetPasswordReq:
      type: object
      properties:
        UserName:
          type: string
          description: User Name
        Password:
          type: string
          description: New User Password
        IsOobSMS:
          type: boolean
          description: 'Indicate if the token has to receive from SMS or Email. If IsOobSMS: true, then token from SMS or IsOobSMS: false, then token from Email'
        Token:
          type: string
          description: OTP token received from SMS or Email
      description: This schema supports Out-of-Band Authentication for password resets.
    BenSoft.Contracts.DataContracts.RegistrationSearch:
      required:
        - TpaId
        - FirstName
        - LastName
        - ZipCode
      type: object
      properties:
        EmployeeID:
          maxLength: 255
          minLength: 0
          type: string
        EmployerID:
          maxLength: 18
          minLength: 0
          type: string
        TpaId:
          maxLength: 6
          minLength: 0
          type: string
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        ZipCode:
          maxLength: 15
          minLength: 0
          type: string
        CardNumber:
          maxLength: 19
          minLength: 0
          type: string
      description: Contains the criteria for searching employees in the registration system.
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentAccountCreateRequest:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmployeeId:
          type: string
        FlexAcctId:
          type: string
        TrustPlanId:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentTransferRequest:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmployeeId:
          type: string
        FlexAcctId:
          type: string
        TransferAmount:
          type: number
          format: double
    BenSoft.Contracts.DataContracts.Business.FlexClaims.OnlinePaymentRequest:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier WCA assigns to you
        EmployerId:
          type: string
          description: Unique identifier for employer
        EmpeKey:
          type: integer
          description: Unique key identifier for employee
          format: int32
        FlexAcctKey:
          type: integer
          description: Unique key identifier for flex account
          format: int32
        ServiceStartDte:
          type: string
          description: Beginning date of services for the transaction
          format: date-time
        ServiceEndDte:
          type: string
          description: Ending date of services for the transaction
          format: date-time
        TxnCde:
          type: integer
          description: 'Code signifying which type of transaction is taking place { HSAOnlinePayment = 13 }'
          format: int32
        TxnOriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: 'Origin of the transaction { Manual screen = 50 , Manual EFT = 51 , Manual agent = 52, Participant Manual Screen = 53 }'
        CardHolderDisplay:
          type: boolean
          description: 'Option to display the transaction in the participant portal { No = 0, Yes = 1 }'
        ClaimDesc:
          type: string
          description: Claim / provider description
        ClaimStatus:
          enum:
            - All
            - Entered_Not_Reviewed
            - Reviewed_Receipt_Required
            - Reviewed_Insufficient_Documentation
            - Reviewed_Pending_Approval
            - Approved
            - Denied
          type: string
          description: Status of claim
        TxnAmt:
          type: number
          description: Amount of the payment per pay cycle
          format: double
        ClaimKey:
          type: integer
          description: Unique key identifier for claim
          format: int64
        Notes:
          type: string
          description: Memo / Notes
        TrackingNum:
          type: string
          description: You can assign and use a number to identify specific claims
        ReimbModeCde:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
          description: 'Method for reimbursing an employee or provider for this transaction { Check = 1, DirectDeposit = 2 }'
        ManualClaimNum:
          type: integer
          description: A system generated number assigned to a manual claim once that claim is successfully submitted
          format: int64
        ErrorCde:
          type: integer
          description: Error code
          format: int32
        AcctStatusCde:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: Status of the Card holder's account
        AcctTypeCde:
          type: string
          description: The digit code for type of benefit plan or account
        DisplayDate:
          type: string
          description: Date displayed to the employer or employee
        TxnOptions:
          enum:
            - None
            - IncludeNoteInReceiptNotificationLetter
            - ResolveRefund
            - IncludeNoteInDenialLetter
            - GenerateDenialLetter
            - IsDuplicate
            - DenialLetterReportKeyGenerated
            - WasChargedBack
            - IsAChargeback
            - ChargebackWasReversed
            - IsAChargebackReversal
            - EligibleForPOSOffset
            - ManualClaimFullyOffset
            - ManualClaimPartiallyOffset
            - ReimbLetterGenerated
            - ReissueCheckPending
            - PartialAuthInd
            - PartialAuthorized
            - HideOrigOnHoldTxn
            - CheckVoided
            - IiasMerchant
            - CheckReissued
            - TxnReissued
            - OverrideSuspendActivity
            - OnHoldFlg
            - DenialOverride
            - ReduceForBalanceMax
            - BypassDeductibleRule
            - PrimaryRolloverTxn
            - FixedEmprFundingDeposit
            - SplitTxn
            - ByPassPercentCoverage
            - EnforceParticipantEligibility
            - EnforceAccountEligibility
            - ManualClaimFullyDeductible
            - PendingVerify
            - CrossOverClaim
            - SkipDuplicateClaimCheck
            - PayProvider
            - PendingLetter2
            - Reprocessed
            - PendedWorkflow
            - NachaGenearated
            - CurrentReprocessed
            - EmployerEnteredDeposits
            - PayrollFundingDeposit
            - FutureDeposited
            - PendingDepositProcessed
            - TxnWasReimbursed
            - PendingExternalDepositVoid
            - PriorYearContribution
            - OverpaymentPartiallyResolved
            - OverpaymentResolved
            - CopayFirstApplied
            - HideFromReports
            - AutoDepositAgentDeposit
            - ExcludeFromEmployerFunding
            - PayrollNacha
            - ForceExternalNacha
            - OriginatedFromTPSEntry
            - OriginatedFromEClaims
            - CardProcessed
            - SCTierAmountFeatureEnabled
            - EmailSentForPayrollFunding
          type: string
          description: Transaction options
        InsertDte:
          type: string
          description: Insert date of the payment into the system
          format: date-time
        InsertUserIdKey:
          type: integer
          description: Unique key identifier for the user inputting the payment
          format: int32
        UpdateDte:
          type: string
          description: Last update date of payment
          format: date-time
        UpdateUserIdKey:
          type: integer
          description: Unique key for the last user to make changes to a payment
          format: int32
        ProviderId:
          type: string
          description: Unique identifier of the provider
        ProviderDesc:
          type: string
          description: Claim / provider description
        PayProviderKey:
          type: integer
          description: Unique identifier for a pay provider
          format: int32
        PatientIdNum:
          type: string
          description: Patient Id number
        PatientIdNumSecure:
          type: string
          description: Encrypted patient id number
        TaskSchName:
          type: string
          description: Name given to a scheduled task
        TaskSchKey:
          type: integer
          description: Unique key identifier for task scheduling
          format: int32
        RecurrenceFrequency:
          enum:
            - All
            - None
            - Daily
            - Weekly
            - BiMonthly
            - Monthly
            - Quarterly
            - Yearly
            - SemiMonthly
            - BiWeekly
            - Once
          type: string
          description: 'Indicates whether the claim will be a recurring claim or not, and what the recurrence is'
        DayOfWeek:
          type: integer
          description: Day of the week a recurring payment will be made
          format: int32
        DayOfMonth:
          type: integer
          description: The date of which a recurring payment will be made
          format: int32
        StartDte:
          type: string
          description: The date for the first recurrence of the claim
          format: date-time
        EndDte:
          type: string
          description: The date for the last recurrence of the claim
          format: date-time
        Standard:
          type: boolean
          description: Set to true for expenses
        TaskSchTypeCde:
          enum:
            - None
            - Report
            - ReceiptNotify
            - ReminderNotify
            - DenialLetter
            - ReimbursementLetter
            - HsaEligExport
            - HsaTxnExport
            - HsaCardExport
            - ReimbursementSchedule
            - ParticipantCommunication
            - EmployerFunding
            - RecurringClaim
            - HSAOnlinePayment
            - HsaAchReturn
            - HsaCheckReturn
            - HsaLockboxReturn
            - HsaTaxForm1099SA
            - HsaTaxForm5498SA
            - BalanceRepayment
            - InterestDeposit
            - InterestRedistributionDeposit
          type: string
          description: 'Type of task schedule { HSAOnlinePayment = 13 }'
        LastRunStatusCde:
          enum:
            - All
            - None
            - Incomplete
            - Complete
            - Failed
            - CompleteWithNachaGeneration
            - CompleteWithInvoiceGeneration
          type: string
          description: The task result for the last time the task was run
        TaskScheduleOptions:
          enum:
            - None
            - EncryptFile
            - ArchiveFile
            - GenerateUsingODS
            - StopSchedule
            - RecurringNumOfPaymentsSet
            - CompleteSchedule
          type: string
          description: 'Task schedule options { None = 0, StopSchedule = 8, RecurringNumOfPaymentsSet = 16, CompleteSchedule = 32 }'
        RecurrenceStartDte:
          type: string
          description: The date for the first recurrence of the claim
          format: date-time
        RecurrenceEndDte:
          type: string
          description: The date for the last recurrence of the claim
          format: date-time
        NoOfPayments:
          type: integer
          description: Number of payments that have been made
          format: int32
        TotalRecurrence:
          type: integer
          description: Number of payments that are to be made
          format: int32
        PendingRecurrence:
          type: integer
          description: The number of recurrences left before the scheduled end date
          format: int32
        RecurrenceNextRunDte:
          type: string
          description: Next date that the recurrence will happen
          format: date-time
        Claimant:
          type: string
          description: Full name of the claimant
        DataPartnerId:
          type: string
          description: Unique identifier for the Product Partner
        LastRunDte:
          type: string
          description: Date that the recurring payment was last run
          format: date-time
    BenSoft.Contracts.DataContracts._0522.RegistrationEmployee:
      type: object
      properties:
        EmpeOtpViaSMSOnly:
          type: boolean
          description: Indicates if OTP should be generated only via SMS.
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmployeeId:
          type: string
          description: Unique identifier for the Employee.
        Phone:
          type: string
          description: 'Employee’s phone number, including area code.'
        MobileNumber:
          type: string
          description: Employee’s Mobile phone number.
        Email:
          type: string
          description: Employee’s email address.
        EmployeeStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: Activity status for the employee.
        IsCardRequired:
          type: boolean
          description: Indicates if card number is required during participant registration.
      description: Represents the employee information returned from the search operation.
    BenSoft-Contracts-DataContracts-Mobile-Business-InnoPartner-InnovationPartne:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.InnoPartner.InnovationPartner'
    BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerTrustPlan:
      type: object
      properties:
        TrustPlanIdKey:
          type: integer
          format: int64
        DataPartnerId:
          type: string
        TrustPlanId:
          type: string
        ShortDesc:
          type: string
        LongDesc:
          type: string
        AgreementText:
          type: string
        SuccessText:
          type: string
        DisclosureDocuments:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentFileMap'
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentFileMap:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        DocFileMapKey:
          type: integer
          format: int32
        FileKey:
          type: integer
          format: int32
        Notes:
          type: string
        DocTypeCde:
          type: integer
          format: int32
        TrustPlanIdKey:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts._1121.ParticipantClaim:
      type: object
      properties:
        EventName:
          type: string
          description: Event's name
        IsESignatureClaim:
          type: boolean
          description: 'Is ESignature Claim (1 (true), 0 (false))'
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        TransactionDate:
          type: string
          description: Transaction Date
          format: date-time
        ServiceStartDate:
          type: string
          description: Service Start Date
          format: date-time
        ServiceEndDate:
          type: string
          description: Service End Date
          format: date-time
        Type:
          type: string
          description: Type
        Claimant:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.Claimant'
        AcctTypeCde:
          type: string
          description: Account Type Code
        AcctTypeDesc:
          type: string
          description: Account Type Description
        AccountKey:
          type: integer
          description: Account Key
          format: int32
        PlanStartDate:
          type: string
          description: Plan Start Date
          format: date-time
        PlanEndDate:
          type: string
          description: Plan End Date
          format: date-time
        Status:
          type: string
          description: Status
        TxnAmt:
          type: number
          description: Transaction Amount
          format: double
        FlexAcctKey:
          type: integer
          description: Flex Account Key
          format: int32
        TxnAmtOrig:
          type: number
          description: Original Transaction Amount
          format: double
        TxnAmtDenied:
          type: number
          description: Transaction Amount Denied
          format: double
        TxnAmtPending:
          type: number
          description: Transaction Amount Pending
          format: double
        TxnCde:
          type: integer
          description: Transaction Code
          format: int32
        TxnMsg:
          type: string
          description: Transaction Message
        TxnAmtRefund:
          type: number
          description: Transaction Amount Refund
          format: double
        TxnOriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: Transaction Origin Code
        TxnOptions:
          enum:
            - None
            - IncludeNoteInReceiptNotificationLetter
            - ResolveRefund
            - IncludeNoteInDenialLetter
            - GenerateDenialLetter
            - IsDuplicate
            - DenialLetterReportKeyGenerated
            - WasChargedBack
            - IsAChargeback
            - ChargebackWasReversed
            - IsAChargebackReversal
            - EligibleForPOSOffset
            - ManualClaimFullyOffset
            - ManualClaimPartiallyOffset
            - ReimbLetterGenerated
            - ReissueCheckPending
            - PartialAuthInd
            - PartialAuthorized
            - HideOrigOnHoldTxn
            - CheckVoided
            - IiasMerchant
            - CheckReissued
            - TxnReissued
            - OverrideSuspendActivity
            - OnHoldFlg
            - DenialOverride
            - ReduceForBalanceMax
            - BypassDeductibleRule
            - PrimaryRolloverTxn
            - FixedEmprFundingDeposit
            - SplitTxn
            - ByPassPercentCoverage
            - EnforceParticipantEligibility
            - EnforceAccountEligibility
            - ManualClaimFullyDeductible
            - PendingVerify
            - CrossOverClaim
            - SkipDuplicateClaimCheck
            - PayProvider
            - PendingLetter2
            - Reprocessed
            - PendedWorkflow
            - NachaGenearated
            - CurrentReprocessed
            - EmployerEnteredDeposits
            - PayrollFundingDeposit
            - FutureDeposited
            - PendingDepositProcessed
            - TxnWasReimbursed
            - PendingExternalDepositVoid
            - PriorYearContribution
            - OverpaymentPartiallyResolved
            - OverpaymentResolved
            - CopayFirstApplied
            - HideFromReports
            - AutoDepositAgentDeposit
            - ExcludeFromEmployerFunding
            - PayrollNacha
            - ForceExternalNacha
            - OriginatedFromTPSEntry
            - OriginatedFromEClaims
            - CardProcessed
            - SCTierAmountFeatureEnabled
            - EmailSentForPayrollFunding
          type: string
          description: Transaction Options
        BalanceDue:
          type: number
          description: Balance Due
          format: double
        CardHolderDisplay:
          type: boolean
          description: 'CardHolder Display (1 (true), 0 (false))'
        ProviderId:
          type: string
          description: Provider Id
        ProviderDesc:
          type: string
          description: Provider Description
        FileKey:
          type: integer
          description: File Key
          format: int32
        HasReceipt:
          type: boolean
          description: 'Has Receipt (1 (true), 0 (false))'
        ReceiptExpired:
          type: boolean
          description: 'Receipt Expired (1 (true), 0 (false))'
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Receipts Info
        DisplayableFields:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.DisplayableFields'
          description: Displayable Fields
        InsertDate:
          type: string
          description: Insert Date
          format: date-time
        UpdateDte:
          type: string
          description: Update Date
          format: date-time
        InsertUserIdKey:
          type: integer
          description: Insert User Id Key
          format: int32
        UpdateUserIdKey:
          type: integer
          description: Update User Id Key
          format: int32
        ExpenseKey:
          type: integer
          description: Expense Key
          format: int64
      description: A Participant Claim Business Object with an Event Name field for the event associated with the claim
    BenSoft.Contracts.DataContracts._0717.DisplayableFields:
      type: object
      properties:
        OriginalFieldName:
          type: string
          description: Displays Orignal Filed Name.
        AlternativeFieldName:
          type: string
          description: Displays Alternative Field Name.
          nullable: true
        DisplayOptions:
          enum:
            - NoDisplay
            - Original
            - Alternative
          type: string
          description: 'Field Display Options -  NoDisplay = 0, Original = 1, Alternative = 2,'
        DisplaySpecifications:
          enum:
            - None
            - IsVisible
            - IsRequired
            - IsOptional
            - IsReadOnly
            - MAX_COMMON_VALUE
          type: string
          description: "Field Display Specifications - None = 0, IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8, \r\nMAX_COMMON_VALUE = 4294967296"
    BenSoft-Contracts-DataContracts-Mobile-Business-Portal-FAQArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ'
    BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FAQ:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique id of the TPA
        InfoKey:
          type: integer
          description: Portal Info Key
          format: int32
        InfoName:
          type: string
          description: Portal Info Name
        InfoDesc:
          type: string
          description: Portal Info Description
        InfoDate:
          type: string
          description: Portal Info Date
          format: date-time
        ExpireDate:
          type: string
          description: Portal Info Expiration Date
          format: date-time
        LastUpdateDate:
          type: string
          description: Date in which Portal Info was last updated
          format: date-time
        EmployerIdList:
          type: array
          items:
            type: string
          description: List of Employer IDs
        VisibilityIsGlobal:
          type: boolean
          description: "Global Visibility.\r\nTrue = Visible to the participant.\r\nFalse = Not visible to the participant."
        VisibilityIsNone:
          type: boolean
          description: "No Visibility.\r\nTrue = Not visible to the participant.\r\nFalse = Visible to the participant."
      description: 'Frequently Asked Questions, providing essential information to users regarding the portal''s functionalities and updates.'
    BenSoft.Contracts.DataContracts.Business.Document.DocumentCategoryAddRequest:
      type: object
      properties:
        TpaId:
          type: string
        CategoryName:
          type: string
        DisplayOrder:
          type: integer
          format: int32
    BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryDeleteRequ:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentCategoryDeleteRequest'
    BenSoft.Contracts.DataContracts.Business.Document.DocumentCategoryDeleteRequest:
      type: object
      properties:
        TpaId:
          type: string
        CategoryKey:
          type: integer
          format: int32
    BenSoft-Contracts-DataContracts-Mobile-EmployerInfoArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.EmployerInfo'
    BenSoft.Contracts.DataContracts.Mobile.EmployerInfo:
      type: object
      properties:
        EmployerID:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmployerName:
          type: string
          description: Employer Name
      description: Employer Information
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier assigned to the administrator
        ExtBankAcctKey:
          type: integer
          description: Unique key identifier for external bank account
          format: int64
        BankAccountName:
          type: string
          description: "Name associated with the logical bank account\r\nMust be unique within the administrator"
        BankAcctNickName:
          type: string
          description: Name given to external bank account to easily identify by
        BankAcctTypeCdeEnumeration:
          type: integer
          description: "Defaults to 1 if left blank \r\n(None = 0, Checking = 1, Savings = 2, General Ledger = 3)"
          format: int32
        BankAccountNumber:
          type: string
          description: "Bank account number\r\nRequired if account usage includes ACH"
        BankRoutingNumber:
          type: string
          description: "Bank account routing number\r\nRequired if account usage includes ACH"
        BankAccountStatusCdeEnumeration:
          type: integer
          description: '(New = 0, Confirmed = 1, PendingValidation = 2, ValidationRequired = 3, FixAccount = 4)'
          format: int32
        ConfirmDte:
          type: string
          description: Date the employee provided the microtransaction amounts to confirm the account is valid
          format: date-time
        DataPartnerId:
          type: string
          description: Unique identifier for the Product Partner
    BenSoft.Contracts.DataContracts.Mobile.Question:
      type: object
      properties:
        Content:
          type: string
          description: Text of Security Challenge Question
        QuestionId:
          type: string
          description: Question ID for Security Challenge Question
      description: Security Challenge Question
    BenSoft.Contracts.DataContracts.Mobile.UserQuestionAnswer:
      type: object
      properties:
        Question:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Question'
        Answer:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Answer'
      description: Security Question and Answer
    BenSoft.Contracts.DataContracts.Mobile.Answer:
      type: object
      properties:
        Content:
          type: string
          description: Answer for Security Challenge Question
        QuestionId:
          type: string
          description: Question ID for Security Challenge Question
      description: Answer for Security Challenge Question
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DevenirSSORequest:
      type: object
      properties:
        TrustAccountNumber:
          type: string
        IsTrustAccountNumberEncrypted:
          type: boolean
      description: 'Contains the trust account number and its encryption status, which are required to generate the SSO URL.'
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier assigned to the administrator
        PendingContributionKey:
          type: integer
          description: Unique key identifier for pending contribution
          format: int64
        FlexAcctKey:
          type: integer
          description: Unique key identifier for flex account
          format: int32
        DepositTypeCdeEnumeration:
          type: integer
          description: "Enumeration of DepositTypeCde:\r\nPayroll = 1, Prefunded = 2, IndividualAmt = 3, IndividualAmtReset = 4, AnnualElection = 5,\r\nOtherDeposit = 6, FamilyOtherDeposit = 7, Rollover = 8, ExternalFunding = 9, HSATransfer = 10, \r\nAnnualElectionOverride = 11, AdminRolloverDeposit = 13, HSAIncentiveDeposit = 14"
          format: int32
        Notes:
          type: string
          description: Additional notes for pending contributions
        CardholderDisplayBoolean:
          type: integer
          description: "Option to display the contribution to the cardholder\r\n(No = 0, Yes = 1(Default))"
          format: int32
        DisplayDte:
          type: string
          description: Date displayed to the employer or employee. Defaults to current date unless a date is provided
        EffectiveDte:
          type: string
          description: The date the pending contribution is applied to the account
        DepositAmtTotal:
          type: number
          description: Employee + Employer amount
          format: double
        DepositAmtEmpe:
          type: number
          description: Amount deposited by the employee
          format: double
        AccessRolloverBucketsBoolean:
          type: integer
          description: Legacy Field. Not in use
          format: int32
        TxnOptionsEnumeration:
          type: integer
          description: "Enumeration of transaction options\r\n(None = 0, IncludeNoteInReceiptNotificationLetter = 1, ResolveRefund = 2, IncludeNoteInDenialLetter = 4, GenerateDenialLetter = 8, IsDuplicate = 16, DenialLetterReportKeyGenerated = 32, WasChargedBack = 64,\r\nIsAChargeback = 128, ChargebackWasReversed = 256, IsAChargebackReversal = 512, EligibleForPOSOffset = 1024, ManualClaimFullyOffset = 2048, ManualClaimPartiallyOffset = 4096, ReimbLetterGenerated = 8192,\r\nReissueCheckPending = 16384, PartialAuthInd = 32768, PartialAuthorized = 65536, HideOrigOnHoldTxn = 131072, CheckVoided = 262144, IiasMerchant = 524288, CheckReissued = 1048576, TxnReissued = 2097152,\r\nOverrideSuspendActivity = 4194304, OnHoldFlg = 8388608, DenialOverride = 16777216, ReduceForBalanceMax = 33554432, BypassDeductibleRule = 67108864, PrimaryRolloverTxn = 134217728, FixedEmprFundingDeposit = 268435456,\r\nSplitTxn = 536870912, ByPassPercentCoverage = 1073741824, EnforceParticipantEligibility = 2147483648, EnforceAccountEligibility = 4294967296, ManualClaimFullyDeductible = 8589934592, PendingVerify = 17179869184,\r\nCrossOverClaim = 34359738368, SkipDuplicateClaimCheck = 68719476736, PayProvider = 137438953472, PendingLetter2 = 274877906944, Reprocessed = 549755813888, PendedWorkflow = 1099511627776,\r\nNachaGenearated = 2199023255552, CurrentReprocessed = 4398046511104, EmployerEnteredDeposits = 8796093022208, PayrollFundingDeposit = 17592186044416, FutureDeposited = 35184372088832,\r\nPendingDepositProcessed = 70368744177664, TxnWasReimbursed = 140737488355328, PendingExternalDepositVoid = 281474976710656, PriorYearContribution = 562949953421312, OverpaymentPartiallyResolved=1125899906842624,\r\nOverpaymentResolved = 2251799813685248, CopayFirstApplied = 4503599627370496, HideFromReports = 9007199254740992, AutoDepositAgentDeposit = 18014398509481984, ExcludeFromEmployerFunding = 36028797018963968,\r\nPayrollNacha = 72057594037927936, ForceExternalNacha = 144115188075855872, OriginatedFromTPSEntry = 288230376151711744, OriginatedFromEClaims = 576460752303423488, CardProcessed = 1152921504606846976,\r\nSCTierAmountFeatureEnabled = 2305843009213693952, EmailSentForPayrollFunding = 461168601842738790)"
          format: int64
        DuplicateDepCheckBoolean:
          type: integer
          description: " If set to yes, WCA will fail the deposit if it matches an\r\nexisting deposit’s Effective Date and amount.\r\n0 = No\r\n1 = Yes, validate on effective date and amount\r\n2 = Yes, validate on tracking number"
          format: int32
        PendingContribStatusEnumeration:
          type: integer
          description: "Enumeration of Pending Contribution Statuses\r\n(None = 0, Pending = 1, InProcess = 2, Failed = 3, PendingApproval = 4,\r\nPendingAccountOpening = 5, FailedDuplicateDeposit = 6, FailedActivityValidation = 7)"
          format: int32
        PendingContributionYearEnumeration:
          type: integer
          description: "Enumeration of Pending Contribution Years\r\n(None = 0, PriorYear = 1, CurrentYear = 2)"
          format: int32
        ExternalBankAcctKey:
          type: integer
          description: Unique key for external bank account
          format: int64
        ConfirmationNumber:
          type: string
          description: System generated number for external contributions
        ExternalAccountDebitDte:
          type: string
          description: "Date the pending contribution will begin processing against the HSA account\r\nand the external bank account will be debited"
          format: date-time
        ExternalBankAccount:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
          nullable: true
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: WealthCare Admin assigns the 3-character prefix; you assign the remaining characters.'
          nullable: true
        TransactionDate:
          type: string
          description: Date of the transaction
          format: date-time
          nullable: true
        ServiceStartDate:
          type: string
          description: Service Start Date for the claim
          format: date-time
        ServiceEndDate:
          type: string
          description: Service End Date for the claim
          format: date-time
        Type:
          type: string
          description: 'A code indicating the type of transaction this is: Deposit = 0, Card = 1, Bank = 2, HSA Online Recurring Payment = 3, HSA Online Single Payment = 4, Fee = 5, Transfer = 6, ACH Credit = 7, ACH Debit = 8, Check = 9, Commission = 10, Interest Payment = 11, Recurring Claim = 12, Claim = 13, Manual Claim = 14, Fee Paid To Admin = 15, Fee Paid By Admin = 16, Fee Paid To Employer = 17, Fee Paid By Employer = 18'
        Claimant:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.Claimant'
        AcctTypeCde:
          type: string
          description: The account type code for the benefit account the claim is processed under.
          nullable: true
        AcctTypeDesc:
          type: string
          description: The account type description for the benefit account the claim is processed under.
          nullable: true
        AccountKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under.
          format: int32
          nullable: true
        PlanStartDate:
          type: string
          description: Plan Start Date for the account the claim is processed under
          format: date-time
          nullable: true
        PlanEndDate:
          type: string
          description: Plan End Date for the account the claim is processed under
          format: date-time
          nullable: true
        Status:
          type: string
          description: Claim status
          nullable: true
        TxnAmt:
          type: number
          description: Transaction Amount
          format: double
        FlexAcctKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under. Same value as AccountKey
          format: int32
          nullable: true
        TxnAmtOrig:
          type: number
          description: Original Transaction Amount
          format: double
          nullable: true
        TxnAmtDenied:
          type: number
          description: Transaction Denied Amount
          format: double
          nullable: true
        TxnAmtPending:
          type: number
          description: Transaction Pending Amount
          format: double
          nullable: true
        TxnCde:
          type: integer
          description: Transaction Code
          format: int32
          nullable: true
        TxnMsg:
          type: string
          description: Transaction Message
          nullable: true
        TxnAmtRefund:
          type: number
          description: Transaction Refund Amount
          format: double
          nullable: true
        TxnOriginCde:
          type: integer
          description: 'Transaction Origin Code: None = 0, POSCardSwipe = 1, POSKeyedIn = 2, POSPhonedIn = 3, POSMbiSubmitted = 4, ManualScreen = 50, ManualEFT = 51, ManualAgent = 52, ParticipantManualScreen = 53, ParticipantMobileScreen = 54, HZDirect = 55, eClaimManagerManual = 56, eClaimManagerTPS = 57, WebServiceClaim = 58'
          nullable: true
        TxnOptions:
          type: integer
          description: Transaction Options
          nullable: true
        CardHolderDisplay:
          type: boolean
          description: True if the claim the receipt is attached to should display to the participant. False if the claim should not be displayed to the participant.
          nullable: true
        ProviderId:
          type: string
          description: Provider Id on the claim
          nullable: true
        ProviderDesc:
          type: string
          description: Provider Description on the claim
          nullable: true
        FileKey:
          type: integer
          description: A system generated ID used to identify the receipt just uploaded.
          format: int32
        HasReceipt:
          type: boolean
          description: True if the claim has a receipt attached to it.
          nullable: true
        ReceiptExpired:
          type: boolean
          description: 'Returns true if the receipt has expired. Returns false if the receipt is still active. If the document routing feature is not enabled, documents are retained for 30 days after the transaction has been adjudicated. If the document routing feature is enabled, documents are stored for three years and then archived. Documents containing eSignatures are stored on the claim as long as the claim is visible in WCA'
          nullable: true
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Receipt Information
          nullable: true
        DisplayableFields:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Shared.DisplayableFields'
          description: Displayable Fields
          nullable: true
        InsertDate:
          type: string
          description: The date the claim was inserted.
          format: date-time
          nullable: true
        UpdateDte:
          type: string
          description: The last update date of the claim
          format: date-time
          nullable: true
        InsertUserIdKey:
          type: integer
          description: A system generated ID for the user ID that inserted the claim.
          format: int32
          nullable: true
        UpdateUserIdKey:
          type: integer
          description: A system generated ID used to identify the user that last updated the claim
          format: int32
          nullable: true
        ExpenseKey:
          type: integer
          description: This will return 0 when on a UploadManualClaimReceipt response.
          format: int64
      description: ''
    BenSoft-Contracts-DataContracts-Mobile-Business-Document-TaxFormInfoArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.TaxFormInfo'
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.TaxFormInfo:
      type: object
      properties:
        AccountHolderFormKey:
          type: integer
          format: int64
        TpaId:
          type: string
        FlexAcctKey:
          type: integer
          format: int32
        TaxYear:
          type: integer
          format: int32
        FormName:
          type: string
        TaxFormKey:
          type: integer
          format: int32
        PcsFileKey:
          type: integer
          format: int32
        ExternalAcctId:
          type: string
        AccountDetailsXml:
          type: string
        DeliveryMethod:
          type: integer
          format: int32
        MailedDte:
          type: string
          format: date-time
        TaxFormOptions:
          type: integer
          format: int32
    BenSoft-Contracts-DataContracts-Mobile-UserQuestionAnswerArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.UserQuestionAnswer'
    ChallengeUserPost200ApplicationJsonResponse:
      type: object
    BenSoft-Contracts-DataContracts-Mobile-QuestionArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Question'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryCode:
      type: object
      properties:
        SCCode:
          type: string
          description: The alphanumeric identifier for the Service Category Code.
        Description:
          type: string
          description: The description of the Service Category Code.
        ServiceCategoryCodeTiers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryCodeTier'
          description: Provides tier level service category options. See table below.
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryCodeTier:
      type: object
      properties:
        TierKey:
          type: integer
          description: 'Incremental integer value for the Service Category Tiers assigned, with the ''None'' or default tier being 0.'
          format: int32
        TierId:
          type: string
          description: Identifier of the Service Category Tier. A value of 'Null' corresponds to the 'None' or default tier.
          nullable: true
        BypassDeductible:
          type: integer
          description: '''Bypass Deductible'' value of the Service Category Code: 0 = No, 1 = Yes'
        DeductibleNotMetAction:
          type: integer
          description: '''Deductible Not Met'' value of the Service Category Code: 0 = Remove, 1 = Keep'
        ReimbTotalAmt:
          type: integer
          description: '''Total Participant Liability Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbDeductibleAmt:
          type: integer
          description: '''Deductible Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbCoinsuranceAmt:
          type: integer
          description: '''Coinsurance Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbCopayAmt:
          type: integer
          description: '''Copay Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbBenefitMaxMetAmt:
          type: integer
          description: '''Benefit Max Met Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbBenefitExcessAmt:
          type: integer
          description: '''Reference Based Excess Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbNotCoveredAmt:
          type: integer
          description: '''Not Covered Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
        ReimbAboveRCAmt:
          type: integer
          description: '''Above R&C Amount'' value of the Service Category Code: 0 = Neither Auto Pay nor Direct Submit, 1 = Auto Pay only, 2 = Direct Submit only, 3 = Auto Pay and Direct Submit'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeResponse:
      type: object
      properties:
        RSAId:
          type: string
        TransactionId:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Security.ClientInfo:
      type: object
      properties:
        CurrentVersion:
          type: string
        SupportedVersions:
          type: string
        Action:
          enum:
            - None
            - Install
          type: string
        TpaId:
          type: string
    DevenirssoTpaIdEmployerIdParticipantIdPost200ApplicationJsonResponse:
      type: string
    DevenirssoTpaIdEmployerIdParticipantIdPost200ApplicationXmlResponse:
      type: string
    BenSoft.Contracts.DataContracts.Shared.DisplayableFields:
      type: object
      properties:
        OriginalFieldName:
          type: string
          description: 'This is the original name of the field, as assigned by Alegeus.'
        AlternativeFieldName:
          type: string
          description: 'If an Alternative Field Name has been configured in WCA (Claim Entry Template or Edit Plan) for this field, it will be returned here. This value should be used for the field display if DisplayOptions = 2.'
          nullable: true
        DisplayOptions:
          type: integer
          description: 'Numeric code used to indicate what should be displayed for this field: Don''t Display = 0, Original Field Name = 1, Alternative Field Name = 2'
        DisplaySpecifications:
          type: integer
          description: 'A bitwise value used to indicate how this value should be displayed: None = 0, IsVisible = 1, IsRequired = 2, IsOptional = 4, IsReadOnly = 8, MAX_COMMON_VALUE = 4294967296'
    BenSoft.Contracts.DataContracts._0218.CreateUserResponse:
      type: object
      properties:
        Status:
          enum:
            - Success
            - InvalidUserName
            - InvalidPassword
            - InvalidQuestion
            - InvalidAnswer
            - InvalidEmail
            - DuplicateUserName
            - DuplicateEmail
            - UserRejected
            - InvalidProviderUserKey
            - DuplicateProviderUserKey
            - ProviderError
            - InvalidBPSPassword
          type: string
        Response:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0616.AnalyzeResponse'
    BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-TransactionActi:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionActivity'
    BenSoft.Contracts.DataContracts.Business.Document.AddDocumentRequest:
      type: object
      properties:
        TpaId:
          type: string
        DocumentName:
          type: string
        Description:
          type: string
        DocumentPostDate:
          type: string
          format: date-time
        ExpireDate:
          type: string
          format: date-time
        CategoryId:
          type: string
        AudienceId:
          type: string
        FileDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentFileDetails'
        Employers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Employer'
        LegacyDocumentKey:
          type: integer
          format: int32
        AssignedOption:
          enum:
            - None
            - Hidden
            - AllEmployer
            - SelectedEmployer
            - DocumentAudience
            - All
          type: string
    ServicesDocumentsHSATaxFormsDeliveryOptionTpaIdEmployerIdParticipantIdGet200:
      type: integer
      format: int32
    BenSoft-Contracts-DataContracts-Business-Document-DocumentCategoryArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentCategory'
    BenSoft.Contracts.DataContracts.Business.Document.DocumentCategory:
      type: object
      properties:
        TpaId:
          type: string
        CategoryKey:
          type: integer
          format: int32
        CategoryId:
          type: string
        CategoryName:
          type: string
        DisplayOrder:
          type: integer
          format: int32
        LastUpdateDate:
          type: string
          format: date-time
      description: For document audience filter feature
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnonymousEnrollInfo:
      type: object
      properties:
        TpaId:
          type: string
        EmployerId:
          type: string
        EmployeeId:
          type: string
        LastName:
          type: string
        IsValid:
          type: boolean
    System.IO.Stream:
      type: object
      properties:
        __identity:
          type: object
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentUITemplate:
      type: object
      properties:
        TpaId:
          type: string
        CustTempKey:
          type: integer
          format: int32
        CustTempId:
          type: string
        CustTempName:
          type: string
        CustTempStatus:
          type: integer
          format: int32
        CustTempOptions:
          type: integer
          format: int64
        IssueDebitCard:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        WelcomeKitDeliveryMethod:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        IssueDebitCardLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        WelcomeKitDeliveryMethodLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        HeaderFooter:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.HeaderFooterSetting'
        Announcement:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnnouncementSetting'
        Introduction:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IntroductionSetting'
        Demographics:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.DemographicsSetting'
        EmailTemplate:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EmailTemplateSetting'
        PlanInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.PlanInfoSetting'
        PaperEStatementTaxForm:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.PaperEStatementTaxFormSetting'
        ProxyStatements:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.ProxyStatementSetting'
        Beneficiary:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.BeneficiarySetting'
        IDVerificationAuthentication:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IDVerificationAuthenticationSetting'
        SpecialInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.SpecialInfoSetting'
        OtherInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.OtherInfoSetting'
        Disclosures:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.DisclosureSetting'
        Agreements:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AgreementSetting'
        ESignature:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.ESignatureSetting'
      description: EnrollmentUITemplate
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AgreementSetting:
      type: object
      properties:
        DisplayAgreements:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Agreement1:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Agreement2:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Agreement3:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Agreement4:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Agreement5:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.ESignatureSetting:
      type: object
      properties:
        DisplayEsignature:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EsignatureIntroductionText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.AnnouncementSetting:
      type: object
      properties:
        AnnouncementTitle:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        AnnouncementText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DisplayAnnouncement:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        IncludePlanInAnnouncement:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IntroductionSetting:
      type: object
      properties:
        Step1IntroText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Step2IntroText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PrePopDemoInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EnrollCompleteText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.DemographicsSetting:
      type: object
      properties:
        EmpeInitial:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeShippingAddress:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpePhone:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeBirthDate:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmailAddress:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeGender:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeMaritialStatus:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeSsn:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeMaidenName:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeDriverLicense:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeSalary:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeCitizenship:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepBirthDate:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepGender:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepFullTimeStudent:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepSsn:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeCitizenCty:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmploymentCde:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprName:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprCity:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprState:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprJobTitle:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeInitialLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeShippingAddressLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpePhoneLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeBirthDateLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmailAddressLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeGenderLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeMaritialStatusLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeSsnLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeDriverLicenseLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeMaidenNameLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeSalaryLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeCitizenshipLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeCitizenCtyLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmploymentCdeLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprNameLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprCityLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprStateLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmpeEmprJobTitleLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepBirthDateLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepGenderLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepSsnLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepFullTimeStudentLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepSectionHeader:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepFieldLabel:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DepSectionCustomText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EmailTemplateSetting:
      type: object
      properties:
        EmailSenderAddress:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailSubject:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailContentType:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailShowFields:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailLogoFileKey:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailToParticipant:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailSendReminder:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        EmailLogoStream:
          type: string
          description: A byte array representing the contents of the file for the logo.
          format: byte
        EmailLogoFileFormat:
          enum:
            - All
            - Unknown
            - Fixed
            - Csv
            - Xml
            - Pdf
            - Qif
            - Excel
            - Jpeg
            - Gif
            - Bmp
            - FixedNacha
            - Delimited
            - Word
            - Png
            - Tiff
            - ExtFileFormat
          type: string
          description: Email logo file suffix.
        EmailEmployerNameVisible:
          type: boolean
          description: 'Determines if the employer''s display name is visible. True = Yes, False = No.'
        EmailEmployerIDVisible:
          type: boolean
          description: 'Determines if the employer''s group ID is visible. True = Yes, False = No.'
        EmailParticipantPortalLinkVisible:
          type: boolean
          description: 'Determines if the employer''s participant portal link is visible. True = Yes, False = No.'
        EmailEmployeeIDVisible:
          type: boolean
          description: 'Determines if the participant''s unique ID is visible. True = Yes, False = No.'
        EmailEmployeeIDMasked:
          type: boolean
          description: 'Determines if the participant''s unique ID is masked. True = Yes, False = No.'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.PlanInfoSetting:
      type: object
      properties:
        PlanIDVisible:
          type: boolean
          description: 'Determines if the plan ID is visible. True = Yes, False = No.'
        PlanDescriptionVisible:
          type: boolean
          description: 'Determines if the plan description is visible. True = Yes, False = No.'
        PlanTypeVisible:
          type: boolean
          description: 'Determines if the plan type is visible. True = Yes, False = No.'
        PlanStartEndDatesVisible:
          type: boolean
          description: 'Determines if the plan start and end dates are visible. True = Yes, False = No.'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.PaperEStatementTaxFormSetting:
      type: object
      properties:
        DisplayPaperStatement:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementQuestion:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementPaperOption:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementPaperDesc:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementElectronicOption:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementElectronicDesc:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementBothOption:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        PaperStatementBothDesc:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        RequireOpenSampleDocOption:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ElecStatementDiscTxt:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DisplayTaxForms:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        QuestionTaxForms:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ReqEmployeeToOpenTaxForm:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.ProxyStatementSetting:
      type: object
      properties:
        DisplayProxyStatement:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ProxyStatementDesc:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ProxyStatementNoOption:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ProxyStatementNoDesc:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ProxyStatementYesOption:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        ProxyStatementYesDesc:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.BeneficiarySetting:
      type: object
      properties:
        DisplayPrimBeneficiarySec:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DisplayContBeneficiarySec:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IDVerificationAuthenticationSetting:
      type: object
      properties:
        IDCheckOptions:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        IDVCustIdentifier:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        IDACustIdentifier:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        OFACFailureText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        IDVIDAFailureText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        IDVIDAPendingAppText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.SpecialInfoSetting:
      type: object
      properties:
        SplInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Asf2:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Asf3:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Asf4:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Asf5:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Asf6:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.OtherInfoSetting:
      type: object
      properties:
        Am1:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am2:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am3:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am4:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am5:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am6:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am7:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am8:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am9:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am10:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am11:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am12:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am13:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am14:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am15:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am16:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am17:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am18:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am19:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Am20:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Asf1:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        AdfsHeader:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        AdfsCustomText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        AdfId:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf1A:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf1B:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf1C:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf1D:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf1E:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf1F:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf2A:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf2B:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf2C:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf2D:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf2E:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf2F:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf3A:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf3B:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf3C:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf3D:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf3E:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf3F:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf4A:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf4B:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf4C:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf4D:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf4E:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf4F:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf5A:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf5B:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf5C:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf5D:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf5E:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Adf5F:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Ndf1:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Ndf2:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Ndf3:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_:
      type: object
      properties:
        CustTempFieldKey:
          type: integer
          format: int32
        FieldName:
          type: string
        FieldOptions:
          enum:
            - None
            - ValueIsEditable
            - LabelIsEditable
            - ValueIsOptional
            - ValueIsRequired
            - ValueIsHidden
            - ValueIsReadOnly
            - ValueIsConditionallyRequired
            - IsDefaultAlphanumeric
            - IsDefaultNumeric
            - IsDefaultStateDropDown
            - IsDefaultCountryDropDown
            - IsDefaultYesNo
            - IsDefaultDateTime
            - IsShowDateTimeOnly
            - IsDefaultText
            - MAX_COMMON_VALUE
          type: string
        LabelText:
          type: string
        DescText:
          type: string
        FormatOptions:
          enum:
            - None
            - Alphanumeric
            - NumericOnly
            - StateDropDown
            - CountryDropDown
            - YesNo
            - Custom
            - DateTime
            - Text
            - MAX_COMMON_VALUE
          type: string
        AliasFieldValue:
          type: string
        CustomValues:
          type: string
        ControllingFieldName:
          type: string
        Value:
          type: boolean
        ValueString:
          type: string
      description: CustomTemplateFieldData
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.DisclosureSetting:
      type: object
      properties:
        DisplayDisclosures:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Boolean_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DisclosureIntroductionText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DisclosureCustomEndText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        DisclosureAcceptText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Disclosure1:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Disclosure2:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Disclosure3:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Disclosure4:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        Disclosure5:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.HeaderFooterSetting:
      type: object
      properties:
        HeaderLogoFileKey:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
        HeaderLogoStream:
          type: string
          format: byte
        HeaderLogoFileFormat:
          enum:
            - All
            - Unknown
            - Fixed
            - Csv
            - Xml
            - Pdf
            - Qif
            - Excel
            - Jpeg
            - Gif
            - Bmp
            - FixedNacha
            - Delimited
            - Word
            - Png
            - Tiff
            - ExtFileFormat
          type: string
        PageFooterText:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_'
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.String_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_:
      type: object
      properties:
        CustTempFieldKey:
          type: integer
          format: int32
        FieldName:
          type: string
        FieldOptions:
          enum:
            - None
            - ValueIsEditable
            - LabelIsEditable
            - ValueIsOptional
            - ValueIsRequired
            - ValueIsHidden
            - ValueIsReadOnly
            - ValueIsConditionallyRequired
            - IsDefaultAlphanumeric
            - IsDefaultNumeric
            - IsDefaultStateDropDown
            - IsDefaultCountryDropDown
            - IsDefaultYesNo
            - IsDefaultDateTime
            - IsShowDateTimeOnly
            - IsDefaultText
            - MAX_COMMON_VALUE
          type: string
        LabelText:
          type: string
        DescText:
          type: string
        FormatOptions:
          enum:
            - None
            - Alphanumeric
            - NumericOnly
            - StateDropDown
            - CountryDropDown
            - YesNo
            - Custom
            - DateTime
            - Text
            - MAX_COMMON_VALUE
          type: string
        AliasFieldValue:
          type: string
        CustomValues:
          type: string
        ControllingFieldName:
          type: string
        Value:
          type: string
        ValueString:
          type: string
      description: CustomTemplateFieldData
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantCommunic:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantCommunications'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantCommunications:
      type: object
      properties:
        CommHistKey:
          type: integer
          description: Communication History Key (id)
          format: int64
        CustTempType:
          type: integer
          description: 'Custom Template Type - Enum CustomTemplateType (ie: Billing Address Change, Shipping Address Change)'
          format: int32
        CustTempName:
          type: string
          description: Custom Template Name
        CustTempKey:
          type: integer
          description: Custom Template Key (id)
          format: int32
        ChannelKey:
          type: integer
          description: 'Channel Key - Enum CommunicationChannel (0 = None, 1 = Email, 2 = Mobile, 3 = Both, 4 = LetterCommunication, 8 = NotifyEmail, 16 = MailedLetter, 32 = SendEmailToTaxFormsAcctHolders)'
          format: int32
        FormatKey:
          type: integer
          description: 'Format Key - Enum CommunicationFormat (1 = Text, 2 = HTML)'
          format: int32
        Subject:
          type: string
          description: Email Subject Line
        MobileNumber:
          type: string
          description: Mobile Number
        InsertDte:
          type: string
          description: Insert Date (DateTime)
          format: date-time
        UpdateDte:
          type: string
          description: Update Date (Nullable DateTime)
          format: date-time
        CommunicationType:
          enum:
            - Email
            - SMS
            - Letter
          type: string
          description: Communication Type
    BenSoft.Rest.Models.Partners.QwasiTestRequest:
      required:
        - uuid
        - msisdn
        - optin_status
      type: object
      properties:
        uuid:
          type: string
        msisdn:
          type: string
        optin_status:
          type: string
    BenSoft-Contracts-DataContracts-Transaction-RepaymentBankAccountArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentBankAccount'
    BenSoft.Contracts.DataContracts.Transaction.RepaymentBankAccount:
      type: object
      properties:
        BankAccountKey:
          type: integer
          description: Bank Account Key
          format: int64
        BankAccountName:
          type: string
          description: Bank Account Name
        BankAccountNumber:
          type: string
          description: Bank Account Number
      description: Created for Issue#54889 - Online repayment of balance due
    ServicesPortalinfoFaqTpaIdDelete200ApplicationJsonResponse:
      type: object
    ServicesPortalinfoPortaloptionsTpaIdGet200ApplicationJsonResponse:
      enum:
        - None
      type: string
    BenSoft.Contracts.DataContracts.Business.Transactions.ContributionDateBoundsInfo:
      type: object
      properties:
        EarliestContributionDate:
          type: string
          description: The earliest point for which a contribution can be made prior or current year
          format: date-time
        LatestPriorContributionDate:
          type: string
          description: The latest date that a prior year contribution can be made
          format: date-time
        LatestCurrentContributionDate:
          type: string
          description: The latest date that a current year contribution can be made
          format: date-time
        ExternalAccountTransferDaysToDelay:
          type: integer
          description: The days to delay posting set for the external account transaction code on the current data partner
          format: int32
      description: Contains information regarding the contribution date boundaries for HSA accounts.
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DataPartnerArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DataPartner'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DataPartner:
      type: object
      properties:
        DataPartnerId:
          type: string
        PartnerName:
          type: string
        PosPhysBankAcctKey:
          type: integer
          format: int32
        ManPhysBankAcctKey:
          type: integer
          format: int32
        BankDepositNum:
          type: string
        DepositPhyBankAcckKey:
          type: integer
          format: int32
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountServiceCateg:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountServiceCategory'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountServiceCategory:
      type: object
      properties:
        SCId:
          type: string
          description: Unique ID associated with the specific Administrator level Service Category.
        SCName:
          type: string
          description: The Service Category's name.
        DefReimbMethodCde:
          type: integer
          description: 'The Service Category''s reimbursement method preference for crossover claims (claims flagged as "crossover claims") processed Manual claim import (II) record, Health care manual claim import (FX) record, SubmitManualRefund web service method, or SubmitHealthCareClaim web service method.  Values: 0 = None (use participant default reimbursement method), 1 = External Reimbursement, 2 = Pay Provider or Participant, 3 = Always Pay Participant, 4 = Do Not Allow Auto-Pay'
        MaxTransAmt:
          type: number
          description: Maximum amount that can be authorized per manual claim for this service category.
          format: double
        MaxCategoryTotalAmt:
          type: number
          description: Maximum total amount that a participant may be reimbursed from this specific service category for the plan year.
          format: double
        CopayPerTransAmt:
          type: number
          description: 'The Service Category Copay Amount per transaction. This amount will not be approved for transactions within this Service Category. For example, if $20.00 is provided, then only $60 of an $80 transaction will be approved.'
          format: double
        PercentPerTrans:
          type: integer
          description: 'The Service Category Participant % Responsibility per transaction. The amount specified will be used to determine the eligible amount for a card or manual claim transaction within this Service Category. For example, if 20% is provided, then only $16 of an $80 transaction will be approved.'
          format: int32
        TierTypeId:
          type: string
          description: Service Category Tier Type assigned to the service category.
          nullable: true
        CostShareOptions:
          type: integer
          description: 'The Service Category Cost Sharing Rules. Values: 1 = Apply Copay and then apply %, 2 = Apply % and then apply Copay'
        SCCodes:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryCode'
          description: Collection of Service Category Codes assigned to the service category. See table below.
        MCCodes:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryMCC'
          description: Collection of Merchant Category codes assigned to the Service Category. See table below.
        SpecialMCCodes:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryMCC'
          description: Corresponds to the IIAS Options specified in WCA for the Service Category. Returned on the service as a collection of Special Merchant Category codes. See table below.
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ExternalBankAccount:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccount'
    BenSoft.Contracts.DataContracts._0217.DependentDetails:
      type: object
      properties:
        DependentPrivacy:
          type: boolean
          description: 'Use to enable or disable dependent privacy.|0 = Disabled/none (default)|1 = Confidential privacy status|2 = Custom privacy status|Note: If a value of 2 is submitted, the custom privacy ID field is required'
        Prefix:
          type: string
          description: 'Title for Dependent, such as Mr., Mrs., Ms., Dr., or Rev'
        LastName:
          type: string
          description: Last name of Dependent.
        FirstName:
          type: string
          description: First name of Dependent.
        MiddleInitial:
          type: string
          description: Middle initial of Dependent.
        Phone:
          type: string
          description: 'Dependent’s Phone number, including area code.'
        AddressLine1:
          type: string
          description: First line of the Dependent’s mailing address.
        AddressLine2:
          type: string
          description: Second line of the Dependent’s mailing address.
        City:
          type: string
          description: City associated with the Dependent’s mailing address.
        State:
          type: string
          description: State associated with the Dependent’s mailing address.
        Zip:
          type: string
          description: Zip code associated with the Dependent’s mailing address.
        Country:
          type: string
          description: Country associated with the Dependent’s mailing address.
        DependentStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: "Activity status for the Dependent: 0 = All, 1 = New, 2 = Active,\r\n3 = TempInactive, 4 = PermInactive, 5 = Terminated,6 = Enrollment"
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
          description: "Gender of the Dependent :\r\n0 = None,                                                               \r\n1 = Male,\r\n2 = Female"
        ShippingAddressLine1:
          type: string
          description: First line of the Dependent’s shipping address.
        ShippingAddressLine2:
          type: string
          description: Second line of the Dependent’s shipping address.
        ShippingAddressCity:
          type: string
          description: City associated with a Dependent’s shipping address.
        ShippingAddressState:
          type: string
          description: State associated with a Dependent’s shipping address.
        ShippingAddressZip:
          type: string
          description: Zip code associated with a Dependent’s shipping address.
        ShippingAddressCountry:
          type: string
          description: Country associated with a Dependent’s shipping address.
        BirthDate:
          type: string
          description: 'Date of birth for the dependent. Note:  If Medicare Beneficiary Option is populated, this field is conditionally required.'
        CardDesignID:
          type: string
          description: Card design associated with a Dependent:1 = Payment Card
        CardNumber:
          type: string
          description: Benefits Card number of the Dependent.
        DependentID:
          type: string
          description: Unique identifier for the Dependent.
        DependentSSN:
          type: string
          description: 'Dependent’s social security number.|Note 1: You can use this field for TPS matching but cannot use it to search for a dependent.|Note 2: Validation logic prevents duplicate social security numbers from being entered within a family unit.  For example, a dependent can''t have the same SSN as the employee.  Additionally, a dependent can''t have the same SSN as another dependent.'
        EligibilityDate:
          type: string
          description: 'Date upon which the Dependent is eligible to elect benefits.  Date provided must be prior to the termination date. With WealthCare Admin 5.0, Card (POS) authorizations will use this date if populated.  The dependent is considered eligible on 12:00:01 am CT on the date of eligibility. Card Authorization requests prior to the eligibility date will be denied. If no date is provided, then the dependent is assumed to be eligible. You may optionally enforce this date upon submission of a manual claim.  WealthCare Admin will deny the claim if the date of service is prior to the eligibility date.  If enforcing eligibility dates, Claims entered for a dependent must be within the Dependent and Employee’s eligibility dates.'
        EmployeeID:
          type: string
          description: Unique identifier for the Employee to which Dependent is added to.
        EmployeeSSN:
          type: string
          description: Social Security Number of Employee.
        FullTimeStudent:
          type: boolean
          description: "Indicated that the Dependent is a FullTimeStudent or Not.\r\n0 = No, this person is not full time student.\r\n1 = Yes, this person is full time student."
        HealthPlanID:
          type: string
          description: An assigned ID for the Dependent’s health plan.
        LastUpdated:
          type: string
          description: Last date the Dependent demographic data was modified.
          format: date-time
        PBMID:
          type: string
          description: An assigned ID for the Pharmacy Benefits Management (PBM) organization handling pharmaceutical benefits for Dependents.
        Relationship:
          enum:
            - Unknown
            - SpouseorCommonLawSpouse
            - Child
            - DomesticPartner
            - Other
          type: string
          description: "Indicated relation of Dependent to Employee.\r\n0 = Unknown,\r\n1 = SpouseorCommonLawSpouse,\r\n2 = Child,\r\n3 = DomesticPartner,\r\n4 = Other"
        TerminationDate:
          type: string
          description: Termination Date of Dependent.
        MedicareBeneficiary:
          enum:
            - None
            - PrimaryBeneficiary
            - SecondaryBeneficiary
          type: string
          description: Indicates Participant as a Medicare beneficiary.
        MedicareID:
          type: string
          description: This value is the active covered individual’s/beneficiary’s health insurance claim number.
        PersonCode:
          type: string
          description: "This code is used to identify specific individuals on a policy for Medicare Reporting.\r\nThe values are established by the insurer. May also be known as a Dependent Code."
        EndStageRenalDisease:
          type: boolean
          description: "Indicates whether the Dependent has ESRD for Medicare Reporting.\r\n0 = No, this person does not have ESRD.\r\n1 = Yes, this person has ESRD."
        TpaId:
          type: string
          description: Unique identifier assigned by WealthCare Admin.
        EmprId:
          type: string
          description: Unique identifier for the Employer.
        IssueDependentCard:
          type: boolean
          description: "Indicated that the Dependent is issued with a Card other than Employee one.\r\n0 = No, this person not issued with a card.\r\n1 =  Yes, this person is issued with card."
        FlexAcctIds:
          type: array
          items:
            type: string
          description: Unique Id to account associated with Dependents.
    BenSoft.Contracts.DataContracts.Mobile.AuthenticateResponse:
      type: object
      properties:
        Status:
          type: string
        ErrCode:
          type: string
        ErrDesc:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.GetOobSmsRequest:
      type: object
      properties:
        AreaCode:
          type: string
        CountryCode:
          type: string
        Extension:
          type: string
        PhoneNumber:
          type: string
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ParticipantNotifica:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantNotification'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantNotification:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmprId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmployeeId:
          type: string
          description: Employee Id
        DeliveryMethods:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DeliveryMethod'
          description: Delivery Methods
        CustTempType:
          type: integer
          description: Custom Template Type
          format: int32
        CustTempName:
          type: string
          description: Custom Template Name
        CustTempDesc:
          type: string
          description: Custom Template Description
        CustTempOptions:
          type: integer
          description: "Custom Template Options. \r\nBit flags for custom options set on the communication template in WCA."
          format: int64
      description: ''
    BenSoft-Contracts-DataContracts-Business-Transactions-HSAOnlinePaymentInfoAr:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Transactions.HSAOnlinePaymentInfo'
    BenSoft.Contracts.DataContracts._0616.AnalyzeResponse:
      type: object
      properties:
        IsRSAEnabled:
          type: boolean
          description: RSA is enabled or disabled
        IsRSAUser:
          type: boolean
          description: User is or isn't a RSA user
        UserExist:
          type: boolean
          description: User does or doesn't exist in WCA
        ActionCode:
          type: string
          description: Indicate the action recommended by a triggered rule.
        ActionName:
          enum:
            - NONE
            - QUESTION
            - KBA
            - OTP_EMAIL
            - OOB_SMS
            - COLLECT
            - BLOCK
          type: string
          description: Name of the action taken when the rule was triggerd
        UserTypeCde:
          enum:
            - None
            - MBI
            - Tpa
            - Employer
            - Cardholder
            - MBISystem
            - DataPartner
            - SSO
            - PartnerUser
            - InnovationPartner
          type: string
          description: User Type
    BenSoft.Rest.Models.Partners.QwasiStatusRequest:
      required:
        - uuid
        - msisdn
        - optin_status
      type: object
      properties:
        uuid:
          maxLength: 26
          minLength: 22
          type: string
          description: Universally Unique Identifier (Combination Of TpaId And PAN Number.)
        msisdn:
          type: string
          description: Mobile Phone Number.
        optin_status:
          type: string
          description: 'Opt-in / Opt-out For Mobile Number Registration. (0 - UnRegister, 1-Register)'
      description: Qwasi Status Request - Contains the necessary details to update the Qwasi status for a participant.
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeDisclosureA:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDisclosureAccount'
    BenSoft.Contracts.DataContracts._0218.CreateUserRequest:
      type: object
      properties:
        EmployerId:
          type: string
        EmployeeId:
          type: string
        CardNumber:
          type: string
          description: Required if TPA is required to provide the card number during registration and participant having valid card.
        FirstName:
          type: string
        LastName:
          type: string
        UserId:
          type: string
        Password:
          type: string
        Email:
          type: string
        MobileNumber:
          type: string
        AnalyzeRequest:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0616.AnalyzeRequest'
    BenSoft.Contracts.DataContracts.Employee.CardReissueText:
      type: object
      properties:
        CardReissueTextEnabled:
          type: boolean
          description: Flag to identify if participants should have a message displayed when requesting a new card
        CardReissueTextValue:
          type: string
          description: Text to be displayed when participant is requesting a replacement card
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-BeneficiaryArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiary:
      type: object
      properties:
        TpaId:
          type: string
        FlexAcctId:
          type: string
        BeneficiaryTypeCde:
          enum:
            - None
            - Primary
            - Contigent
          type: string
        BeneficiaryNumber:
          type: integer
          format: int32
        BeneficiaryName:
          type: string
        Addr1:
          type: string
        Addr2:
          type: string
        City:
          type: string
        State:
          type: string
        Zip:
          type: string
        BeneficiarySsn:
          type: string
        ApplicantRelation:
          type: string
        Percentage:
          type: integer
          format: int32
        BirthDte:
          type: string
        LastUpdateDte:
          type: string
          format: date-time
        IsNew:
          type: boolean
      description: Beneficiary
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.CustomTemplateFieldData_1_System.Int32_mscorlib_Version_4.0.0.0_Culture_neutral_PublicKeyToken_b77a5c561934e089_:
      type: object
      properties:
        CustTempFieldKey:
          type: integer
          format: int32
        FieldName:
          type: string
        FieldOptions:
          enum:
            - None
            - ValueIsEditable
            - LabelIsEditable
            - ValueIsOptional
            - ValueIsRequired
            - ValueIsHidden
            - ValueIsReadOnly
            - ValueIsConditionallyRequired
            - IsDefaultAlphanumeric
            - IsDefaultNumeric
            - IsDefaultStateDropDown
            - IsDefaultCountryDropDown
            - IsDefaultYesNo
            - IsDefaultDateTime
            - IsShowDateTimeOnly
            - IsDefaultText
            - MAX_COMMON_VALUE
          type: string
        LabelText:
          type: string
        DescText:
          type: string
        FormatOptions:
          enum:
            - None
            - Alphanumeric
            - NumericOnly
            - StateDropDown
            - CountryDropDown
            - YesNo
            - Custom
            - DateTime
            - Text
            - MAX_COMMON_VALUE
          type: string
        AliasFieldValue:
          type: string
        CustomValues:
          type: string
        ControllingFieldName:
          type: string
        Value:
          type: integer
          format: int32
        ValueString:
          type: string
      description: CustomTemplateFieldData
    BenSoft.Contracts.DataContracts.Business.Document.UpdateDocumentRequest:
      type: object
      properties:
        TpaId:
          type: string
        DocumentId:
          type: string
        DocumentName:
          type: string
        Description:
          type: string
        DocumentPostDate:
          type: string
          format: date-time
        ExpireDate:
          type: string
          format: date-time
        CategoryId:
          type: string
        AudienceId:
          type: string
        FileDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentFileDetails'
        Employers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Employer'
        LastUpdateDate:
          type: string
          format: date-time
        LegacyDocumentKey:
          type: integer
          format: int32
        AssignedOption:
          enum:
            - None
            - Hidden
            - AllEmployer
            - SelectedEmployer
            - DocumentAudience
            - All
          type: string
    ServicesParticipantCommunicationsContactadminEmailAddressTpaIdEmployerIdPart:
      type: string
    BenSoft.Contracts.DataContracts.Mobile.UserInfo:
      type: object
      properties:
        FirstName:
          type: string
          description: First Name of the User
        LastName:
          type: string
          description: Last Name of the User
        Email:
          type: string
          description: Email Id of the User
        Phone:
          type: string
          description: Phone Number of the User
        MobileNum:
          type: string
          description: Mobile Number of the User
        SSN:
          type: string
          description: Unique Social Security number of the User
        DOB:
          type: string
          description: Date of Birth of the User
        MiddleName:
          type: string
          description: Middle Name of the User
        Address:
          type: string
          description: Address of the User
        State:
          type: string
          description: State of the User
        City:
          type: string
          description: City of the User
        Country:
          type: string
          description: Country of the User
        ZipCode:
          type: string
          description: Zip Code of the State
    BenSoft.Contracts.DataContracts._0616.AnalyzeRequest:
      type: object
      properties:
        EventType:
          enum:
            - SESSION_SIGNIN
            - FAILED_LOGIN_ATTEMPT
            - ENROLL
            - UPDATE_USER
            - CREATE_USER
            - OLB_ENROLL
            - FAILED_OLB_ENROLL_ATTEMPT
            - ACTIVATE_CARD
            - OPEN_NEW_ACCOUNT
            - REQUEST_CREDIT
            - ADD_PAYEE
            - EDIT_PAYEE
            - PAYMENT
            - DEPOSIT
            - STOCK_TRADE
            - OPTIONS_TRADE
            - CHANGE_LOGIN_ID
            - CHANGE_EMAIL
            - CHANGE_PHONE
            - CHANGE_ADDRESS
            - CHANGE_PASSWORD
            - CHANGE_LIFE_QUESTIONS
            - CHANGE_STU
            - FAILED_CHANGE_PASSWORD_ATTEMPT
            - CHANGE_ALERT_SETTINGS
            - CHANGE_STATEMENT_SETTINGS
            - CHANGE_AUTH_DATA
            - SEND_SECURE_MESSAGE
            - READ_SECURE_MESSAGE
            - VIEW_CHECK
            - VIEW_STATEMENT
            - REQUEST_CHECK_COPY
            - REQUEST_STATEMENT_COPY
            - REQUEST_CHECKS
            - REQUEST_NEW_CARD
            - REQUEST_NEW_PIN
            - EXTRA_AUTH
            - USER_DETAILS
            - CLIENT_DEFINED
            - FAILED_OPEN_NEW_ACCOUNT
            - SUCCESSFUL_OLB_ENROLL_ATTEMPT
            - SUCCESSFUL_OPEN_NEW_ACCOUNT
            - CHECK_DEVICE
          type: string
        IpAddress:
          type: string
          description: The IP address from the user's device
        HardwareId:
          type: string
          description: Hardware Id(Mobile field)
        SimId:
          type: string
          description: Sim Id(Mobile field)
        OtherId:
          type: string
          description: Other Id(Mobile field)
        CallerId:
          type: string
          description: Identifier used to authenticate the caller initialing the message
        DevicePrint:
          type: string
          description: Encapsulates all parameters obtained by device fingerprint gathering code
        DeviceTokenFSO:
          type: string
          description: Value of the Flash Shared Object
        HttpAccept:
          type: string
          description: HTTP accept header value
        DeviceTokenCookie:
          type: string
          description: Contains the cookie value
        UserAgent:
          type: string
          description: User agent string
        HttpAcceptEncoding:
          type: string
          description: HTTP accept encoding
        HttpAcceptLanguage:
          type: string
          description: HTTP accept language
        PortfolioId:
          type: string
          description: Portfolio Id
        RequestFrom:
          enum:
            - WCA
            - WCP
            - WCM
          type: string
          description: 'Where the request is sent(WCA, WCP or WCM)'
    BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier that WealthCare Admin assigns to you.
        PayProviderKey:
          type: integer
          description: Unique identifier key of Pay Provider
          format: int32
        ProviderId:
          type: string
          description: Unique identifier of Pay Provider
        ProviderName:
          type: string
          description: Name associated with Pay Provider
        Addr1:
          type: string
          description: First line of the Pay provider's address.
        Addr2:
          type: string
          description: Second line of the Pay provider's address.
        City:
          type: string
          description: City associated with the Pay provider's address.
        State:
          type: string
          description: Two-character state code associated with the Pay provider's address.
        Zip:
          type: string
          description: ZIP code associated with the Pay provider's address.
        CountryCde:
          type: string
          description: 'Country associated with the Pay provider''s address, usually US.'
        Phone:
          type: string
          description: 'Pay provider''s phone number, including area code.'
        ProviderEin:
          type: string
          description: Unique identification number of Pay Provider
        StatusCde:
          enum:
            - New
            - Active
            - Inactive
          type: string
          description: 'Status Code of Pay Provider : New = 1,Active = 2,Inactive = 3'
        StatusDesc:
          type: string
          description: Description of the Status
        InsertFirstName:
          type: string
          description: First Name associated with Pay Provider
        InsertLastName:
          type: string
          description: Last Name associated with Pay Provider
        LastUpdateDte:
          type: string
          description: The last update date for the Pay Provider record
          format: date-time
        BillingNPINumber:
          type: string
          description: Billing NPI Number associated with Pay Provider
        ParticipantId:
          type: string
          description: Optional participant identifier for use when a Partner is saving a Pay Provider on behalf of a participant
        EmployerId:
          type: string
          description: Optional employer identifier for use when a Partner is saving a Pay Provider on behalf of a participant
      description: DataContracts for PayProviderService
    BenSoft.Contracts.DataContracts._0822.AccountSummary:
      type: object
      properties:
        AccountDetailInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.AccountDetailInfo'
        CarryoverEnabled:
          type: boolean
          description: '0 - carryover is not enabled on the plan, 1 - carryover is enabled on the plan'
        CarryoverEligibility:
          type: boolean
          description: '0 - account is not eligible for carryover, 1 - account is eligible for carryover'
        CarryoverMinAmount:
          type: number
          description: The minimum available balance amount needed to be eligible for carryover
          format: double
          nullable: true
        InterestApplicable:
          type: boolean
          description: 'This field is part of the Interest Bearing Retiree Feature. Flag used to identify if the account if an account type is a  interest bearing account (NOTE: this flag does not apply to HSA accounts).'
        InterestPaidPlanToDate:
          type: number
          description: This field is part of the Interest Bearing Retiree Feature. Amount of interest paid; plan to date
          format: double
        HighYieldEligibility:
          type: boolean
          description: Flag to identify if the account has High Yield interest rates available.
        HighYieldOptIn:
          type: boolean
          description: Flag to identify if the account holder has opted into High Yield.
        PreTaxAmtPtd:
          type: string
          description: 'When the pretax limit feature is enabled, this will be the pre-tax amount paid to date.'
          nullable: true
        PostTaxAmtPtd:
          type: string
          description: 'When the posttax limit feature is enabled, this will be the post-tax amount paid to date'
          nullable: true
        HidePayrollInfoAndCharts:
          type: boolean
          description: 'Flag to identify if payroll info should be presented to participants. This flag corresponds to "Hide Payroll Info and Charts?" on the edit plan screen. This may be ignored if you are not displaying payroll info information on your UI. 1 - Hide payroll info and charts, 0 - Do not hide payroll info and charts'
        HideDeadlinesChartAndData:
          type: boolean
          description: 'Flag to indicate if deadlines chart and data should be displayed to the participant. The flag is configured in the  "Hide Deadlines Chart and Data?" section of the edit plan screen. If you are not creating a deadlines chart on your UI, this may be ignored. 1 - Hide deadlines chart and data, 0 - Do not hide deadlines chart and data'
        HideFamilyDetails:
          type: boolean
          description: 'Flag to identify if family details (i.e., who is enrolled in the account from the family) should be presented to participants. This corresponds to "Hide Family Details?" on the edit plan screen. This may be ignored if you are not displaying family detail information on your UI. 1 - Hide family details, 0 – Do not hide family details'
        HideCoveragePeriodDetails:
          type: boolean
          description: 'Flag to indicate whether this account should display the coverage period details to the participant. The flag is configured in the “Hide Coverage Period Details?” section of the edit plan screen. 1 - Hide coverage period details, 0 - Do not hide coverage period details'
        HideTaxRelatedInfo:
          type: boolean
          description: 'Flag to identify if tax info should be presented to participants. This corresponds to "Hide Tax Related info?" on the edit plan screen. This may be ignored if you are not displaying tax info information on your UI. 1 - Hide tax related info  (post tax amount paid / pre-tax amount paid), 0 - Do not hide tax related info.      This feature "Tax Limits and Deadlines" must be enabled by Alegeus for an Administrator instance  in order to use this feature. '
        IsCustomLabelsAdded:
          type: boolean
          description: 'Flag to indicate whether custom labels are configured for the employer plan (i.e., for the account)'
        GracePeriodDeductibleStatus:
          type: integer
          description: 'An integer indicating the grace period deductible status:  0 - No Deductible - This plan does not track whether a deductible is met or not.    1 - Deductible Not Met - the plan tracks a deductible, but the deductible has not been met. SCCs and MCCs are limited based upon plan setup.    2- Deductible Met - the deductible has been met (opens up eligible MCCs or SCCs for the participate - i.e., plan becomes ''full purpose''),       4 - No Deductible Limited - means the plan does not track a deductible and this account is a limited purpose account'
        GracePeriodDeductibleMetDte:
          type: string
          description: 'Date on which grace period deductible is met. Date will be in YYYYMMDD format. The system tracks whether a participant met their deductible in the grace period since the grace period is usually a new deductible year for the participant. If this date is not set, then the deductible for the new deductible year has not yest been met. Note: Flagging the deductible as met during the prior year''s grace period also updates the deductible met status for the current year.'
          format: date-time
          nullable: true
        DeductibleMetDte:
          type: string
          description: Date on which deductible is met. Date will be in YYYYMMDD format
          format: date-time
        SourceFlexAcctKey:
          type: integer
          description: Identifier for the flex account from which funds rolled or will roll to this account.
          format: int32
        CarryoverAmountCustomLabel:
          type: string
          description: This item is configured on the Employer Plan in WCA. Use this custom label with the Carryover Amount provided on this service.
          nullable: true
        ExpiringAmountCustomLabel:
          type: string
          description: 'This field is related to the carryover feature, if enabled. Expiring Amount Custom Label - this label is configured on the employer plan edit page.'
          nullable: true
        CarryoverPeriodCustomMessage:
          type: string
          description: This item is configured on the Employer Plan in WCA. Use this message to help explain to the participant how carryover works for this plan.
          nullable: true
        ExpiringAmount:
          type: number
          description: 'This field is related to the carryover feature, if enabled. The amount that will not carry over after the carryover period ends.'
          format: double
          nullable: true
        RolloverBalance:
          type: number
          description: Total amount rolled over from prior year account to current year less any amount that rolled out.
          format: double
          nullable: true
        SpendingLastDate:
          type: string
          description: 'This will be the date of the last day the participant can spend any money from this account - If an account has a grace period, this date is inclusive of the grace period. This date may be the earlier than plan end or grace if the participant terminated earlier.'
          format: date-time
        CoverageContinuation:
          type: boolean
          description: 'Flag to identify if plan has coverage continuation or not. Coverage often called "Spend Down" - when enabled this option allows the participant to submit for dates of service after the termination date through the plan end date. 1 - When coverage continuation is set, 0 - When coverage continuation is not set'
        EnableAccountDormancy:
          type: boolean
          description: 'Flag to identify whether dormancy is enabled for the plan: 0 - Dormancy period is not enabled, 1 - Dormancy period enabled. Note: Dormancy is not a standard feature.'
        CustomPlanDescription:
          type: string
          description: Custom plan description as set for the employer plan in WCA.
        HsaAdvInitialAmt:
          type: number
          description: The HSA Advance period initial/election amount.
          format: double
        HsaAdvUsedYtd:
          type: number
          description: The total amount of the HSA Advance applied to the accountholder’s debit card expenses
          format: double
        HsaAdvRecoveredYtd:
          type: number
          description: 'The total year-to-date contributions used to offset amounts previously advanced (i.e., the participant used their advance and when payroll deposits are processed, the advance is offset / reduced. This amount is how much of their payroll deposits were used to ''pay back'' the advanced amount).  Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvOutstandingBal:
          type: number
          description: 'The amount advanced year-to-date which has not yet been recovered. (i.e., a participant used their advance and has not yet fully applied payroll deposits to that advance - this is the remaining advance to be ''paid back'' by payroll deposits). HSA Advance Used - HSA Deposit Offsets = HSA Advance Outstanding Balance Amount.   Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvAvailBal:
          type: number
          description: Balance available in advance for immediate use by account holder – available on by using the debit card.
          format: double
        HsaAdvBeginDte:
          type: string
          description: 'Date when HSA advance is available for spending. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: date-time
        HsaAdvEndDte:
          type: string
          description: 'Used to specify when employee no longer has access to HSA advance amount.    Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: date-time
        HsaAdvDepositOffsetYtd:
          type: number
          description: 'The total year-to-date contributions deposited into the HSA cash balance that reduces the amount available for advance (as payroll deposits are received which increase a participant''s HSA cash balance, the HSA Advance is reduced since the point of the Advance is to give participant''s funds before contributions have been made).     Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        TotalDisbursableBal:
          type: number
          description: 'For HSA Advance, this is the combined HSA cash balance and HSA advance available amount.'
          format: double
        HsaAdvAccessibilityFlag:
          type: boolean
          description: Hsa Advance Accessibility Flag
        HsaAdvNonAccessibilityReason:
          type: integer
          description: 'This will be populated if HsaAdvAccessibilityFlag is 0. Provides the reason why the Advance is not available to the participant. None = 0, Advance Access Denied By Non-zero Investment Balance = 1, Advance Access Denied By Cardholder Account Status = 2, Advance Access Denied By Product Partner Acct Status = 4, Advance Access Denied By Cardholder Status = 8, Advance Access Denied By Plan Does Not Have Advance Enabled = 16, Advance Access Forcefully Denied = 32, Advance Access Denied As Advance Funding Setup Doesn’t Exist = 64, Advance Access Denied Because Today’s Date Not In Funding Period = 128, Advance AccessDenied By Funds Not Available (Available Balance < 0) = 256.  Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: int32
        EmployeeContributions:
          type: number
          description: Total of employee contributions to the participant's account.
          format: double
        EmployerContributions:
          type: number
          description: Total of employer contributions to the participant's account.
          format: double
        HsaAdvEligibility:
          type: boolean
          description: 'Flag Used to identify the accountholder is eligible for HSA Advance 1 - Eligible for HSA advance,    0 - Ineligible for HSA advance. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
        CardEligible:
          type: boolean
          description: Determines whether the card can be issued for the plan / account
        PlanUsageDescription:
          type: string
          description: 'If configured for the employer plan, this field includes Helpful description of plan usage to present to participants (corresponds to the "Plan Usage Summary for Mobile" field on the Edit Plan screen).'
        GracePeriodCarryoverBalance:
          type: number
          description: Balance which is not spent within the plan year and will be carried over for the next year.
          format: double
          nullable: true
        PlanYrExtDte:
          type: string
          description: The actual Grace Period End Date in YYYYMMDD format
        FlexAcctOptions:
          type: integer
          description: 'Total value provided indicates which options are enabled for this account: None = 0, RolloverRecurringExpense = 1, RolloverEmployeeCopay = 2, HasQualifiedLifeEvents = 4, SuspendDebitCardActivity = 8, CarryoverSpendingLimitSynced = 16, ExcludeFromRollover = 32, CarryoverSpendingLimitDenied = 64, AdvanceAccessForcefullyDenied = 128, DataPartnerAccountAdvanceFundingExists = 256, ReCalculateCarryover = 512, ExcludeFromCardSuspension = 1024, TerminatedDueToDormancyAutoCreatedCP = 2048, InterestEligibility = 4096, UpdateToPreviousRetireeAccount = 8192'
          format: int32
        ProductPartnerAcctStatus:
          type: integer
          description: Status specific to the HSA or VEBA Account (use in conjunction with employee account status to determine if this account can be used by the participant.
        ReassociationAcctNum:
          type: string
          description: 'Unique identifier for the Reassociated Account. If set, this indicates the HSA was reassociated from another instance.'
        ProductId:
          type: string
          description: 'For an HSA or VEBA account, the Product ID is used to represent the custom program the participant is assigned to, as created by the HSA custodian. The product ID is tied to fee models, interest plans, and investment options used on the account.'
        LinkFlexAccountKey:
          type: integer
          description: A system generated key used to identify a linked account
          format: int32
        IsLinkedDTR:
          type: boolean
          description: 'For deductible tracking accounts (DT*, FD*), indicates if this account is linked to another plan: 1 - Linked to another plan, 0 - Not linked to another plan'
        ExternalBankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0716.ExternalBankAccount'
          description: Bank accounts added by the participant for the purpose of using them to fund their HSA account.
        DisplayableFields:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0716.DisplayableFields'
          description: Indicates which fields should be displayed or not and any alternate field labels.
        FlexAccountKey:
          type: integer
          description: An internal key assigned to benefit accounts in the WCA system.
          format: int32
        AccountType:
          type: string
          description: 'The account type code for the benefit account, such as FSA, HRA, FS2, HR2. Account types for HSA/VEBAs are specific to the HSA Custodian/Trust'
        AccountDisplayHeader:
          type: string
          description: 'If the plan''s custom description exists, returns the custom description. Otherwise, returns account type user description and plan ID combination.'
        PlanStartDate:
          type: string
          description: The employer plan start date.
        PlanEndDate:
          type: string
          description: The employer plan end date.
        AnnualElection:
          type: number
          description: 'The annual election for the account. For prefunded account types, this is the amount funded to the account; for payroll accounts this is the amount the account can be funded up to through payroll deposits.'
          format: double
        TotalContributions:
          type: number
          description: 'Total Payroll Contributions made to the account. For HRAs using Fixed Employer Funding, this will be the total contributed to the account so far this plan year.'
          format: double
        AdditionalDeposits:
          type: number
          description: These deposits include amounts deposited to the account as an "other/special deposit" or due to fund rollover. This amount increases the amount available to spend without changing the Annual Election for prefunded plans or the Contributions YTD for Payroll funded account types.
          format: double
        Payments:
          type: number
          description: 'The amount spent by the employee. If this is an embedded DTR or Individual/Family HRA, then this amount is the individual amount spent for the employee or dependent.'
          format: double
        Balance:
          type: number
          description: 'Disbursable Balance: The remaining balance in the account. For account types other than HSA, this is the "Disbursable Balance." For HSAs, this is the "Available Balance"'
          format: double
        HSABalance:
          type: number
          description: 'For HSA accounts only, this is the available balance of the account (accounting for all settled transactions and any holds and preauths on the account).'
          format: double
        PortfolioBalance:
          type: number
          description: HSA Investment Balance.
          format: double
        TotalHSABalance:
          type: number
          description: The HSA balance plus the portfolio balance.
          format: double
        AccountDisplayOptions:
          enum:
            - None
            - AccountSummary_PlanYear
            - AccountSummary_AnnualElection
            - AccountSummary_TotalContributions
            - AccountSummary_AdditionalDeposits
            - AccountSummary_Payments
            - AccountSummary_Balance
            - RecentTransactions_DateofService
            - RecentTransactions_TransactionType
            - RecentTransactions_Description
            - RecentTransactions_Amount
            - RecentTransactions_Status
            - AccountDetails_AccountSummaryChart
            - AccountDetails_BalanceSummary
            - AccountDetails_MonthlyLimits
            - AccountDetails_FundRolloverRules
            - AccountDetails_DeductibleStatus
            - AccountDetails_AccountdatesChart
            - PayrollInfo_PayrollCycle
            - PayrollInfo_EmployerPayPeriodContributions
            - PayrollInfo_EmployeePayPeriodContributions
            - PayrollInfo_ContributionChart
            - FamilyDetails_Status
            - FamilyDetails_Name
            - FamilyDetails_IndividualAmountorIndividualDeductible
            - FamilyDetails_AdditionalDepositsOrAdjustments
            - FamilyDetails_PaymentsOrDeductibleMet
            - FamilyDetails_BalanceOrRemainingDeductible
            - AccountSummary_BalanceDue
          type: string
          description: Collection of account display options
        AccountTypeOptions:
          type: integer
          description: Not in use.
          format: int64
        ProductPartnerId:
          type: string
          description: 'Not recommended for use. The ID of the HSA or VEBA custodian in the WealthCare Admin system. Generally, this item is not used externally.'
        PlanYear:
          type: integer
          description: '1=Current, 2=Future, 3=Previous'
        Priority:
          type: integer
          description: This number indicates the order of reimbursement of employee accounts. Numbers may not be sequential as an employee may not have all of the accounts in the employer's priority order.
          format: int32
        PlanId:
          type: string
          description: The Plan ID for the assigned benefit plan. Plan ID is set by the user when configuring a plan in WCA.
        SubmitClaimsLastDate:
          type: string
          description: 'This date is the latest date a claim with an eligible date of service can be provided. It is generally the plan end date + a period for late claim submission. If an employee terminated early, then this date will be the employee''s termination date plus the employee run-out period set for the employer plan.'
          format: date-time
        ExternalFunded:
          type: boolean
          description: 'For HSAs, this flag Indicates whether the account can accept external funding deposits.'
        OptInStatus:
          type: boolean
          description: Indicates whether the participant account has opted into claims crossover automatic adjudication. Integrated claims records/requests flagged as "crossover claims" will only be approved f the participant is opted-in.
          nullable: true
        GracePeriodEndDte:
          type: string
          description: The date through which claim dates of service are still eligible for reimbursement. This date may be equal to or greater than the Plan End Date.
        BalanceDue:
          type: number
          description: 'The amount a participant has overspent from this account, including reversed reimbursed claims and ineligible card transactions. If offset feature and online repayment is enabled, then the system will offset the balance due with claims and/or the participant can repay this amount, respectively.'
          format: double
        FlexAcctId:
          type: string
          description: An alternate ID assigned to benefit accounts in the WCA system.
        HraAcct:
          type: boolean
          description: 'Indicates whether the account is a ''full featured'' HRA account. For HRA plans, is HRA indicates if the plan is a full feature HRA (i.e., HRX, HX*) If it is, then this account may also have Individual/Family balance details associated with it.'
        AcctStatusCde:
          type: integer
          description: Status of the account
        IsWCABank:
          type: integer
          description: Not recommended for external client use. Indicates whether the Product Partner (HSA Custodian/ VEBA provider) is processing accounts on the WCA platform.
          format: int32
        PlanOptions2:
          type: integer
          description: 'A bit field used to indicate additional plan level options. None = 0, Reimburse Amounts Applied to Deductible Account = 1, Automatically issue a card to dependents = 2, Auto-substantiate transactions using a merchant list = 4, Automatically issue a card to spouse only = 8, Hide this plan from participant portal and mobile = 16, Prevent claims from being entered for this plan = 32, Use Real Time Funding for this plan? = 64, Users allowed to edit amount when adding/editing Life event coverage tier = 128, For HSA accounts, admin/employer will not provide disclosure = 256, Allow employees to set External Deductible = 512, Plan Not Ready For Enrollment = 1024, Prevent Election Reduction = 2048, Alegeus use only = 4096, Prevent deductible from increasing = 8192, Future use = 16384, Allow partial payroll deposits = 32768, Apply Card Suspension Threshold Logic = 65536, Hide employer contribution information from participant = 131072, Show plan usage summary to participant = 262144, Hide deductible status messaging from participant = 524288, Enable HSA Advance Funding = 1048576, Enable Account Dormancy = 2097152, Show custom plan descriptions within coverage period details section of member portal = 4194304, Dependent care continuation is enabled = 8388608, Automatically offset balance due via FX claims = 16777216, Carryover enabled = 33554432, Require enrollment in next year account to be eligible for carryover = 67108864, Future use = 134217728, prevent participants from linking dependents to accounts under this plan = 268435456, prevent administrator users from linking dependents to accounts under this plan = 536870912, Future use = 1073741824, Dormancy''s No Enrollment Agent has processed this plan after the plan ends = 2147483648, Deadline for claims to apply to current tax year vs. next tax year enabled= 4294967296, Plan uses date of service for tax year deadline = 8589934592, Plan uses reimbursement date for tax year deadline = 17179869184, Future use = 34359738368, Future use = 68719476736, Future use = 137438953472, Pre-tax limit enabled = 274877906944, Do not allow Participants to set Autopay preference = 549755813888, Hide Payroll Info and Charts from participant = 1099511627776, Hide Deadlines Chart and Data from participant = 2199023255552, Hide family details from participant = 4398046511104, Hide Coverage Period Details from participant= 8796093022208, Hide Tax Related info from participant = 17592186044416, Do not allow participants to set auto pay provider preference = 281474976710656, VestingEnabled = 562949953421312, PlanRenewalCommunicationSent45DaysBefore = 1125899906842624, PlanRenewalCommunicationSent30DaysBefore = 2251799813685248, HideDollarAmount = 4503599627370496'
          format: int64
        DataPartnerOptions:
          type: integer
          description: Do not use. Indicates offerings available through the Product Partner - this information is not used by externally integrated systems and is used by Alegeus only.
          format: int64
        PreauthBalance:
          type: number
          description: The amount of card authorizations + deposits on hold.
          format: double
        AvailBalance:
          type: number
          description: 'The available balance for the account – the amount before any card holds or deposit holds. For HSA Accounts, this is the "Current Balance".'
          format: double
        AcctTypeClassCde:
          enum:
            - FSA
            - HRA
            - HSA
            - Deductible
            - Other
            - VEBA
            - Transit
            - Parking
            - Retiree
          type: string
          description: An integer representing the account class the account belongs to
        AcctTypeClassDescription:
          type: string
          description: 'The string description that corresponds to the AcctTypeClassCde (FSA, HRA, HSA, etc.)'
        OtherDeposits:
          type: number
          description: Total of Other/Special deposits made to the account. Other Deposits increase the participant balances but do not increase the Annual Election nor the Contributions YTD for the account.
          format: double
        RolloverDeposits:
          type: number
          description: Rollover Deposits made to date for this account
          format: double
        HideDollarAmount:
          type: boolean
          description: 'A plan level setting that controls the visibility of the contributions, coverage, and funding amounts for the participant. True - Hide dollar amount from participant. False - Display dollar amount to the participant.'
        LifetimeLimitPerEvent:
          type: number
          description: Specify the Life Time total amount participants can spend per claim event during the lifespan of the plan.
        LifetimeSpendingLimit:
          type: number
          description: The lifetime spending limit is for storing a value only. It is not used to process claims at this time.
        LifetimeLimitOnNumberOfEvents:
          type: integer
          description: Specify the number of claim events participants can submit claims for during the lifetime of this plan.
      description: For use in version 22 (WC 22.08.00) of GetAccountSummary API
    BenSoft.Contracts.DataContracts.Mobile.SiteKey:
      type: object
      properties:
        SiteImage:
          type: string
        Phrase:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.TransactionActivity:
      type: object
      properties:
        TransactionDate:
          type: string
          description: Date of the transaction
          format: date-time
        TransactionType:
          type: string
          description: 'Indicates the type of transaction.  Valid values are Deposit, POS, Other Deposit, Manual'
        Description:
          type: string
          description: For Claims - This must be Claim Description or Provider Name. For POS - This must be Merchant Name. For Product Partner Transactions - This must be the Description from the Description field.
        TransactionAmt:
          type: number
          description: The total amount of the transaction
          format: double
        HSATransactionType:
          type: string
          description: 'This will be empty for non-HSA transactions.  For HSA transactions, this will indicate the type of transaction used for IRS reporting (normal distribution, reverse distribution, non-reportable, etc.)'
          nullable: true
        TransactionStatus:
          type: string
          description: 'Indicates the transaction status.  Valid values are Approved, Ineligible, Pending, Resolved Employee Pyay, Resolved Payroll Deduction, New, Denied Unkown, Resolved No Refund, Ineligible Partially Offset, Resolved Offset by Manual Claim, Unauthorized Refund, Insufficient Documentation'
        TxnStatusToolTipText:
          type: boolean
          description: 'Returns true in the following situations: Transaction is a preauth and the transaction adjudication code is ineligible, insufficient documentation, denied, or ineligible partially offset. Transaction is a purchase, and there is a pended or denied amount, or the transaction adjudication status is denied Transaction is an admin rollover deposit and the transaction adjudication status is denied. Otherwise, returns false. You can use this field as an indicator to display more information to your participants to help them know what to do with pended or denied transaction activities.'
        TransactionId:
          type: string
          description: A system generated ID used to identify the transaction.  Also referred to as tnxkey on other APIs.
        SeqNumber:
          type: integer
          description: 'For Card transactions, this field contains the transaction sequence number received from the Card terminal. For transactions you perform through the WealthCare Admin UI, this field contains the sequence number WealthCare Admin assigns.'
          format: int32
        SettlementDate:
          type: string
          description: The settlement date of the transaction to which you wish to add a receipt
        CanUploadReceipt:
          type: boolean
          description: 'Option to indicate whether a transaction requires a receipt. A receipt may be uploaded if the transaction''s adjudication code is in one of the following: AUP2, AUP3, AUP4, AUP6, AUP7, AUP8, AUP9, AUPA, AUPB, AUPC, AUPD, AUPE, AUPI, AUPM, AUPN, AUPO, AUPQ'
          nullable: true
        HasReceipt:
          type: boolean
          description: Returns true if there is a receipt attached to the transaction; returns false if there is no receipt file for this transaction
        ReceiptExpired:
          type: boolean
          description: 'Returns true if the receipt has expired. Returns false if the receipt is still active. If the document routing feature is not enabled, documents are retained for 30 days after the transaction has been adjudicated. If the document routing feature is enabled, documents are stored for three years and then archived'
          nullable: true
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: "Receipts Info\r\n{ Tpa Id, File Key, Document Id, Document Display Name, Original File Name, Upload Date }"
        Claimant:
          type: string
          description: The name of the Claimant
          nullable: true
        ServiceStartDate:
          type: string
          description: The date for the first recurrence of the service
          format: date-time
        AcctTypeCode:
          type: string
          description: The account type code for the benefit account the transaction is processed against.
          nullable: true
        AcctTypeDesc:
          type: string
          description: Custom plan description if there is one; otherwise WCA's plan description
          nullable: true
        FlexAcctKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under.
          format: int32
        DisplayName:
          type: string
          description: 'The cardholder''s name (Last Name, First Name format)'
          nullable: true
    BenSoft.Contracts.DataContracts._0822.AccountDetailInfo:
      type: object
      properties:
        HsaAdvEligibility:
          type: boolean
          description: 'Flag Used to identify the accountholder is eligible for HSA Advance: 1 - Eligible for HSA advance, 0 - Ineligible for HSA advance. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
        CarryoverAmountCustomLabel:
          type: string
          description: This item is configured on the Employer Plan in WCA. Use this custom label with the Carryover Amount provided on this service.
          nullable: true
        ExpiringAmountCustomLabel:
          type: string
          description: 'This field is related to the carryover feature, if enabled. Expiring Amount Custom Label - this label is configured on the employer plan edit page.'
          nullable: true
        CarryoverPeriodCustomMessage:
          type: string
          description: This item is configured on the Employer Plan in WCA. Use this message to help explain to the participant how carryover works for this plan.
          nullable: true
        ExpiringAmount:
          type: number
          description: 'This field is related to the carryover feature, if enabled. The amount that will not carry over after the carryover period ends'
          format: double
          nullable: true
        RolloverBalance:
          type: number
          description: Total amount rolled over from prior year account to current year less any amount that rolled out.
          format: double
          nullable: true
        CoverageContinuation:
          type: boolean
          description: 'Flag to identify if plan has coverage continuation or not.  Coverage Often called "Spend Down" - when enabled this option allows the participant to submit for dates of service after the termination date through the plan end date. 1 - When coverage continuation is set, 0 - When coverage continuation is not set'
        SourceFlexAcctKey:
          type: integer
          description: Identifier for the flex account from which funds rolled or will roll to this account.
          format: int32
        GracePeriodCarryoverBal:
          type: number
          description: Balance which is not spent within the plan year and will be carried over for the next year.
          format: double
          nullable: true
        DeductibleMetDte:
          type: string
          description: Date on which deductible is met. Date will be in YYYYMMDD format
          format: date-time
          nullable: true
        GracePeriodDeductibleStatus:
          type: integer
          description: 'An integer indicating the grace period deductible status: 0 - No Deductible - This plan does not track whether a deductible is met or not., 1 - Deductible Not Met - the plan tracks a deductible, but the deductible has not been met. SCCs and MCCs are limited based upon plan setup., 2- Deductible Met - the deductible has been met (opens up eligible MCCs or SCCs for the participate - i.e., plan becomes ''full purpose''), 4 - No Deductible Limited - means the plan does not track a deductible and this account is a limited purpose account'
          nullable: true
        GracePeriodDeductibleMetDte:
          type: string
          description: 'Date on which grace period deductible is met. Date will be in YYYYMMDD format. The system tracks whether a participant met their deductible in the grace period since the grace period is usually a new deductible year for the participant. If this date is not set, then the deductible for the new deductible year has not yest been met. Note: Flagging the deductible as met during the prior year''s grace period also updates the deductible met status for the current year.'
          format: date-time
          nullable: true
        PreTaxAmtPtd:
          type: string
          description: 'When the pretax limit feature is enabled, this will be the pre-tax amount paid to date.'
          nullable: true
        PostTaxAmtPtd:
          type: string
          description: 'When the pretax limit feature is enabled, this will be the post-tax amount paid to date (i.e., the amount in excess of the pre-tax limit set).'
          nullable: true
        PlanOptions2:
          type: integer
          description: 'A bit field used to indicate additional plan level options. None = 0, Reimburse Amounts Applied to Deductible Account = 1, Automatically issue a card to dependents = 2, Auto-substantiate transactions using a merchant list = 4, Automatically issue a card to spouse only = 8, Hide this plan from participant portal and mobile = 16, Prevent claims from being entered for this plan = 32, Use Real Time Funding for this plan? = 64, Users allowed to edit amount when adding/editing Life event coverage tier = 128, For HSA accounts, admin/employer will not provide disclosure = 256, Allow employees to set External Deductible = 512, Plan Not Ready For Enrollment = 1024, Prevent Election Reduction = 2048, Alegeus use only = 4096, Prevent deductible from increasing = 8192, Future use = 16384, Allow partial payroll deposits = 32768, Apply Card Suspension Threshold Logic = 65536, Hide employer contribution information from participant = 131072, Show plan usage summary to participant = 262144, Hide deductible status messaging from participant = 524288, Enable HSA Advance Funding = 1048576, Enable Account Dormancy = 2097152, Show custom plan descriptions within coverage period details section of member portal = 4194304, Dependent care continuation is enabled = 8388608, Automatically offset balance due via FX claims = 16777216, Carryover enabled = 33554432, Require enrollment in next year account to be eligible for carryover = 67108864, Future use = 134217728, prevent participants from linking dependents to accounts under this plan = 268435456, prevent administrator users from linking dependents to accounts under this plan = 536870912, Future use = 1073741824, Dormancy''s No Enrollment Agent has processed this plan after the plan ends = 2147483648, Deadline for claims to apply to current tax year vs. next tax year enabled= 4294967296, Plan uses date of service for tax year deadline = 8589934592, Plan uses reimbursement date for tax year deadline = 17179869184, Future use = 34359738368, Future use = 68719476736, Future use = 137438953472, Pre-tax limit enabled = 274877906944, Do not allow Participants to set Autopay preference = 549755813888, Hide Payroll Info and Charts from participant = 1099511627776, Hide Deadlines Chart and Data from participant = 2199023255552, Hide family details from participant = 4398046511104, Hide Coverage Period Details from participant= 8796093022208, Hide Tax Related info from participant = 17592186044416, Do not allow participants to set auto pay provider preference = 281474976710656, VestingEnabled = 562949953421312, PlanRenewalCommunicationSent45DaysBefore = 1125899906842624, PlanRenewalCommunicationSent30DaysBefore = 2251799813685248, HideDollarAmount = 4503599627370496'
          format: int64
        HidePayrollInfoAndCharts:
          type: boolean
          description: 'Flag to identify if payroll info should be presented to participants. This flag corresponds to "Hide Payroll Info and Charts?" on the edit plan screen. This may be ignored if you are not displaying payroll info information on your UI. 1 - Hide payroll info and charts, 0 - Do not hide payroll info and charts'
        HideDeadlinesChartAndData:
          type: boolean
          description: 'Flag to indicate if deadlines chart and data should be displayed to the participant. The flag is configured in the "Hide Deadlines Chart and Data?" section of the edit plan screen. If you are not creating a deadlines chart on your UI, this may be ignored. 1 - Hide deadlines chart and data, 0 - Do not hide deadlines chart and data'
        HideFamilyDetails:
          type: boolean
          description: 'Flag to identify if family details (i.e., who is enrolled in the account from the family) should be presented to participants. This corresponds to "Hide Family Details?" on the edit plan screen. This may be ignored if you are not displaying family detail information on your UI. 1 - Hide family details, 0 - Do not hide family details'
        HideCoveragePeriodDetails:
          type: boolean
          description: 'Flag to indicate whether this account should display the coverage period details to the participant. The flag is configured in the “Hide Coverage Period Details?” section of the edit plan screen. 1 - Hide coverage period details, 0 - Do not hide coverage period details'
        HideTaxRelatedInfo:
          type: boolean
          description: 'Flag to identify if tax info should be presented to participants. This corresponds to "Hide Tax Related info?" on the edit plan screen. This may be ignored if you are not displaying tax info information on your UI. 1 - Hide tax related info  (post tax amount paid / pre-tax amount paid), 0 - Do not hide tax related info. This feature “Tax Limits and Deadlines” must be enabled by Alegeus for an Administrator instance  in order to use this feature.'
        CarryoverEnabled:
          type: boolean
          description: '0 - carryover is not enabled on the plan, 1 - carryover is enabled on the plan'
        CarryoverEligibility:
          type: boolean
          description: '0 - account is not eligible for carryover, 1 - account is eligible for carryover'
        CarryoverMinAmount:
          type: number
          description: The minimum available balance amount needed to be eligible for carryover
          format: double
          nullable: true
        RolloverInLabel:
          type: string
          description: 'If carryover is configured, then a label is provided in this field to use in place of "rollover in," which we''d recommend as a standard label.'
          nullable: true
        RolloverOutLabel:
          type: string
          description: 'If carryover is configured, then a label is provided in this field to use in place of "rollover out," which we''d recommend as a standard label.'
          nullable: true
        RolloverInAmt:
          type: number
          description: The amount of funds credited to this account from another account based on Primary or Secondary Rollover rules set for the source account.
          format: double
          nullable: true
        RolloverOutAmt:
          type: number
          description: The amount of funds that were debited from this account based on Primary or Secondary Rollover rules set for this account.
          format: double
          nullable: true
        InterestApplicable:
          type: boolean
          description: Flag used to identify if the account is a retiree interest bearing account.
        InterestEligible:
          type: boolean
          description: Flag used to identify if the account is eligible for interest.
        InterestPaidPlanToDate:
          type: number
          description: Amount of interest paid; plan to date
          format: double
        VestingPercentage:
          type: number
          description: The vesting percentage of a retiree interest bearing account. Will be null if plan/account does not support vesting.
          format: double
        HighYieldEligibility:
          type: boolean
          description: Flag to identify if the account has High Yield interest rates available.
        HighYieldOptIn:
          type: boolean
          description: Flag to identify if the account holder has opted into High Yield.
        CoveragePeriodInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1219.CoveragePeriod'
          description: Collection of Coverage Period information
          nullable: true
        Spent:
          type: number
          description: The amount spent during the plan year for this account.
          format: double
        RemainingBalance:
          type: number
          description: 'This is the balance that, at this point in time, would be used by the rollover rules (max amount or percent) to determine what would rollover to the target account. If the source plan is an Individual/Family HRA, this will be the rollover family available balance minus the rollover family preauth balance. For all other plans, it is the available balance minus the preauth hold.'
          format: double
        OnHoldAmount:
          type: number
          description: 'An amount that was previously approved for reimbursement, but the balance was not sufficient to pay the full amount. As future deposits are made to this account, this amount of those deposits is automatically reimbursed and the on-hold amount total is reduced.'
          format: double
        BalanceDue:
          type: number
          description: 'The amount a participant has overspent from this account, including reversed reimbursed claims and ineligible card transactions. If offset feature and  online repayment is enabled, then the system will offset the balance due with claims and/or the participant can repay this amount, respectively.'
          format: double
        IsEmprPlanMonthlyLimit:
          type: boolean
          description: 'Indicates if "Spending Limit Period" on the Edit Plan screen is set to Monthly: 1 - account has a monthly spending limit, 0 - account does not have a monthly spending limit'
        MonthlyDepositLimit:
          type: number
          description: 'Maximum amount that can be deposited to this account during the spending limit period (While the label is "monthlydepositlimit,"  the system was upgraded to include additional frequency/interval periods at the plan level. The limit can be Monthly, Quarterly or Calendar Year. Use the Get Account Interval Tracker Details service to obtain the deposit and spending limit remaining for each interval period.'
          format: double
        MonthlySpendingLimit:
          type: number
          description: 'Maximum amount that can be deposited to this account during the spending limit period. If the amount is -1 (null) and there is a monthly deposit limit, then the spending is capped at whatever has been deposited to the account during the interval. (While the label is “monthlyspendinglimit,” the system was upgraded to include additional frequency/interval periods at the plan level. The limit can be Monthly, Quarterly or Calendar Year. Use the Get Account Interval Tracker Details  service to obtain the deposit and spending limit remaining for each interval period.)'
          format: double
        EmprPlanAllowFundRollover:
          type: boolean
          description: 'Flag to identify whether the plan allows fund rollover. 0 - fund rollover not allowed, 1 - fund rollover allowed'
        PrimaryFundRolloverDate:
          type: string
          description: 'Based on the primary fund rollover rules setup for the employer plan, this date is when funds will be deducted from this account and credited to the target account.'
          format: date-time
        PrimaryFundRolloverAmount:
          type: number
          description: 'The maximum amount to rollover for an account not enabled with coverage tiers. Use this field only if coverage tiers are not enabled. If coverage tiers are enabled, then use the amount in the fund rollover collection.'
          format: double
        PrimaryFundRolloverRate:
          type: integer
          description: 'The rate to use to determine the percent of remining funds are to rollover for accounts with coverage tier based fund rollover. Use this field only if coverage tiers are not enabled. If coverage tiers are enabled, then use the amount in the fund rollover collection.'
          format: int32
          nullable: true
        PrimaryFundsRolloverAccountPlanStartDate:
          type: string
          description: 'If only primary rollover is used (and not secondary), this field is the plan year start date for the target account for primary fund rollover. If secondary rollover is used, PyFundsRolloverAccountPlanStartDate should be used for the primary target account (I.e., if PyFundsRolloverAccountPlanStartDate is populated, use that value instead of this one).'
          format: date-time
        PrimaryFundsRolloverAccountPlanEndDate:
          type: string
          description: 'If only primary rollover is used (and not secondary), this field is the plan year end date for the target account for primary fund rollover. If secondary rollover is used, PyFundsRolloverAccountPlanEndDate should be used for the primary target account (I.e., if PyFundsRolloverAccountPlanEndDate is populated, use that value instead of this one).'
          format: date-time
        PrimaryFundRolloverRule:
          type: integer
          description: 'Based on the primary fund rollover rules setup for the employer plan, this value indicates how much will rollover on the rollover date: 0 = No funds will rollover, 1 = All remaining fund, 2 = a % of remaining funds, 4 =  a % of remining funds up to a set cap 8 = the lesser of the remaining funds or the set cap amount'
        PyIndividualRolloverAmount:
          type: number
          description: 'When secondary rollover is configured, and if the source plan is an Individual/Family HRA, this will be the maximum amount (i.e., cap) of individual funds (if configured for primary rollover) that will rollover. This field can be ignored for other plan types.'
          format: double
        PyIndividualRolloverRate:
          type: integer
          description: 'If the source plan is an Individual/Family HRA, this will be the percentage of remaining funds in the account that may be rolled over to the target account (if configured for primary rollover) for each Individual''s account. This field can be ignored for other plan types.'
          format: int32
        PrimaryFundsRolloverAccount:
          type: string
          description: 'Account type code for the target account for primary fund rollover (i.e., the account type code where funds will rollover)'
          nullable: true
        IsPrimaryRollover:
          type: boolean
          description: 'Indicates if this account has primary fund rollover enabled for the account, based on configuration for Fund Rollover: 1 - account is primary rollover, 0 - account is not primary rollover'
        SecondaryFundRolloverDate:
          type: string
          description: 'After secondary rollover a secondary rollover method is allowed. On this date, secondary rollover will occur.'
          format: date-time
        SecondaryFundRolloverAmount:
          type: number
          description: 'The maximum amount to rollover during secondary rollover for an account not enabled with coverage tiers. Use this field only if coverage tiers are not enabled. If coverage tiers are enabled, then use the amount in the fund rollover collection.'
          format: double
        SecondaryFundRolloverRate:
          type: integer
          description: 'The rate to use to determine the percent of remining funds are to rollover during secondary fund rollover for accounts with coverage tier based fund rollover. Use this field only if coverage tiers are not enabled. If coverage tiers are enabled, then use the amount in the fund rollover collection.'
          format: int32
        SecondaryFundsRolloverAccount:
          type: string
          description: The target account for secondary fund rollover of funds from this account.
          nullable: true
        IsSecondaryRollover:
          type: boolean
          description: 'Indicates if the account has secondary rollover enabled, based on configuration for Fund Rollover. Note: Secondary runs after primary rollover has been completed). 1 - account is secondary rollover, 0 - account is not secondary rollover'
        PyFundsRolloverAccountPlanStartDate:
          type: string
          description: 'When secondary rollover is configured, this will be the plan year start date for the target account for primary fund rollover. If secondary rollover is not configured/this value is not populated, then use PrimaryFundsRolloverAccountPlanStartDate.'
          format: date-time
        PyFundsRolloverAccountPlanEndDate:
          type: string
          description: 'When secondary rollover is configured, this will be the plan year end date for the target account for primary fund rollover. If secondary rollover is not configured/this value is not populated, then use PrimaryFundsRolloverAccountPlanEndDate.'
          format: date-time
        SecondaryFundRolloverRule:
          type: integer
          description: 'Based on the secondary fund rollover rules setup for the employer plan, this value indicates how much will rollover on the rollover date: 0 = All remaining fund, 1 = a % of remaining funds, 4 = a % of remining funds up to a set cap 8 = the lesser of the remaining funds or the set cap amount'
        SecondaryIndividualRolloverAmount:
          type: number
          description: 'After primary rollover a secondary rollover method is allowed. If the plan has Individual and Family Amounts, this is the secondary rollover amount for each family member.'
          format: double
        SecondaryIndividualRolloverRate:
          type: integer
          description: 'After primary rollover a secondary rollover method is allowed. If the plan has Individual and Family Amounts, this is the percentage of remaining funds for each family member individual amount that may be rolled over to the target account.'
          format: int32
        SdFundsRolloverAccountPlanStartDate:
          type: string
          description: 'The plan start date for the account to which funds will rollover through the secondary rollover method (target account plan start date). If this value is populated, then use this value and not the PrimaryFundsRolloverAccountPlanStartDate.'
          format: date-time
        SdFundsRolloverAccountPlanEndDate:
          type: string
          description: 'The plan end date for the account to which funds will rollover through the secondary rollover method (target account plan end date). If this value is populated, then use this value and not the PrimaryFundsRolloverAccountEndStartDate.'
          format: date-time
        SdIndividualRolloverAmount:
          type: number
          description: 'After primary rollover a secondary rollover method is allowed. If the plan has Individual and Family Amounts, this value is the percentage of remaining family amount funds that may be rolled over to the target account. If this amount is provided, then it should be used rather than SecondaryIndividualRolloverRate.'
          format: double
        SdIndividualRolloverRate:
          type: integer
          description: 'After primary rollover a secondary rollover method is allowed. If the plan has Individual and Family Amounts, this value is the percentage of remaining family amount funds that may be rolled over to the target account. If this amount is provided, then it should be used rather than SecondaryIndividualRolloverRate.'
          format: int32
        EmprPlanDeductmanagerEnabled:
          type: boolean
          description: 'Flag to identify whether deductible manager is enabled at Plan level. 0 - Deductible manager is not enabled, 1 - Deductible manager enabled'
        Deductible:
          type: number
          description: Deductible Rules dependent field. This field provides the total deductible based on "Deductible Rules" configured for the plan. Deductible rules allow multiple levels of cost share. This amount can only be provided if last rule is 100% plan reimbursement.
          format: double
        DeductibleApplied:
          type: number
          description: Deductible Rules dependent field. The amount of the Deductible Rules deductible applied.
          format: double
        DeductibleRemaining:
          type: number
          description: Deductible Rules dependent field. Remaining deductible rules amount (Deductible - Deductible applied).
          format: double
        AccountStartDate:
          type: string
          description: This date is the account's start date - this date should be used as the participant's effective date for the account - dates of service prior to this date are not eligible for reimbursement.
          format: date-time
        AccountEndDate:
          type: string
          description: 'This will be the account''s termination date if a termination date is populated; otherwise, this will be the plan end date. Dates of service after this date are not eligible for reimbursement.'
          format: date-time
        CurrentDate:
          type: string
          description: Today's date. May be used to create a chart showing where today is in relation to the participant's account start and end dates.
          format: date-time
        SpendingLastDate:
          type: string
          description: 'This will be the date of the last day the participant can spend any money from this account - If an account has a grace period, this date is inclusive of the grace period. This date may be the earlier than plan end or grace if the participant terminated earlier.'
          format: date-time
        SubmitClaimsLastDate:
          type: string
          description: 'This date is the latest date a claim with an eligible date of service can be provided. It is generally the plan end date + a period for late claim submission. If an employee terminated early, then this date will be the employee''s termination date plus the employee run-out period set for the employer plan.'
          format: date-time
        EligDte:
          type: string
          description: This date is the employee's eligibility date. It may be earlier than the account's effective date or could be null. This date is stored at the employee level.
          format: date-time
        AccountDisplayOptions:
          type: integer
          description: Collection of account display options
        AccountInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.AccountInfo'
          description: Collection of account info
        AccountPayRollInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.AccountPayrollInfo'
        AccountType:
          type: string
          description: 'The account type code for the benefit account, such as FSA, HRA, FS2, HR2. Account types for HSA/VEBAs are specific to the HSA Custodian/Trust'
        IsHRA:
          type: boolean
          description: 'Indicates whether the account is a ''full featured'' HRA account. For HRA plans, is HRA indicates if the plan is a full feature HRA (i.e., HRX, HX*) If it is, then this account may also have Individual/Family balance details associated with it.'
        AccountTypeOptions:
          type: integer
          description: For future use.
          format: int64
        FundRolloverInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.FundRollover'
          description: A collect of data for fund rollover configuration
          nullable: true
        MccFlags:
          type: integer
          description: 'A bit field used to indicate default MCC settings. Use PlanMccFlags to determine MCC settings that can be configured for this account. None = 0, Deductible = 1, Claims Crossover = 2, User defined flag 1= 4, User defined flag 2 = 8, User defined flag 3 = 16, User defined flag 4= 32, User defined flag 5= 64, User defined flag 6= 128, User defined flag 7= 256, User defined flag 8= 512, User defined flag 9= 1024, User defined flag 10= 2048, Deductible Use = 4096'
          format: int64
        PlanMccFlags:
          type: integer
          description: 'A bit field used to indicate which plan level MCC settings are used by this account.None = 0, Deductible = 1, Claims Crossover = 2, User defined flag 1= 4, User defined flag 2 = 8, User defined flag 3 = 16, User defined flag 4= 32, User defined flag 5= 64, User defined flag 6= 128, User defined flag 7= 256, User defined flag 8= 512, User defined flag 9= 1024, User defined flag 10= 2048, Deductible Use = 4096'
          format: int64
        PlanExtOptions:
          type: integer
          description: 'A bit field used to indicate online enrollment plan options. You may use these options to drive an online enrollment experience for your participants. None = 0, Eligible for Online Enrollment = 1, Allow Participant to Enter Annual Election = 2, Allow Participant to Enter Per Pay Period = 4, Allow Participant to Associate a Dependent to the Account = 8, Allow Participant to Add Broker ID = 16, Allow Participant to Choose Coverage Tier = 32, For HSAs, Allow Participant to Choose Product Partner Opt-in Status = 64, For HSAs, Allow Participant to Choose Product Partner Opt-in Status = 128, Allow Rolling Enrollment = 256, Allow Participant to Choose Claims Crossover Auto-Pay = 512, Medicare Primary Plan (this is from the Edit Plan screen, not the Online Enrollment Setup)= 1024, Auto Copy Active Employee Recurring Expenses = 2048, Auto Copy Employee Co-pays = 4096, This plan to pay providers if claims include a valid provider ID (this is from Edit Plan screen, not Online Enrollment Setup) = 8192, Participant default for auto pay (from Edit Plan screen, not Online Enrollment setup) = 16384, Allow enrolled participant to update per pay period election during open enrollment = 32768, Allow enrolled participants to update Coverage Tier during open enrollment dates = 65536, Allow Monthly Enrollment = 131072, Allow Mid-Year Enrollment = 262144, Future use only = 524288, Future use only = 1048576, Future use only = 2097152'
          format: int64
        InternalFlexAcctOptions:
          type: integer
          description: 'Not recommended for client use. A bit field used to indicate what options are enabled for the account. None = 0, For Fixed Employer Funding, funding amount is available upon account creation= 1, Auto Link Dependents = 2, Override Perm Inactive Account = 4, Auto Pay Provider = 8, Linked DTR = 16, Future use = 32, Automatically Reinstate Card Suspension Activity = 64, Future use = 128'
          format: int32
        PlanDefaultAcctCrossover:
          type: boolean
          description: 'Flag to identify whether claim crossover is enabled (i.e., can claims auto-pay from the account) at the plan level or not: 1 - claim crossover allowed, 0 - claim crossover not allowed'
        DPAccAllowManualClaims:
          type: boolean
          description: 'Flag to identify if an HSA account may submit manual claims on WCP. Ignore for non-HSA accounts. 0 - manual claims not allowed, 1 - manual claims allowed'
        EnableAccountDormancy:
          type: boolean
          description: 'Flag to identify whether dormancy enabled for the plan: 0 - Dormancy period is not enabled, 1 - Dormancy period enabled. Note: Dormancy is not a standard feature.'
        ShowCustomPlanDescriptionInCoveragePeriods:
          type: boolean
          description: 'This field value indicates whether to display custom plan description in coverage period screens: 1- Display custom plan description, 0 - Hide custom plan description'
        CustomPlanDescription:
          type: string
          description: 'This item is configured on the Employer Plan in WCA. This field will be blank if not set on the Employer Plan page. For VEBA/HSA account, if Custom description is not present on the plan page, then this field will display the description for the HSA Custodian (i.e., Product Partner Description).'
          nullable: true
        IsAccountSuspended:
          type: boolean
          description: 'Indicates if debit card activity is suspended for this account. 1 - debit card activity is suspended, 0 - debit card activity is not suspended'
        HsaAdvInitialAmt:
          type: number
          description: 'The annual election or prefunded amount designated for HSA Advance. It is the full amount available as an advance at the start of enrollment. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvUsedYtd:
          type: number
          description: 'The year-to-date amount which has been advanced to approve debit card purchases. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvRecoveredYtd:
          type: number
          description: 'The total year-to-date contributions used to offset amounts previously advanced (i.e., the participant used their advance and when payroll deposits are processed, the advance is offset / reduced. This amount is how much of their payroll deposits were used to ''pay back'' the advanced amount). Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvOutstandingBal:
          type: number
          description: 'The amount advanced year-to-date which has not yet been recovered. (i.e., a participant used their advance and has not yet fully applied payroll deposits to that advance - this is the remaining advance to be ''paid back'' by payroll deposits). HSA Advance Used - HSA Deposit Offsets = HSA Advance Outstanding Balance Amount. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvAvailBal:
          type: number
          description: Balance available in advance for immediate use by account holder - available on by using the debit card.
          format: double
        HsaAdvBeginDte:
          type: string
          description: 'Date when HSA advance is available for spending. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: date-time
        HsaAdvEndDte:
          type: string
          description: 'Used to specify when employee no longer has access to HSA advance amount. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: date-time
        HsaAdvDepositOffsetYtd:
          type: number
          description: 'The total year-to-date contributions deposited into the HSA cash balance that reduces the amount available for advance (as payroll deposits are received which increase a participant''s HSA cash balance, the HSA Advance is reduced since the point of the Advance is to give participant''s funds before contributions have been made). Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        TotalDisbursableBal:
          type: number
          description: 'Combined HSA cash balance and HSA advance available amount. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        HsaAdvAccessibilityFlag:
          type: boolean
          description: 'Indicates if the accountholder currently has access to HSA Advance.  It is set to false automatically if the accountholder is terminated or has an investment account balance. 1 - Hsa Advance accessible, 0 - Hsa Advance not accessible. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
        HsaAdvNonAccessibilityReason:
          type: integer
          description: 'This will be populated if HsaAdvAccessibilityFlag is 0. Provides the reason why the Advance is not available to the participant. None = 0, Advance Access Denied By Non-zero Investment Balance = 1, Advance Access Denied By Cardholder Account Status = 2, Advance Access Denied By Product Partner Acct Status = 4, Advance Access Denied By Cardholder Status = 8, Advance Access Denied By Plan Does Not Have Advance Enabled = 16, Advance Access Forcefully Denied = 32, Advance Access Denied As Advance Funding Setup Doesn''t Exist = 64, Advance Access Denied Because Today''s Date Not In Funding Period = 128, Advance AccessDenied By Funds Not Available (Available Balance < 0) = 256. Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: int32
        PriorYearHsaAdvInitialAmt:
          type: number
          description: 'For the prior year, the annual election or prefunded amount designated for HSA Advance. It is the full amount available as an advance at the start of enrollment.'
          format: double
        PriorYearHsaAdvAvailBal:
          type: number
          description: 'HSA advance available balance from prior year. This is the prior year initial advance amount, minus contributions, HSA advance amount used, and ending transactions'
          format: double
        PriorYearHsaAdvUsedYtd:
          type: number
          description: 'For the prior year, the year-to-date amount which has been advanced to approve debit card purchases.'
          format: double
        PriorYearHsaAdvRecoveredYtd:
          type: number
          description: 'For the prior year, the total year-to-date contributions used to restore amounts previously advanced.'
          format: double
        PriorYearHsaAdvOutstandingBal:
          type: number
          description: 'For the prior year, the amount advanced year-to-date which has not yet been recovered (i.e., paid back through payorll contributions).'
          format: double
        PriorYearHsaAdvDepositOffsetYtd:
          type: number
          description: 'For the prior year, the total year-to-date contributions deposited into the HSA cash balance that reduces the amount available for advance.'
          format: double
        FutureYearHsaAdvInitialAmt:
          type: number
          description: 'The total initial HSA Advance amount for the year/coverage period. This amount cannot exceed the IRS max contribution for the current tax year. Note: This amount does not affect the HSA cash balance., Note: Admin and Employer Plan must have HSA Advance feature enabled to setup HSA Advance for the participants.'
          format: double
        RestrictParticipantClaimEntry:
          type: boolean
          description: Identifies if the Participant is not allowed to enter a claim on the portal - as configured on the plan level.
        ExtDeductibleStatus_2019_07:
          type: integer
          description: 'An integer indicating the status of the external. Deductible. Using this if using an API version greater than 10.1. Otherwise, use ExtDeductibleStatus. An integer indicating the grace period deductible status: 0 - No Deductible - This plan does not track whether a deductible is met or not., 1 - Deductible Not Met - the plan tracks a deductible, but the deductible has not been met. SCCs and MCCs are limited based upon plan setup., 2- Deductible Met - the deductible has been met (opens up eligible MCCs or SCCs for the participate - i.e., plan becomes ''full purpose''), 4 - No Deductible Limited - means the plan does not track a deductible and this account is a limited purpose account'
        HideDeductible:
          type: boolean
          description: 'Flag to identify if the deductible status message should be presented to participants. This corresponds to "Hide external deductible prompt?" on the edit plan screen. This may be ignored if you are not displaying deductible status information on your UI. 1 - Hide deductible status message, 0 - Do not hide deductible status'
        PlanUsageDescription:
          type: string
          description: 'If configured for the employer plan, this field includes Helpful description of plan usage to present to participants (corresponds to the "Plan Usage Summary for Mobile" field on the Edit Plan screen).'
          nullable: true
        LinkFlexAccountKey:
          type: integer
          description: A system generated key used to identify the account to which this account is linked.
          format: int32
        IsLinkedDTR:
          type: boolean
          description: 'For deductible tracking accounts (DT*, FD*), indicates if this account is linked to another plan: 1 - Linked to another plan, 0 - Not linked to another plan'
        IsQLE:
          type: boolean
          description: 'Flag to identify whether Qualified life event feature is enabled for the account as configured on the plan. If true, then the account has coverage periods enabled. 1 - QLE enabled, 0 - QLE not enabled'
        EmpeCanSetDeductible:
          type: boolean
          description: 'Flag to identify whether the employee can set external deductible status (met or not met) for account. (This setting is controlled at employer and employer plan level). 0 - participant cannot set external deductible status, 1 - participant can set external deductible status'
        ExtDeductibleStatus:
          type: integer
          description: 'An integer indicating the status of the external deductible. Use this field if using version 10.1 or older; otherwise, use ExtDeductibleStatus_2019_07. No Deductible = 0, Deductible Not Met = 1, Deductible Met = 2'
        TransferAmountsAbove:
          type: number
          description: 'Used in conjunction with the MinAutoTransferAmount, this amount is the balance a participant wishes to maintain in their HSA. Any amounts above this amount can be automatically transferred to investments as soon as the MinAutoTransferAmount is met. Example: if theTransfer amounts above = 1000 and the MinAutoTransferAmount is $50, then the participant must have $1050 or more in order for any funds above $1000 to transfer to investments.'
          format: double
        MinAutoTransferAmount:
          type: number
          description: 'For HSA accounts, this amount is the minimum amount that can be transferred through the auto-transfer to investments feature. For example, if the amount is 100.00, then a participant can only request to setup an auto-transfer of 100.00 or more.'
          format: double
        DataPartnerAccountOptions:
          type: integer
          description: Do not use. Indicates offerings available through the Product Partner - this information is not used by externally integrated systems and is used by Alegeus only.
          format: int32
        ProductId:
          type: string
          description: 'For an HSA or VEBA account, the Product ID is used to represent the custom program the participant is assigned to, as created by the HSA custodian. The product ID is tied to fee models, interest plans, and investment options used on the account.'
          nullable: true
        HraType:
          type: integer
          description: 'For an full featured HRA account type (HRX, HX1…HX9), this value indicates if it is an individual/family HRA (i.e., embedded) or a single fund HRA (i.e., umbrella). None = 0, Individual/Family Amt = 1, Single Fund Hra = 2'
        IsEmbedded:
          type: boolean
          description: 'For a deductible account (DTR, DT*, and FD*), this field identifies the deductible type (specified when the plan was set up on the New Plan screen). 1 - Embedded, 0 - Not Embedded'
        PreauthBalance:
          type: number
          description: The amount of card authorizations + deposits on hold.
          format: double
        AvailBalance:
          type: number
          description: 'The available balance for the account - the amount before any card holds or deposit holds. For HSA Accounts, this is the "Current Balance".'
          format: double
        AcctTypeClassCde:
          type: integer
          description: 'An integer representing the account class the account belongs to FSA = 1, HRA = 2, HSA = 3,Deductible = 4, Other = 5, VEBA = 6, Transit = 7, Parking = 8, Retiree = 9, Dependent Care FSA = 10, LPFSA = 11, Payroll = 12, Premium = 13, Rollover = 14, Life Planning = 15, Lifestyle = 16, EE Care Card = 17, Connected Cash = 18, CMS OTC Medicare = 19, Medicare Advantage = 20, Parking Post Tax = 21, ICHRA Excepted Benefits = 22, Transit Post Tax Subsidy = 23, Wellness Incentives And Rewards = 24'
        AcctTypeClassDescription:
          type: string
          description: 'The string description that corresponds to the AcctTypeClassCde (FSA, HRA, HSA, etc.)'
        HideDollarAmount:
          type: boolean
          description: 'A plan level setting that controls the visibility of the contributions, coverage, and funding amounts for the participant. True - Hide dollar amount from participant. False - Display dollar amount to the participant.'
      description: "For use in version 22 (WC 22.08.00) of GetAccountDetails API\r\n            \r\nDid not inherit from _0921.AccountDetailInfo since it caused a serialization issue due to data member 'CoveragePeriodInfo' being duplicated in the type hierarchy\r\n    Instead, this version inherits from the BaseAccountDetailInfo and all previous version fields have been copied"
      nullable: true
    ServicesPortalinfoDownloadableformTpaIdDelete200ApplicationJsonResponse:
      type: object
    BenSoft.Contracts.DataContracts._0716.ExternalBankAccount:
      type: object
      properties:
        TpaId:
          type: string
        ExtBankAcctKey:
          type: integer
          format: int64
        BankAccountName:
          type: string
        BankAcctNickName:
          type: string
        BankAcctTypeCdeEnumeration:
          type: integer
          format: int32
        BankAccountNumber:
          type: string
        BankRoutingNumber:
          type: string
        BankAccountStatusCdeEnumeration:
          type: integer
          format: int32
        ConfirmDte:
          type: string
          format: date-time
        DataPartnerId:
          type: string
      description: External bank account
    BenSoft.Contracts.DataContracts._0716.DisplayableFields:
      type: object
      properties:
        OriginalFieldName:
          type: string
        AlternativeFieldName:
          type: string
          nullable: true
        DisplayOptions:
          type: integer
        DisplaySpecifications:
          type: integer
      description: Displayable fields
    BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-InvestmentTrans:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentTransfer'
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.InvestmentTransfer:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmployeeId:
          type: string
        FlexAcctId:
          type: string
        CardholderDisplay:
          type: boolean
        DisplayDte:
          type: string
        DpstTypeCde:
          enum:
            - Payroll
            - Prefunded
            - IndividualAmt
            - IndividualAmtReset
            - AnnualElection
            - OtherDeposit
            - FamilyOtherDeposit
            - Rollover
            - ExternalFunding
            - HSATransfer
            - AnnualElectionOverride
            - AdminRolloverDeposit
            - AdminCarryoverDeposit
            - HSAIncentiveDeposit
            - InterestDeposit
          type: string
        DateRequested:
          type: string
          format: date-time
        EmpeDepositAmount:
          type: number
          format: double
        EmprDepositAmount:
          type: number
          format: double
        TotalDepositAmount:
          type: number
          format: double
        DateAvailableInInvestmentAccount:
          type: string
          format: date-time
    ServicesDocumentsHSATaxFormsDeliveryOptionTpaIdEmployerIdParticipantIdPut200:
      type: integer
      format: int32
    ServicesEnrollmentBeneficiaryTpaIdEmployerIdParticipantIdFlexAcctIdBeneficia:
      type: boolean
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ExternalBankAccountValidationRequest:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier assigned to the administrator
        ExtBankAcctKey:
          type: integer
          description: Unique identifier assigned to a bank account
          format: int64
        DataPartnerId:
          type: string
          description: Unique identifier for the Product Partner
        CreditAmt1:
          type: number
          description: First of three credit amounts needed to validate a physical bank account
          format: double
        CreditAmt2:
          type: number
          description: Second of three credit amounts needed to validate a physical bank account
          format: double
        CreditAmt3:
          type: number
          description: Third of three credit amounts needed to validate a physical bank account
          format: double
      description: Initial Version for External Bank Account Validation
    BenSoft.Contracts.DataContracts._0216.ParticipantExpenseDetail:
      type: object
      properties:
        PayProviderKey:
          type: integer
          description: Unique identifier key for the Provider
          format: int32
        ProviderAddress1:
          type: string
          description: Address line 1 associated with the provider’s mailing address
        ProviderAddress2:
          type: string
          description: Address line 2 associated with the provider’s mailing address
        ProviderCity:
          type: string
          description: City associated with the provider’s mailing address
        ProviderState:
          type: string
          description: State associated with the provider’s mailing address
        ProviderCountryCde:
          type: string
          description: Country Code associated with the provider’s mailing address
        ProviderZip:
          type: string
          description: Zip Code associated with the provider’s mailing address
        ProviderPhone:
          type: string
          description: Phone associated with the provider’s mailing address
        ProviderId:
          type: string
          description: Unique identifier for the Provider
        TpaId:
          type: string
          description: Unique identifier that WealthCare Admin assigns to Employee
        ExpenseKey:
          type: integer
          description: Unique identifier key for Expense
          format: int64
        EmpeKey:
          type: integer
          description: Unique identifier key for Employer
          format: int32
        DepKey:
          type: integer
          description: Unique identifier key for the Dependent
          format: int32
        ServiceStartDte:
          type: string
          description: Date when the Service Start
          format: date-time
        ServiceEndDte:
          type: string
          description: Date when the Service End
          format: date-time
        ProviderName:
          type: string
          description: Name of the Provider
        DescOfService:
          type: string
          description: Description related to the Service
        BilledAmt:
          type: number
          description: Amount paid against total billed amount
          format: double
        InsAmtAllowed:
          type: number
          description: Maximum Insurance Amount Allowed For Participant associated with Employee
          format: double
        InsAmtPaid:
          type: number
          description: Insurance Amount paid to Participant associated with Employee
          format: double
        EmpePaidAmt:
          type: number
          description: Amount paid to Employee
          format: double
        Notes:
          type: string
          description: Notes entered by user related to the transaction
        FileKey:
          type: integer
          description: Unique identifier key for File
          format: int32
        eClaimOptions:
          type: integer
          description: 'Option for Online submission of claim: Yes=1, No=0'
          format: int64
        DeductibleAmt:
          type: number
          description: Amount will be used as the participant's deductible responsibility
          format: double
        CoinsAmt:
          type: number
          description: Amount to participant's coinsurance
          format: double
        CoPayAmt:
          type: number
          description: Amount will be used as participant's copay responsibility
          format: double
        TotalReimbAmt:
          type: number
          description: Total Amount of transaction which got reimbursed
          format: double
        OriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: "Origin Code indicates which way claims initiated : None = 0,POSCardSwipe = 1,POSKeyedIn = 2,POSPhonedIn = 3,\r\nPOSMbiSubmitted = 4,ManualScreen = 50,ManualEFT = 51, ManualAgent = 52, ParticipantManualScreen = 53,\r\nParticipantMobileScreen = 54, HZDirect = 55, eClaimManagerManual = 56, eClaimManagerTPS = 57, WebServiceClaim = 58"
        eClaimUIStatus:
          enum:
            - None
            - New
            - Matched
            - Reimbursed
            - NotAllowParticipantClaimEntry
            - MissParticipantClaimEntryUITemplate
            - In_Process
            - Fully_Paid
          type: string
          description: "Current status of the eClaim : None = 0, New = 1, Matched = 2, Reimbursed = 3,NotAllowParticipantClaimEntry = 4,\r\nMissParticipantClaimEntryUITemplate = 5,In_Process = 6,Fully_Paid = 7"
      description: Participant Expense Detail
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt:
      type: object
      properties:
        FileKey:
          type: integer
          description: This is a value to be generated by the system when the file is uploaded into WCA. Send 0 on the Upload Manual Claim Receipt request.
          format: int32
        FileFormat:
          type: integer
          description: 'Refers to format of receipt file uploaded: Unknown = 0, Fixed = 1, CSV = 2, XML = 4, PDF = 8, QIF = 16, Excel = 32, JPEG/JPG = 64, GIF = 128, BMP =256, FixedNacha = 512, Delimited = 1024, Word = 2048, PNG = 4096, TIFF = 8192, ExtFileFormat = 16384'
          format: int32
        ContentLength:
          type: integer
          description: 'The file length, in bytes.'
          format: int32
        ContentType:
          type: string
          description: The MIME content type of the uploaded file.
          nullable: true
        FileName:
          type: string
          description: 'The name of the receipt file, including the directory path.'
        InputStream:
          type: string
          description: A byte array representing the contents of the file for the reciept.
          format: byte
          nullable: true
        Base64:
          type: string
          description: The string representation in Base 64 of the file content. You will need to decode this to display the image.
      nullable: true
    BenSoft.Contracts.DataContracts.Business.Transactions.HSAOnlinePaymentInfo:
      type: object
      properties:
        PaymentDate:
          type: string
          description: Service start date
          format: date-time
        PayeeName:
          type: string
          description: Provider name / Payee name
        PayeeAddress:
          type: string
          description: Provider address / Payee address
        AccountDescription:
          type: string
          description: Product partner name
        Amount:
          type: number
          description: Amount of the payment per pay cycle
          format: double
        PaymentType:
          type: integer
          description: 'Method for reimbursing an employee or provider for this transaction { Check = 1, DirectDeposit = 2 }'
          format: int32
        PayeePhone:
          type: string
          description: Provider phone number / Payee phone number
        Memo:
          type: string
          description: Memo / Note
        ErrorCode:
          type: integer
          description: Error code
          format: int32
        ErrorDescription:
          type: string
          description: Error description
        PayProvider:
          type: string
          description: EIN number / Tax ID number
        TaskSchKey:
          type: integer
          description: Unique key identifier for task scheduling
          format: int32
        ClaimKey:
          type: integer
          description: Unique key identifier for claim
          format: int64
        RecurrenceFrequency:
          enum:
            - All
            - None
            - Daily
            - Weekly
            - BiMonthly
            - Monthly
            - Quarterly
            - Yearly
            - SemiMonthly
            - BiWeekly
            - Once
          type: string
          description: 'Indicates whether the claim will be a recurring claim or not, and what the recurrence is'
        TotalRecurrence:
          type: integer
          description: Number of payment that are to be made
          format: int32
        NextPaymentDate:
          type: string
          description: Date of next payment
          format: date-time
        TaskSchStartDate:
          type: string
          description: The start date for the first recurrence of the claim
          format: date-time
        TaskSchEndDate:
          type: string
          description: The end date for the recurrence
          format: date-time
        TaskScheduleOptions:
          type: integer
          description: 'Payment schedule options { None = 0, StopSchedule = 8, RecurringNumOfPaymentsSet = 16, CompleteSchedule = 32 }'
          format: int64
        UpdateDte:
          type: string
          description: Last update date of payment
          format: date-time
        FlexAcctKey:
          type: integer
          description: Unique key identifier for flex account
          format: int32
    BenSoft.Contracts.DataContracts._1219.CoveragePeriod:
      type: object
      properties:
        CustomPlanDescription:
          type: string
          description: The Custom Plan Description as provided on the Employer Plan.
        ShowCustomPlanDescriptionInCoveragePeriods:
          type: boolean
          description: Indicates whether the custom plan description should be displayed with coverage periods.
        LifeEventCode:
          type: string
          description: Code for life events enabled in coverage period
        StartDate:
          type: string
          description: Date when coverage period starts
          format: date-time
        EndDate:
          type: string
          description: Date when coverage period ends
          format: date-time
        AnnualElection:
          type: number
          description: The annual election or allocation for the coverage period.
          format: double
        DispPTD:
          type: number
          description: Amount disbursed periodically for this account
          format: double
        DisbBal:
          type: number
          description: 'The amount of funds available for claims in this coverage period less preauth hold (i.e., AvailBal-PreAuthHold= DisbBal)'
          format: double
        PreauthBal:
          type: number
          description: Amount on hold for the account.
          format: double
        AvailBal:
          type: number
          description: 'The amount of funds available for claims in this coverage period, not including preauth hold.'
          format: double
        LifeEventDesc:
          type: string
          description: Description of life events in coverage periods
        SuspendActivity:
          type: boolean
          description: Indicates whether the coverage period is a gap in coverage (true) or not. Claims cannot be submitted for reimbursement is the date of service is during a gap in coverage.
    BenSoft.Contracts.DataContracts.Employee.AccountInfo:
      type: object
      properties:
        Status:
          type: integer
          description: 'The Employee Account Status: 1 = New, 2 = Active, 3 = Temp Inactive, 4 = Permanently Inactive, 5 = Terminated'
        EmpeFlexAcctStatus:
          type: integer
          description: 'The Employee Account Status: 1 = New, 2 = Active, 3 = Temp Inactive, 4 = Permanently Inactive, 5 = Terminated, 6 = Enrollment'
        DepFlexAcctStatus:
          type: integer
          description: 'The Dependent Account Status: 1 = New, 2 = Active, 3 = Temp Inactive, 4 = Permanently Inactive, 5 = Terminated'
        DepStatus:
          type: integer
          description: 'The Dependent Status: 1 = New, 2 = Active, 3 = Temp Inactive, 4 = Permanently Inactive, 5 = Terminated'
        FirstName:
          type: string
          description: 'First name of employee or dependent, if IsDep = True.'
        Initial:
          type: string
          description: 'Initials of employee or dependent, if IsDep = True.'
          nullable: true
        LastName:
          type: string
          description: 'Last name of employee or dependent, if IsDep = True.'
        IndividualAmount:
          type: number
          description: 'If the account is an embedded DTR or Individual/Family HRA, then this amount is the allocation provided to the employee or dependent.'
          format: double
        AdditionalDeposits:
          type: number
          description: These deposits include amounts deposited to the account as an "other/special deposit" or due to fund rollover. This amount increases the amount available to spend without changing the Annual Election for prefunded plans or the Contributions YTD for Payroll funded account types.
          format: double
        Payments:
          type: number
          description: 'The amount spent by the employee. If this is an embedded DTR or Individual/Family HRA, then this amount is the individual amount spent for the employee or dependent'
          format: double
        Balance:
          type: number
          description: 'For most accounts, this is the current balance available to spend for the account. This balance only displays if IsDep is false unless the plan is a DTR or HRX plan: If this is an embedded DTR or Individual / Family HRA, AND is DEP is true, then this is the Dependent Accounts individual amount balance. If this is an embedded DTR or Individual / Family HRA, AND is DEP is False, then this is the employee''s individual amount balance.'
          format: double
        IsDep:
          type: boolean
          description: "Flag to identify whether Dependent is available or not                                       \r\n1 - Yes                                 \r\n0 - No"
        FlexAcctKey:
          type: integer
          description: Unique identifier for the flex account (this value will be the same for each dependent)
          format: int32
        EmpeRelation:
          type: integer
          description: '0 = Unknown, 1 = Spouse or Common Law Spouse, 2 = Child, 3 = Domestic Partner, 4 = Other'
    BenSoft.Contracts.DataContracts.Employee.AccountPayrollInfo:
      type: object
      properties:
        PayrollCycle:
          type: integer
          description: Indicates the payroll cycle for an account
        EmployeePPPContribution:
          type: number
          description: Employee Pay Per Period Contribution amount that is set in the system for this account
          format: double
        EmployerPPPContributionsAmount:
          type: number
          description: Employer Pay Per Period Contribution amount that is set in the system for this account
          format: double
        ContributionsYTD:
          type: number
          description: Total Contributions Year to Date for an account (total of payroll deposits)
          format: double
        RemainingContributions:
          type: number
          description: Annual election minus contributions YTD
          format: double
        PlanStartDate:
          type: string
          description: The employer plan start date.
          format: date-time
        PlanEndDate:
          type: string
          description: The employer plan end date.
          format: date-time
        AutoDepositCalendarKey:
          type: integer
          description: Unique identifier for auto deposit calendar
          format: int32
        EmprAnnualElection:
          type: number
          description: Employer Annual election for the account
          format: double
        EmpeAnnualElection:
          type: number
          description: Employee Annual election for the account
          format: double
    BenSoft.Contracts.DataContracts.Employee.FundRollover:
      type: object
      properties:
        FundRolloverRule:
          type: integer
          description: 'None = 0, AllFunds = 1, Cap = 2, Percentage = 4, CapAndPercentage = 8'
        PrimaryFundRolloverAmount:
          type: number
          description: 'The most that can rollover for this participant''s account on the primary fund rollover date.  For an Individual/Family amount HRX plan, this is the Family Amount, If the Primary Fund Rollover rule is set to 0, 1, or 4, then ignore this field. If set to 2, then this amount is the lesser of the account remaining balance or this amount will rollover. If set to 8, then this value workings in coordination with the Primary Fund Rollover Rate (Percent) see the PrimaryFundRolloverRate field description for how this option works.'
          format: double
        PrimaryFundRolloverRate:
          type: integer
          description: 'The Percentage amount for the rollover amount for the primary fund rollover.  For an Individual/Family amount HRX plan, this is the Family Amount, If the Primary Fund Rollover rule is 4, then this percent of the participant''s remaining balance on the fund rollover date will rollover. If the Primary fund rollover rule is 8 (Cap and Percentage), then this % of the remaining balance up to the PrimaryFundRollover Amount (i.e., cap) will rollover.'
          format: int32
        SecondaryFundRolloverAmount:
          type: number
          description: 'Secondary Fund Rollover runs AFTER primary fund rollover runs. This rollover process takes the remaining balance after primary fund rollover to determine how much to rollover. For an Individual/Family amount HRX plan, this is the Family Amount, Where are the Secondary Fund Rollover rules? The most that can rollover for this participant''s account on the Secondary fund rollover date. If the Secondary Fund Rollover rule is set to 0, 1, or 4, then ignore this field. If set to 2, then this amount is the lesser of the account remaining balance or this amount will rollover. If set to 8, then this value workings in coordination with the Secondary Fund Rollover Rate (Percent) see the SecondaryFundRolloverRate field description for how this option works."'
          format: double
        SecondaryFundRolloverRate:
          type: integer
          description: 'The Percentage amount for the rollover amount for the secondary fund rollover. For an Individual/Family amount HRX plan, this is the Family Amount, If the Secondary Fund Rollover rule is 4, then this percent of the participant''s remaining balance on the fund rollover date will rollover. If the Secondary fund rollover rule is 8 (Cap and Percentage), then this % of the remaining balance up to the SecondaryFundRollover Amount (i.e., cap) will rollover.'
          format: int32
        CoverageTierID:
          type: string
          description: 'The coverage tier ID assigned to the last coverage period of the year the participant is aligned to. Example: "EMPLOYEE ONLY"'
          nullable: true
        CoverageTierKey:
          type: integer
          description: The system key for the coverage tier ID.
          format: int32
    BenSoft.Contracts.DataContracts._1125.SubmitManualClaimsWithReceipt:
      type: object
      properties:
        Claims:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1125.SubmitManualClaimWithReceipt'
          description: A list of Submit Manual Claim With Receipt
        SingleReceipt:
          type: boolean
          description: 'Single receipt allows submitting multiple claims with the same receipt. Set to true to allow a single receipt to be used on multiple claims. To upload multiple claims with individual receipts, set SingleReceipt to false.'
      description: 'A collection of manual claims submitted for processing, with an option to use a single receipt for multiple claims.'
    BenSoft.Contracts.DataContracts._1125.SubmitManualClaimWithReceipt:
      type: object
      properties:
        EventName:
          type: string
          description: Event's name
        IsESignatureClaim:
          type: boolean
          description: 'Is ESignature Claim (1 (true), 0 (false))'
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        ServiceStartDate:
          type: string
          description: Service Start Date for the claim
          format: date-time
        ServiceEndDate:
          type: string
          description: Service End Date for the claim
          format: date-time
        Claimant:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.Claimant'
        AcctTypeCde:
          type: string
          description: The account type code for the benefit account the claim is processed under.
          nullable: true
        AccountKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under (also referred to as flex account key).
          format: int32
        TxnAmt:
          type: number
          description: The claim's transaction amount
          format: double
        FlexAcctKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under. Same value as AccountKey
          format: int32
        ProviderId:
          type: string
          description: Provider Id on th claim
          nullable: true
        ProviderDesc:
          type: string
          description: Provider Description on the claim
          nullable: true
        TrackingNum:
          type: string
          description: 'Number you assign to track claims. Note: WCA does not use this number.'
        ClaimDesc:
          type: string
          description: Description of service
          nullable: true
        ReimbModeCde:
          type: integer
          description: 'The method used to reimburse the employee or dependent for this transaction: 0 - None (default), 1 - Check, 2 - Direct deposit, 3 - External check, 4 - External direct deposit, 5 - Card, 6 - Payroll. Note: If reimbursement method is 2 (direct deposit) and the direct deposit account has not yet been validated, the reimbursement defaults to check as a one-time override (if check reimbursement is available). If check reimbursement is not available, the claim is denied.'
          nullable: true
        ScCde:
          type: string
          description: The Service Category Code that the claim should be processed with. The Service Category Code must match to an SCC setup for the Employer Plan in which the employee is enrolled or the claim will be denied. This should not be sent if AccountTypeCde is used.
          nullable: true
        Notes:
          type: string
          description: Claim notes
          nullable: true
        FileKey:
          type: integer
          description: This is a value to be generated by the system when the file is uploaded into WCA. Send 0 on the Upload Manual Claim Receipt request.
          format: int32
        Receipt:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.Receipt'
        PayProviderKey:
          type: integer
          description: 'This is a system generated key used to identify a specific pay provider. If this is a pay provider claim, the pay provider must be added to (or already exist) in the system prior to claim submission. The PayProviderKey is returned on the \"Save a provider\" and \"Return the list of provider based on the search criteria\" API requests.'
          format: int32
        PatientIdNum:
          type: string
          description: The provider's patient account number
          nullable: true
        ExpenseKey:
          type: integer
          description: Expense Key
          format: int64
        ClaimId:
          type: string
          description: A system generated key used to uniquely identify the claim. This should be empty on the request.
          nullable: true
        BenefitMaxMetAmount:
          type: number
          description: Amount that would otherwise be covered but has been denied by the carrier due to a benefit maximum being met.
          format: double
        RbbExcessAmount:
          type: number
          description: 'If provided, this amount will be used as the participant''s Excess Amount responsibility'
          format: double
        NotCoveredAmount:
          type: number
          description: 'Amount denied as not covered by the insurance plan; typically, this amount will match the Billed Amount.'
          format: double
        AboveRcAmount:
          type: number
          description: The amount above the usual and customary rate.
          format: double
        DeductibleAmount:
          type: number
          description: 'If provided, this amount will be used as the participant''s deductible responsibility'
          format: double
        CoinsuranceAmount:
          type: number
          description: 'If provided, this amount will be used as the participant''s Coinsurance responsibility'
          format: double
        CoPayAmount:
          type: number
          description: 'If provided, this amount will be used as the participant''s Copay responsibility'
          format: double
        ExternalClaimNumber:
          type: string
          description: 'The external claim number is used to process claim reversals when using EDI. If a manual claim is received with an external claim number that matches another manual claim with the same external claim number, WCA will process a claim reversal. The reversal will either credit back the benefit account, or add to the balance due, depending upon if the original manual claim has been reimbursed in WCA. Note: Using external claim number to generate claim reversals will only work if the administrator is linked to the “auto claim reversal creation” feature on the admin options page within WCA.'
          nullable: true
        ClaimReceivedDate:
          type: string
          description: The date the claim was received by the carrier (not the date the claim is adjudicated)
          format: date-time
          nullable: true
        RecurrenceFrequency:
          type: integer
          description: 'Recurrence Frequency: None = 0, Daily = 1, Weekly = 2, BiMonthly = 4, Monthly = 8, Quarterly = 16, Yearly = 32, SemiMonthly = 64, BiWeekly = 128, Once = 256'
        RecurrenceStartDte:
          type: string
          description: 'If this is a recurring claim, this is the start date for the first recurrence of the claim. Required if Recurrence value is not set to 0 = None. Start Date must be greater than or equal to today''s date and cannot be more than 18 months in the future'
          format: date-time
        RecurrenceEndDte:
          type: string
          description: 'If this is a recurring claim, this is the end date for the recurrence. If specified, no claims will be created after this date. End Date must be greater than or equal to today''s date and cannot be more than 18 months after the Start Date.'
          format: date-time
        TotalNoOfPayments:
          type: integer
          description: 'If this is a recurring claim, this is the number of Payments to be made. For Weekly Recurring Frequency, Total Number of Payments cannot be more than 75. For Monthly Recurring Frequency, Total Number of Payments cannot be more than 18.'
          format: int32
        ScTierKey:
          type: integer
          description: The Service Category Tier that the claim should be processed with. The Service Category Tier must be setup within the Service Category for this field to successfully process. Must match a Service Category tier setup in the WealthCare Administration system for a claim to be successfully processed. This should not be sent if AccountTypeCde is used.
          format: int32
        AIReimbursementAnalysis:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1125.AIReimbursementAnalysis'
        ExtractionReferenceID:
          type: string
          description: This is a reference ID that is used to identify the file that was uploaded for this claim.
          nullable: true
      description: A Submit Manual Claim With Receipt Business Object with an Event Name field allowing the participant to submit a claim event
    BenSoft.Contracts.DataContracts._1125.AIReimbursementAnalysis:
      type: object
      properties:
        EligibleForReimbursement:
          type: boolean
          description: Indicates whether the claim is eligible for reimbursement based on AI analysis.
          nullable: true
        UserModified:
          type: boolean
          description: Indicates whether the claim was modified by the user after initial AI analysis.
          nullable: true
        ConfidenceScoreLimit:
          type: boolean
          description: Indicates whether the AI analysis confidence score is above the configured confidence threshold.
          nullable: true
      description: 'AI Eligibility Analysis for a claim, indicating whether or not the claim has been analyzed, if it is eligible for reimbursement, and if the user has modified the claim after AI analysis.'
    BenSoft.Contracts.DataContracts.TransactionActivity:
      type: object
      properties:
        DepositDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.DepositDetails'
        TaxYear:
          type: string
          description: Provides the tax year for non-HSA transactions that a reimbursement should be applied to. This feature is specific to the pre/post tax plan configuration options
        PreTaxAmt:
          type: number
          description: Amount that is considered pre-tax for the transaction based on pre/post tax business rules on the plan.
          format: double
        PostTaxAmt:
          type: number
          description: Portion of the transaction that should be added as taxable income on the employee’s W2. This amount is based on the plan setting in WCA.
          format: double
        ShowGreenColorFlag:
          type: boolean
          description: This field returns true (1) when RealTime Employer Funding is enabled. Otherwise returns false (0).
        ShowHoverHelpFlag:
          type: boolean
          description: This field returns true (1) when RealTime Employer Funding is enabled and transaction is not Posted. Otherwise returns false (0)
        BalanceDue:
          type: number
          description: 'When a participant’s debit card transaction is marked as ineligible, or if a reimbursement is issued which is later reversed, the ineligible or reversed amount is tracked as a ‘balance due’. This field returns that amount.'
          format: double
        FXClaimStatus:
          type: integer
          description: 'For an FX claim, this will be a number 1 through 9 representing the status of the claim. The FXClaimStatusDesc field will include the corresponding description. 1 = Paid 2 = Approved 3 = Applied to Deductible 4 = Denied 5 = Eligible for Reimbursement 6 = Reversed 8 = Overpaid 9 = Partially Approved'
          format: int32
        FXClaimStatusDesc:
          type: string
          description: 'For an FX claim, this will be a human friendly description of the claim status, correpsonding to the FXClaimStatus field. 1 = Paid 2 = Approved 3 = Applied to Deductible 4 = Denied 5 = Eligible for Reimbursement 6 = Reversed 8 = Overpaid 9 = Partially Approved'
        FXClaimReimbursedTotalAmt:
          type: number
          description: 'For an FX claim, this is the amount that has been reimbursed in total (to the participant or paid to the provider)'
          format: double
        FXClaimReimbursedToMemberTotalAmt:
          type: number
          description: 'For an FX claim, this is the amount that has already been reimbursed to the participant'
          format: double
        FXClaimRequestedTotalAmt:
          type: number
          description: 'For an FX claim, this is the total amount charged by the provider'
          format: double
        FXClaimDeductibleTotalAmt:
          type: number
          description: 'For an FX claim on a deductible account, this will be the transaction amount that will be used for deductible tracking. For FX claims on all other accounts, this will be the deductible amount of the transaction.'
          format: double
        AdjustedClaimLine:
          type: integer
          description: 'If this field is provided, then it is used to look up the prior claim on an adjustment transaction.  If the adjustment claim is received and the original claim line has not been reversed, then this claim is rejected as a duplicate. For example, you may reverse claim line 1 and then send an adjustment with claim line 2 and original claim line 1.'
          format: int32
        RenderingProvider:
          type: string
          description: The provider who provided the service to the participant (this may be different than the billing provider name). It is recommended to use this field as the Provider Name to display.
        RenderingProviderId:
          type: string
          description: Provider ID for the provider who performed the service for the participant.
        OutOfPocketAmt:
          type: number
          description: The amount the participant has paid towards this claim
          format: double
        PayProviderKey:
          type: integer
          description: 'Unique identifier key for the Provider, generated by WCA when the provider was first created in the system'
          format: int32
        ProviderId:
          type: string
          description: 'For Pay Provider HSA Transactions, this will be the an identier for the provider the payment was made to'
        ProviderName:
          type: string
          description: 'For Pay Provider HSA Transactions, this will be the name of the provider the payment was made to'
        MerchantName:
          type: string
          description: Name of merchant associated with transaction.
        TransactionEligibleAmt:
          type: number
          description: 'WealthCare Admin calculated as the Administrator submitted Approved Amount less the WealthCare Admin determined Excluded Amount, This value is the amount of the claim that is eligible for payment and shown on the Transaction History screen'
          format: double
        FirstName:
          type: string
          description: First name of Employee
        LastName:
          type: string
          description: Last name of Employee
        ExternalClaimID:
          type: string
          description: 'For an FX claim, this is the external identifier for the claim'
        ClaimLine:
          type: integer
          description: Number for the claim line being provided to distinguish distinct services that are submitted on the same claim
          format: int32
        OriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: An integer indicating the source of the transaction
        TransactioAdjudCde:
          enum:
            - Approved
            - Reversed
            - Ineligible
            - Pending
            - ResolvedEmployeePay
            - ResolvedPayrollDeduction
            - New
            - Denied
            - Unknown
            - ResolvedNoRefund
            - IneligiblePartiallyOffset
            - ResolvedOffsetbyManualClaim
            - InsufficientDocumentation
            - EnteredNotReviewed
            - ClaimReversal
            - Overpayment
            - OverpaymentPartiallyResolved
            - OverpaymentResolved
            - NonPost
            - Returned
            - Resubmitted
          type: string
          description: The adjudication status for the transaction
        TransactioAdjudDetailCde:
          type: string
          description: Description of transaction adjudication code
        TransactionCde:
          type: integer
          description: Code to identify the type of transaction.|11 = Purchase|12 = PreAuth|13 = ForcePost|14 = Refund|20 = EmployerDeposit|21 = PrefundedDeposit|22= AutoDeposit|23 = Adjustment|24 = Void|25 = PrefundedDepositReset|26 = BalanceSyncAdjustment|27 = IndividualAmt|28 = IndividualAmtReset|29 = HsaImported|30 = OtherDeposit|31 = RolloverDeposit|32 = FamilyRolloverDeposit|33 = FamilyOther Deposit
          format: int32
        TransactionDate:
          type: string
          description: Date when transaction was entered into WCA
          format: date-time
        TransactionType:
          type: string
          description: 'Indicates if the transaction is a deposit, other deposit, POS, or manual. It will always return a value in English regardless of the Accept-Language header.'
        TranslatedTransactionType:
          type: string
          description: 'This field is the translated version of the transaction type based on the selected language preference. If the TPA has the multilingual feature enabled and the request includes an Accept-Language header with es (Spanish) or fr (French), it will return the translated value in the preferred language. Otherwise it will return the English value for TransactionType.'
        Description:
          type: string
          description: The transaction description text to display to participants. For Claims - This will be Claim Description or Provider Name. For POS - this will be Merchant Name. For Product Partner Transactions - This will be the merchant name (check number will also be included if applicable).
        TransactionAmt:
          type: number
          description: Total amount of transaction
          format: double
        HSATransactionType:
          type: string
          description: 'Refers to how the transaction is reported to the IRS, such as a normal distribution, non-reportable, or normal contribution'
          nullable: true
        TransactionStatus:
          type: string
          description: 'Current status of the transaction. It will always return a value in English, regardless of the Accept-Language header. Valid values are |Approved|Ineligible|Pending|Resolved Employee Pay|Resolved Payroll Deduction|New|Denied|Unkown|Resolved No Refund|Ineligible Partially Offset|Resolved Offset by Manual Claim|Unauthorized Refund|Insufficient Documentation|Entered but not reviewed|Reversed|Claim Reversal|Overpayment|Overpayment partially resolved|Overpayment resolved|Non-post|Returned|Resubmitted'
        TranslatedTransactionStatus:
          type: string
          description: 'This field is the translated version of the transaction status based on the selected language preference. If the TPA has the multilingual feature enabled and the request includes an Accept-Language header with es (Spanish) or fr (French), it will return the translated value in the preferred language. Otherwise it will return the English value for TransactionStatus.'
        TxnStatusToolTipText:
          type: boolean
          description: 'Tool tip to display transaction status. This returns true for many unapproved transaction statuses, where the participant will likely need guidance on next steps.|1 – Display tool tip|0 – Don''t display tool tip'
        TransactionId:
          type: string
          description: 'A unique identifier the transaction, generated by WCA when the transaction was first inserted'
        SeqNumber:
          type: integer
          description: Unique number assigned to transactions in WCA
          format: int32
        SettlementDate:
          type: string
          description: Date when the transaction settlement occurred
        CanUploadReceipt:
          type: boolean
          description: 'Indicates whether a receipt can be uploaded.  This is derived from adjudication detail code.  A receipt is required when the adjudication detail code is in one of the following statuses: "AUP2", "AUP3", "AUP4", "AUP6", "AUP7", "AUP8", "AUP9", "AUPA", "AUPB", "AUPC", "AUPD", "AUPE", "AUPI", "AUPM", "AUPN", "AUPO", "AUPQ”|1 – Participant can upload a receipt|0 – Participant cannot upload a receipt'
          nullable: true
        HasReceipt:
          type: boolean
          description: Indicates whether the transaction has any receipts attached to it.|1= Yes|0 = No
        ReceiptExpired:
          type: boolean
          description: 'If a claim is submitted and not adjudicated for the 30 days, the receipt will be deleted by WCA.  This flag indicates if the receipt was deleted by WCA.|1 – the receipt has been deleted|0 – no receipt has been deleted'
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Collection of ReceiptInfo
        Claimant:
          type: string
          description: Employee/Dependent who claims the amount
        ServiceStartDate:
          type: string
          description: Start date of the service for which the transaction is for
          format: date-time
        AcctTypeCode:
          type: string
          description: 'The Account Type Code for the transaction, such as FSA, FS2, etc.'
        AcctTypeDesc:
          type: string
          description: The account type description for the benefit account the transaction is processed under. This will be custom plan description if this is configured.
        FlexAcctKey:
          type: integer
          description: 'Unique identifier for the flex account, generated by WCA when the account was created'
          format: int32
        DisplayName:
          type: string
          description: 'For transactions with an individual amount, this will be the cardholder name in the format of LastName, FirstName'
    BenSoft.Contracts.DataContracts.Transaction.DepositDetails:
      type: object
      properties:
        AppliedAmount:
          type: number
          description: For future use only.
          format: double
        ForfeitedAmount:
          type: number
          description: For future use only.
          format: double
    BenSoft.Contracts.DataContracts.UserInfo:
      type: object
      properties:
        UserId:
          type: string
          description: User Id
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmployeeId:
          type: string
          description: Employee Id
        ParticipantAccessRights:
          enum:
            - None
            - AllowParticipantClaimEntry
            - AllowParticipantReceiptUpload
            - AllowParticipantPayProvider
            - AllowParticipantEmailUpdates
            - AllowParticipantEmailAdmin
            - AllowParticipantAccessDependentInfo
            - AllowParticipantRequestNewCard
            - AllowParticipantUpdateDemoInfo
            - AllowParticipantUpdateDirectDepositInfo
            - AllowParticipantViewDirectDepositInfo
            - AllowParticipantClaimsCrossOver
            - AllowParticipantCommunicationSelection
            - AllowEmpeSelfCreation
            - AllowParticipantUpdateAutoReimbSettings
            - AllowParticipantAddDependent
            - AllowParticipantLinkDependentAccount
            - AllowParticipantCreateDependentCard
            - AllowParticipantRequireDependentDOBSSN
            - AllowParticipantCardReimbursement
            - IsEligibleEnroll
            - GetAcctClassification
            - GetInnoPartners
            - GetParticipantPortalAccessInfo
            - EmployerNoDebitCard
            - DirectDepositBankAccountValidation
            - AllowParticipantOnlineRepayment
            - AllowOfflineSAAuthenticationToken
            - AllowSAFeatureOnOff
            - AllowParticipantTransaction
          type: string
          description: accessattributes enumeration values is used to determine whether participant has access to particular feature / functionality / page.
        InnoPartnerIds:
          type: array
          items:
            type: string
          description: Display Innovation Partner details
        AcctTypeClasses:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountTypeClassInfo'
          description: 'Account Classification Information - Valid values are FSA, HRA, HSA, VEBA, Deductible, Transit, Parking and Other.'
        UserTypeCde:
          enum:
            - None
            - MBI
            - Tpa
            - Employer
            - Cardholder
            - MBISystem
            - DataPartner
            - SSO
            - PartnerUser
            - InnovationPartner
          type: string
          description: "Display User Type Code.Valid values are\r\nNone=0,\r\nMBI=1,\r\nTpa=2,\r\nEmployer=4,\r\nCardholder=8,\r\nMBISystem=16\r\nDataPartner=32,\r\nSSO=64,\r\nPartnerUser=128"
        AcctsWaitingAdditionalInformation:
          type: array
          items:
            type: string
          description: Returns Flex Account ID for the HSA account(s) in Awaiting Additional Information status
        ParticipantPortalAccessInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.ParticipantPortal'
        InvestmentSolutionStates:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.InvestmentSolutionState'
          description: Display list of InvestmentSolutionStates
        SmartAccountId:
          type: string
          description: Display SmartAccountId
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.InvestmentSolutionState:
      type: object
      properties:
        FlexAcctId:
          type: string
          description: ID of the Flex Account.
        InvestSolutionState:
          enum:
            - None
            - InactiveDevenir
            - InactiveDrive
            - ActiveDevenir
            - ActiveDrive
          type: string
          description: Investment Solution current State.
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationSendCodeRequest:
      required:
        - TpaId
        - EmployerId
        - EmployeeId
        - RequestFrom
      type: object
      properties:
        TpaId:
          maxLength: 6
          minLength: 0
          type: string
        EmployerId:
          maxLength: 18
          minLength: 0
          type: string
        EmployeeId:
          maxLength: 255
          minLength: 0
          type: string
        MobileNumber:
          maxLength: 30
          minLength: 0
          type: string
        Email:
          maxLength: 75
          minLength: 0
          type: string
        IPAddress:
          maxLength: 75
          minLength: 0
          type: string
        PortfolioId:
          maxLength: 75
          minLength: 0
          type: string
        HardwareId:
          maxLength: 75
          minLength: 0
          type: string
        RequestFrom:
          enum:
            - WCA
            - WCP
            - WCM
          type: string
    RegistrationValidateuserPost200ApplicationJsonResponse:
      type: boolean
    BenSoft.Contracts.DataContracts.Mobile.Business.Portal.ParticipantPortal:
      type: object
      properties:
        AccessMethod:
          enum:
            - None
            - Read
            - Insert
            - Update
            - Delete
          type: string
          description: "Display Access Permission.Valid Values are \r\nNone = 0,\r\nRead = 1,\r\nInsert = 2,\r\nUpdate = 4,\r\nDelete = 8"
        ContentType:
          enum:
            - None
            - ParticipantPortal
            - Announcements
            - FAQs
            - DownloadForms
          type: string
          description: "Display Participant Portal Content.Valid Values are \r\nNone = 0,\r\nParticipantPortal = 1,\r\nAnnouncements = 2,\r\nFAQs = 4,\r\nDownloadForms = 8"
      description: 'Enhancement for determining whether the user has access to brand and Update Content on a WCP, Edit/Add Announcements, Post Forms and Documents, and Edit FAQs'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountTypeClassInfo:
      type: object
      properties:
        Description:
          type: string
          description: 'Account type class information, valid values are FSA, HRA, HSA, VEBA, Deductible, Transit, Parking and Other.'
        HasType:
          type: boolean
          description: 'Determines specified account type class exists or not, value can be True or False.'
      description: Account Classification Information
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        FileKey:
          type: integer
          description: A system generated ID used to identify the receipt file.
          format: int32
        DocId:
          type: string
          description: A system generated ID created when a file is submitted through a document queue instead of by a participant.
        DocDisplayName:
          type: string
          description: Document Display Name
        OriginalFileName:
          type: string
          description: Original File Name
          nullable: true
        UploadDate:
          type: string
          description: The date the receipt file was uploaded.
          format: date-time
    BenSoft.Contracts.DataContracts._1018.ParticipantExpenses:
      type: object
      properties:
        participantExpenses:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1018.ParticipantExpenseDetail'
        labelAmounts:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.LabeledAmount'
      description: 'Contains the details of expenses incurred by the participant, including individual expense records and labeled amounts for categorization.'
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.LabeledAmount:
      type: object
      properties:
        Label:
          type: string
        Description:
          type: string
          description: Description related to the claim
        Amount:
          type: number
          format: double
    BenSoft.Contracts.DataContracts._0822.Transaction.DepositDetails:
      type: object
      properties:
        AppliedAmount:
          type: number
          description: For future use only.
          format: double
        ForfeitedAmount:
          type: number
          description: For future use only.
          format: double
      description: Deposit Details
    BenSoft-Contracts-DataContracts-Mobile-Business-Portal-AnnouncementArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement'
    BenSoft.Contracts.DataContracts.Mobile.Business.Portal.Announcement:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique id of the TPA
        InfoKey:
          type: integer
          description: Portal Info Key
          format: int32
        InfoName:
          type: string
          description: Portal Info Name
        InfoDesc:
          type: string
          description: Portal Info Description
        InfoDate:
          type: string
          description: Portal Info Date
          format: date-time
        ExpireDate:
          type: string
          description: Portal Info Expiration Date
          format: date-time
        LastUpdateDate:
          type: string
          description: Date in which Portal Info was last updated
          format: date-time
        EmployerIdList:
          type: array
          items:
            type: string
          description: List of Employer IDs
        VisibilityIsGlobal:
          type: boolean
          description: "Global Visibility.\r\nTrue = Visible to the participant.\r\nFalse = Not visible to the participant."
        VisibilityIsNone:
          type: boolean
          description: "No Visibility.\r\nTrue = Not visible to the participant.\r\nFalse = Visible to the participant."
      description: Represents an announcement that can be added to the portal for participant visibility.
    ServicesPortalinfoHaseditaccessGet200ApplicationJsonResponse:
      type: boolean
    ServicesPayproviderGetnewprovideridTpaIdGet200ApplicationJsonResponse:
      type: string
    ServicesPayproviderDeleteTpaIdDelete200ApplicationJsonResponse:
      type: boolean
    BenSoft.Contracts.DataContracts._0822.Transaction.ReimbursementInfo:
      type: object
      properties:
        CheckClearedDate:
          type: string
          description: Check Cleared Date
        PaymentId:
          type: string
          description: 'Represents the draft # issued by our Integrated Payment vendor.'
        PayoutMethod:
          type: string
          description: 'Represents the payment method used by the participant or our Integrated Payment vendor. Valid methods include Pending, Check, Direct Deposit, External Check, External Direct Deposit, Card, Payroll, ePay-ACH, ePay-Virtual Card, and ePay-eCheck.'
        Amount:
          type: number
          description: Amount of the reimbursement
          format: double
        Date:
          type: string
          description: Date the transaction was reimbursed
          format: date-time
        ClaimLineNumber:
          type: integer
          description: Claim Line Number for FX and TC claims
          format: int32
        PrevPaidAmount:
          type: number
          description: Previous Paid Amount – amount that was previously paid for this claim. This occurs when an account receives more funds or a claim is reprocessed to make additional payment
          format: double
        CheckNumber:
          type: string
          description: Check Number or Trace Number for ACH reimbursements
        Method:
          type: string
          description: 'Method of reimbursement. Valid values are None, Check, Direct Deposit, External Check, External Direct Deposit, Card, Payroll.'
        PaidTo:
          type: string
          description: Indicates who the reimbursement was paid to. Valid values are Provider and Member
        AccountType:
          type: string
          description: The type of the account
        Reversed:
          type: boolean
          description: Reversed 1=Yes 0=No
        ReversalDate:
          type: string
          description: 'If applicable, this is the date the reimbursement was reversed. Will be null if not populated.'
          format: date-time
        FlexAcctKey:
          type: integer
          description: A system generated unique identifer for the flex account
          format: int32
        Reimbursed:
          type: boolean
          description: Reimbursed 1=Yes 0=No
        CustomDescription:
          type: string
          description: Custom Plan Description
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DependentDetails:
      type: object
      properties:
        Prefix:
          type: string
          description: 'Title for Dependent, such as Mr., Mrs., Ms., Dr., or Rev'
        LastName:
          type: string
          description: Last name of Dependent.
        FirstName:
          type: string
          description: First name of Dependent.
        MiddleInitial:
          type: string
          description: Middle initial of Dependent.
        Phone:
          type: string
          description: 'Dependent’s Phone number, including area code.'
        AddressLine1:
          type: string
          description: First line of the Dependent’s mailing address.
        AddressLine2:
          type: string
          description: Second line of the Dependent’s mailing address.
        City:
          type: string
          description: City associated with the Dependent’s mailing address.
        State:
          type: string
          description: State associated with the Dependent’s mailing address.
        Zip:
          type: string
          description: Zip code associated with the Dependent’s mailing address.
        Country:
          type: string
          description: Country associated with the Dependent’s mailing address.
        DependentStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: "Activity status for the Dependent: 0 = All, 1 = New, 2 = Active,\r\n3 = TempInactive, 4 = PermInactive, 5 = Terminated,6 = Enrollment"
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
          description: "Gender of the Dependent :\r\n0 = None,                                                               \r\n1 = Male,\r\n2 = Female"
        ShippingAddressLine1:
          type: string
          description: First line of the Dependent’s shipping address.
        ShippingAddressLine2:
          type: string
          description: Second line of the Dependent’s shipping address.
        ShippingAddressCity:
          type: string
          description: City associated with a Dependent’s shipping address.
        ShippingAddressState:
          type: string
          description: State associated with a Dependent’s shipping address.
        ShippingAddressZip:
          type: string
          description: Zip code associated with a Dependent’s shipping address.
        ShippingAddressCountry:
          type: string
          description: Country associated with a Dependent’s shipping address.
        BirthDate:
          type: string
          description: Birth date of Dependent.
        CardDesignID:
          type: string
          description: "Card design associated with a Dependent:\r\n1 = Payment Card\r\n2 = Combo Card"
        CardNumber:
          type: string
          description: Benefits Card number of the Dependent.
        DependentID:
          type: string
          description: Unique identifier for the Dependent.
        DependentSSN:
          type: string
          description: Social Security Number of Dependent.
        EligibilityDate:
          type: string
          description: Date from when Dependent become eligible.
        EmployeeID:
          type: string
          description: Unique identifier for the Employee to which Dependent is added to.
        EmployeeSSN:
          type: string
          description: Social Security Number of Employee.
        FullTimeStudent:
          type: boolean
          description: "Indicated that the Dependent is a FullTimeStudent or Not.\r\n0 = No, this person is not full time student.\r\n1 = Yes, this person is full time student."
        HealthPlanID:
          type: string
          description: An assigned ID for the Dependent’s health plan.
        LastUpdated:
          type: string
          description: Last date the Dependent demographic data was modified.
          format: date-time
        PBMID:
          type: string
          description: An assigned ID for the Pharmacy Benefits Management (PBM) organization handling pharmaceutical benefits for Dependents.
        Relationship:
          enum:
            - Unknown
            - SpouseorCommonLawSpouse
            - Child
            - DomesticPartner
            - Other
          type: string
          description: "Indicated relation of Dependent to Employee.\r\n0 = Unknown,\r\n1 = SpouseorCommonLawSpouse,\r\n2 = Child,\r\n3 = DomesticPartner,\r\n4 = Other"
        TerminationDate:
          type: string
          description: Termination Date of Dependent.
        MedicareBeneficiary:
          enum:
            - None
            - PrimaryBeneficiary
            - SecondaryBeneficiary
          type: string
          description: Indicates Participant as a Medicare beneficiary.
        MedicareID:
          type: string
          description: This value is the active covered individual’s/beneficiary’s health insurance claim number.
        PersonCode:
          type: string
          description: "This code is used to identify specific individuals on a policy for Medicare Reporting.\r\nThe values are established by the insurer. May also be known as a Dependent Code."
        EndStageRenalDisease:
          type: boolean
          description: "Indicates whether the Dependent has ESRD for Medicare Reporting.\r\n0 = No, this person does not have ESRD.\r\n1 = Yes, this person has ESRD."
        TpaId:
          type: string
          description: Unique identifier assigned by WealthCare Admin.
        EmprId:
          type: string
          description: Unique identifier for the Employer.
        IssueDependentCard:
          type: boolean
          description: "Indicated that the Dependent is issued with a Card other than Employee one.\r\n0 = No, this person not issued with a card.\r\n1 =  Yes, this person is issued with card."
        FlexAcctIds:
          type: array
          items:
            type: string
          description: Unique Id to account associated with Dependents.
    BenSoft.Contracts.DataContracts._1018.ParticipantExpenseDetail:
      type: object
      properties:
        ClaimKey:
          type: integer
          description: 'A unique identifier key for the claim, generated by WCA when the claim was created'
          format: int32
        TxnKey:
          type: string
          description: Unique identifier key for the Transaction
        SetlDte:
          type: string
          description: Date the Transaction was finalized in WCA- Settlement Date
        ETxnSeqNum:
          type: integer
          description: 'Sequence Number of the FX, TC or “save expense for later” Expense'
          format: int32
        OffsetAmt:
          type: number
          description: Amount of the claim line that was eligible for reimbursement but offset or reduced the balance due on one or more claims
          format: double
        AppliedToDeductible:
          type: number
          description: 'For TC and FX claims, this is the amount that was applied to Deductible Manager or the amount applied to the DTR.'
          format: double
        ExpenseStatus:
          type: string
          description: Status for the FX or TC Claim line.
        CarrierId:
          type: string
          description: 'On an FX or TC claim, a unique identifier for the Carrier, as submitted on the FX or TC claim'
        ClaimId:
          type: string
          description: 'On an FX claim, a unique identifier for the claim, as submitted on the FX record'
        ClaimLineNum:
          type: integer
          description: The claim line number submitted with the claim by the insurance carrier.
          format: int32
        ClaimTypeCde:
          enum:
            - None
            - Pharmacy
            - Medical
            - Dental
            - Vision
            - OTC
          type: string
          description: 'Unique identifier for type of Claims : None = 0, Pharmacy = 1, Medical = 2,Dental = 4, Vision = 8, OTC = 16'
        BenefitMaxMetAmount:
          type: number
          description: 'On an FX or TC, this is the amount that is being denied by the insurance company due to the benefit being maxed out in number of visits or limit (such as a limit of 20 Physical Therapy visits per year). WCA can be configured to reimburse this amount since it would otherwise be covered by insurance were it not for the limit.'
          format: double
        RbbExcessAmount:
          type: number
          description: The amount the insurance carrier deemed as “Excess Amount” by insurance. It can be used in adjudication as a participant reimbursable liability amount.
          format: double
        NotCoveredAmount:
          type: number
          description: The amount the insurance carrier deemed as “not covered” by insurance. It can be used in adjudication as a participant reimbursable liability amount.
          format: double
        AboveRcAmount:
          type: number
          description: 'On an FX or TC claim or a participant “save expense” for later, this is the amount above the usual and customary rate – for an out of network claim, it’s the amount the provider billed minus the insurance allowed amount. WCA can be configured to reimburse this amount by service category tier.'
          format: double
        RenderingProvider:
          type: string
          description: The provider who provided the service to the participant (this may be different than the billing provider name). It is recommended to use this field as the Provider Name to display.
        BillingProviderTaxId:
          type: string
          description: 'On a TC claim, a unique identifier for the Billing Provider, as submitted on the TC claim'
        ServiceCategoryTierId:
          type: string
          description: The Service Categoriy Tier associated with the claim line.
        DependentId:
          type: string
          description: 'When the activity is for a dependent, this will be populated with an identifier for the dependent, as submitted on the TC or FX claim'
        ServiceCategoryCode:
          type: string
          description: The Serive Category Code associated with the claim line
        TotalPatientRespAmt:
          type: number
          description: 'Total of all the participant liability amount fields for the claim line Deductible, Coinsurance, Copay, Not Covered Amount, Benefit Max Met, Amount RBB Excess Amount'
          format: double
        RenderingProviderId:
          type: string
          description: Provider ID for the provider who performed the service for the participant.
        FirstName:
          type: string
          description: First Name of participant associated with the expense
        LastName:
          type: string
          description: Last Name of participant associated with the transaction
        PayProviderKey:
          type: integer
          description: 'Unique identifier key for the Provider, generated by WCA when the provider was first created in the system'
          format: int32
        ProviderAddress1:
          type: string
          description: Address line 1 associated with the provider’s mailing address
        ProviderAddress2:
          type: string
          description: Address line 2 associated with the provider’s mailing address
        ProviderCity:
          type: string
          description: City associated with the provider’s mailing address
        ProviderState:
          type: string
          description: State associated with the provider’s mailing address
        ProviderCountryCde:
          type: string
          description: Country Code associated with the provider’s mailing address
        ProviderZip:
          type: string
          description: Zip Code associated with the provider’s mailing address
        ProviderPhone:
          type: string
          description: Phone associated with the provider’s mailing address
        ProviderId:
          type: string
          description: 'Identifier for the Provider, as entered into WCA when the provider was created'
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        ExpenseKey:
          type: integer
          description: 'Unique WCA generated identifier key for the FX, TC or “save expense for later” Expense'
          format: int64
        EmpeKey:
          type: integer
          description: 'Unique identifier key for Employee, generated by WCA when the employee was created in the system'
          format: int32
        DepKey:
          type: integer
          description: 'When the activity is for a dependent, this will be populated with a unique identifier for the dependent generated by WCA when the dependent was first entered into the system. This will be null if the activity was not linked to a dependent.'
          format: int32
        ServiceStartDte:
          type: string
          description: Beginning date of service for the claim line received by the participant.
          format: date-time
        ServiceEndDte:
          type: string
          description: Ending date of the service for the claim line provided to the participant
          format: date-time
        ProviderName:
          type: string
          description: Name of the Provider
        DescOfService:
          type: string
          description: 'For a TC claim, this will be the description of service as submitted on the TC claim.'
        BilledAmt:
          type: number
          description: See prior definition in the Employee Activity section. This is the billed amount specific to the claim line.
          format: double
        InsAmtAllowed:
          type: number
          description: 'The amount the insurance carrier deemed eligible for the claim line service. It is not used in adjudication; only the participant’s responsibility fields are used in adjudication (Deductible, Coinsurance, Copay, etc.)'
          format: double
        InsAmtPaid:
          type: number
          description: 'The amount the insurance carrier paid for the claim line service. It is not used in adjudication as this amount has already been paid to the provider; only the participant’s responsibility fields are used in adjudication (Deductible, Coinsurance, Copay, etc.)'
          format: double
        EmpePaidAmt:
          type: number
          description: Employee Out-of-Pocket Paid Amount. The amount the participant has indicated as paid by other means and they are not seeking reimbursement for the amount. This amount reduces the remaining participant responsibility.
          format: double
        Notes:
          type: string
          description: Notes entered by user related to the transaction
        FileKey:
          type: integer
          description: 'Unique identifier key for document attached to this claim line, generated by WCA when the document was first submitted'
          format: int32
        eClaimOptions:
          type: integer
          description: Indicates whether this claim is a save expense for later submitted by the participant or a TC claim. 1 = participant submitted expense for later 0 = TC claim
          format: int64
        DeductibleAmt:
          type: number
          description: 'The deductible amount as adjudicated by the insurance carrier on the FX or TC claim submitted to WCA. Note: WCA can be configured to reimburse this amount by service category code or not.'
          format: double
        CoinsAmt:
          type: number
          description: 'The coinsurance amount as adjudicated by the insurance carrier on the FX or TC claim submitted to WCA. Note: WCA can be configured to reimburse this amount by service category code or not.'
          format: double
        CoPayAmt:
          type: number
          description: 'The copay amount as adjudicated by the insurance carrier on the FX or TC claim submitted to WCA. Note: WCA can be configured to reimburse this amount by service category code or not.'
          format: double
        TotalReimbAmt:
          type: number
          description: Total Amount of transaction which got reimbursed
          format: double
        OriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: 'Origin Code indicates which way claims initiated : None = 0,POSCardSwipe = 1,POSKeyedIn = 2,POSPhonedIn = 3,POSMbiSubmitted = 4,ManualScreen = 50,ManualEFT = 51, ManualAgent = 52, ParticipantManualScreen = 53,ParticipantMobileScreen = 54, HZDirect = 55, eClaimManagerManual = 56, eClaimManagerTPS = 57, WebServiceClaim = 58'
        eClaimUIStatus:
          enum:
            - None
            - New
            - Matched
            - Reimbursed
            - NotAllowParticipantClaimEntry
            - MissParticipantClaimEntryUITemplate
            - In_Process
            - Fully_Paid
          type: string
          description: 'Current status of the eClaim : None = 0,  New = 1, (New claim posted to portal but not yet submitted for reimbursement) Matched = 2 (Matched to card transaction) Reimbursed = 3, (Claim was approved but not in full) Not Allow Participant Claim Entry = 4  (Participant claim entry is not allowed.  Note: in WCA, WCP, and WCM, an eclaim with this status will display as “not eligible for reimbursement”). Miss Participant Claim Entry UI Template = 5 (Claim can not be submitted as there is no claim entry template in WCA) In_Process = 6 (Claim has been submitted for adjudication, but has not yet been adjudicated) Fully_Paid = 7 (claim is fully approved)'
    BenSoft.Contracts.DataContracts._1020.Transaction.CardTransactionDetails:
      type: object
      properties:
        CustomDescription:
          type: string
          description: Custom Plan Description
        AccountTypeCode:
          type: string
          description: Account Type Code
        MerchantName:
          type: string
          description: Merchant Name
        MerchantType:
          type: string
          description: Merchant Type Code
        ApprovedAmount:
          type: number
          description: Approved Amount
          format: double
        IneligibleAmount:
          type: number
          description: Ineligible Amount
          format: double
        IneligibleReason:
          type: string
          description: Ineligible Reason
        PostedAmount:
          type: number
          description: Posted Amount
          format: double
        BalanceDueAmount:
          type: number
          description: Balance Due Amount
          format: double
        DenialReason:
          type: string
          description: Denial Reason
    BenSoft.Contracts.DataContracts.Transaction.ClaimAdjudicationDetails:
      type: object
      properties:
        PendedAmount:
          type: number
          description: Pended Amount
          format: double
        DeniedAmount:
          type: number
          description: Denied Amount
          format: double
        ExcludedAmount:
          type: number
          description: Excluded Amount
          format: double
        EligibleAmount:
          type: number
          description: Eligible Amount
          format: double
        DeductibleAmount:
          type: number
          description: Deductible Amount
          format: double
        OffsetAmount:
          type: number
          description: Offset Amount
          format: double
        OnHoldAmount:
          type: number
          description: On Hold Amount
          format: double
        LowFundsAmount:
          type: number
          description: Low Funds Amount
          format: double
        ApprovedAmount:
          type: number
          description: Approved Amount
          format: double
      description: Claim Adjudication Details
    BenSoft.Contracts.DataContracts._1019.ParticipantThresholdInfo:
      type: object
      properties:
        TpaId:
          type: string
          description: 'A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created. '
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When an employer is created, WealthCare Admin assigns the 3-character prefix; you assign the remaining characters.'
        ParticipantId:
          type: string
          description: Employee ID for the participant
        BalanceDue:
          type: number
          description: 'When a participant’s debit card transaction is marked as ineligible, or if a reimbursement is issued which is later reversed, the ineligible or reversed amount is tracked as a ‘balance due’. This field returns that amount.'
          format: double
        ThresholdAmt:
          type: number
          description: 'Card access is suspended for this plan for participants who maintain a balance due above the specified threshold, until it is repaid.'
          format: double
      description: Data Contract for Participant Threshold Info
    ServicesEmployerEmployertransactionGetemployertransactionsTpaIdEmployerIdGet:
      type: array
      items:
        type: array
        items:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerTxn'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerTxn:
      type: object
      properties:
        TpaId:
          type: string
        SetlDte:
          type: string
        TxnKey:
          type: string
        EtxnSeqNum:
          type: integer
          format: int32
        EmprFlexAcctKey:
          type: integer
          format: int32
        EmprId:
          type: string
        TxnAmt:
          type: number
          format: double
        TxnAmtDenied:
          type: number
          format: double
        TxnAmtOrig:
          type: number
          format: double
        EmprAvailBal:
          type: number
          format: double
        EmprOrigAvailBal:
          type: number
          format: double
        SeqNum:
          type: string
        TxnDte:
          type: string
          format: date-time
        TxnCde:
          type: integer
          format: int32
        TranDesc:
          type: string
        TxnAdjudCde:
          type: integer
          format: int32
        SetlSeqNum:
          type: integer
          format: int32
        OriginCde:
          type: integer
          format: int32
        ErrorCde:
          type: integer
          format: int32
        MsgTypeCde:
          type: integer
          format: int32
        SettledCde:
          type: boolean
        ApprovalCde:
          type: string
        DataPartnerBankAcctKey:
          type: integer
          format: int32
        DataPartnerId:
          type: string
        Notes:
          type: string
        AcctTypeCde:
          type: string
        ReversalRsnCde:
          type: integer
          format: int32
        PostingDte:
          type: string
        MerchName:
          type: string
        ServiceStartDte:
          type: string
          format: date-time
        InsertDte:
          type: string
          format: date-time
        InsertUserIdKey:
          type: integer
          format: int32
        UpdateDte:
          type: string
          format: date-time
        UpdateUserIdKey:
          type: integer
          format: int32
        CheckNumber:
          type: integer
          format: int32
        HoldAmt:
          type: number
          format: double
    ServicesEnrollmentWaiveTpaIdEmployerIdParticipantIdPlanKeyPost200Application:
      type: boolean
    ServicesInnopartnerInnoassociationsTpaIdEmployerIdParticipantIdGet200Applica:
      type: array
      items:
        type: integer
        format: int32
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest:
      type: object
      properties:
        requestId:
          type: string
          description: The Id of request submitted
        services:
          type: array
          items:
            type: string
          description: Array of services that are being requested for the account
        correlationId:
          type: string
          description: Value linking pre-digitization messages generated during provisioning
        tokenRequestorId:
          type: string
          description: The party that requested the digitization
        walletId:
          type: string
          description: The identifier of the Wallet Provider who requested the digitization
        paymentAppInstanceId:
          type: string
          description: The identifier of the Payment App instance within a device that will be provisioned with a token
        accountIdHash:
          type: string
          description: "SHA-256 hash of the Account holder's account ID with the Payment App Provider. \r\nTypically expected to be an email address"
        mobileNumberSuffix:
          type: string
          description: The last few digits (typically four) of the device's mobile phone number
        deviceInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_DeviceInfo'
        walletProviderDecisioningInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_WalletProviderDecisioningInfo'
        activeTokenCount:
          type: string
          description: ''
        tokenType:
          type: string
          description: "The type of token requested for this digitization. Valid values are \r\nEMBEDDED_SE = Embedded Secure Element | CLOUD = Mastercard Cloud-Based Payments | STATIC = Static token"
        internalAccountNumber:
          type: string
        fundingAccountInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_FundingAccountInfo'
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCDeliverActivationCodeResponse:
      type: object
      properties:
        responseId:
          type: string
          description: The id of the response returned
        errorCode:
          type: string
          description: Error code for the reason the operation failed
        errorDescription:
          type: string
          description: Error description of the reason the operation failed
      description: Represents the response returned after attempting to deliver an activation code.
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCValidateActivationCodeRequest:
      type: object
      properties:
        requestId:
          type: string
          description: The Id of request submitted
        tokenUniqueReference:
          type: string
          description: A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime
        correlationId:
          type: string
          description: Value linking pre-digitization messages generated during provisioning
        activationCode:
          type: string
          description: The Activation Code to be distributed for the digitization. (This will be blank)
      description: Represents a request to validate an activation code for MasterCard digitization.
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCValidateActivationCodeResponse:
      type: object
      properties:
        result:
          type: string
          description: "Whether the activation request was successful. Success will result in MDES attempting to complete the provisioning process. \r\nMDES will notify the Token Requestor when the Token is ready to transact. Must be one of\r\nSUCCESS = Activation was successful\r\nINCORRECT_CODE = Activation Code was incorrect and rejected. Retries permitted\r\nINCORRECT_CODE_RETRIES_EXCEEDED = Activation Code was incorrect and the maximum number of retries now exceeded\r\nEXPIRED_CODE = Activation Code has expired or was invalidated"
        responseId:
          type: string
          description: The id of the response returned
        errorCode:
          type: string
          description: Error code for the reason the operation failed
        errorDescription:
          type: string
          description: Error description of the reason the operation failed
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.DeviceInfo:
      type: object
      properties:
        deviceName:
          type: string
        serialNumber:
          type: string
        formFactor:
          type: string
        isoDeviceType:
          type: string
        osName:
          type: string
        osVersion:
          type: string
        imei:
          type: string
        msisdn:
          type: string
        paymentTypes:
          type: array
          items:
            type: string
        storageTechnology:
          type: string
        cardCaptureTechnology:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCNotifyServiceActivatedRequest:
      type: object
      properties:
        requestId:
          type: string
          description: The id of the request submitted
        services:
          type: array
          items:
            type: string
          description: "Array of services that are being requested for the account Must be one of\r\nDIGITIZATION = Provision the Funding Account to a device"
        fundingAccountInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.FundingAccountInfo'
        deviceInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.DeviceInfo'
        correlationId:
          type: string
          description: Value linking pre-digitization messages generated during provisioning
        tokenRequestorId:
          type: string
          description: The party that requested the digitization
        walletId:
          type: string
          description: "The identifier of the Wallet Provider who requested the digitization. \r\nOnly present when the token is provided to a Wallet Provider"
        paymentAppInstanceId:
          type: string
          description: "The identifier of the Payment App instance within a device that will be provisioned with a token. \r\nOnly present when supplied by a Wallet Provider"
        tokenType:
          type: string
          description: "The type of token requested for this digitization. Valid values are\r\nMBEDDED_SE = Embedded Secure Element \r\nCLOUD = Mastercard Cloud-Based Payments \r\nSTATIC = Static token"
        secureElementId:
          type: string
          description: "The identifier of the Secure Element to be provisioned with the token. \r\nPresent only when the token is provisioned to a Secure Element and when provided by the Wallet Provider"
        accountPanSuffix:
          type: string
          description: The last few digits (typically four) of the Account PAN being digitized
        serviceRequestDateTime:
          type: string
          description: "The date and time the service for the PAN was requested. \r\nExpressed in ISO 8601 extended format as one of the following - YYYY-MM-DDThh:mm:ss[ .sss ]Z, YYYY-MM-DDThh:mm:ss[ .sss ]±hh:mm . \r\nWhere [ .sss ] is optional and can be 1 to 3 digits."
        termsAndConditionsAssetId:
          type: string
          description: The Terms and Conditions as presented to and accepted by the Account holder
        termsAndConditionsAcceptedTimestamp:
          type: string
          description: "The date and time the Terms and Conditions were accepted by the Account holder. \r\nExpressed in ISO 8601 extended format as one of the following - YYYY-MM-DDThh:mm:ss[ .sss ]Z, YYYY-MM-DDThh:mm:ss[ .sss ]±hh:mm . \r\nWhere [ .sss ] is optional and can be 1 to 3 digits"
        productConfigurationId:
          type: string
          description: Freeform identifier for the product configuration as assigned by the Issuer
        consumerLanguage:
          type: string
          description: Language preference selected by the consumer. Formatted as an ISO-639-1 two-letter language code.
        decision:
          type: string
          description: "The authorization decision for the service request. Must be one of - \r\nAPPROVED = Service request was approved, \r\nREQUIRE_ADDITIONAL_AUTHENTICATION = Service request requires additional authentication to be approved. One or more Activation Methods will be provided"
        decisionMadeBy:
          type: string
          description: "The process that determined the final authorization decision for the request. Must be one of - \r\nELIGIBILITY_REQUEST = The decision was made by the eligibility request to the Issuer, \r\nAUTHORIZATION_REQUEST = The decision was made by the authorization request to the Issuer, \r\nRULES = The decision was made by the rule engine."
        tokenActivatedDateTime:
          type: string
          description: "Expressed in ISO 8601 extended format as one of the following - YYYY-MM-DDThh:mm:ss[ .sss ]Z, YYYY-MM-DDThh:mm:ss[ .sss ]±hh:mm, \r\nWhere [ .sss ] is optional and can be 1 to 3 digits."
        numberOfActivationAttempts:
          type: integer
          description: The number of times an Activation Code was received to activate the token.
          format: int32
        numberOfActiveTokens:
          type: integer
          description: "The number of active tokens for the Funding Account. Valid values are 0 to 99. A value of 99 means there are 99 or more active tokens. \r\nTokens that have been deleted from the wallet are excluded from the count."
          format: int32
        tokenAssuranceLevel:
          type: integer
          description: The assurance level assigned to the token.
          format: int32
      description: MasterCard Notify service activated request
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.FundingAccountInfo:
      type: object
      properties:
        panUniqueReference:
          type: string
        tokenUniqueReference:
          type: string
        encryptedPayload:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.EncryptedPayload'
      description: Account dunding information
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.EncryptedPayload:
      type: object
      properties:
        encryptedData:
          type: string
        publicKeyFingerprint:
          type: string
        encryptedKey:
          type: string
        oaepHashingAlgorithm:
          type: string
        iv:
          type: string
      description: Encrypted Payload
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.Beneficiaries:
      type: object
      properties:
        TpaId:
          type: string
        FlexAcctId:
          type: string
        BeneficiaryList:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.BeneficiaryInfo'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.BeneficiaryInfo:
      type: object
      properties:
        BeneficiaryTypeCde:
          enum:
            - None
            - Primary
            - Contigent
          type: string
        BeneficiaryNumber:
          type: integer
          format: int32
        BeneficiaryName:
          type: string
        Addr1:
          type: string
        Addr2:
          type: string
        City:
          type: string
        State:
          type: string
        Zip:
          type: string
        BeneficiarySsn:
          type: string
        ApplicantRelation:
          type: string
        Percentage:
          type: integer
          format: int32
        BirthDte:
          type: string
    BenSoft-Contracts-DataContracts-_0717-FlexAccountCoveragePeriodArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.FlexAccountCoveragePeriod'
    BenSoft.Contracts.DataContracts._0717.FlexAccountCoveragePeriod:
      type: object
      properties:
        AcctHolderTypeCde:
          type: integer
          description: 'Indicates employee vs dependent on the coverage period: 0 = employee, 2 = dependent'
        AcctHolderId:
          type: string
          description: The Dependent ID for any coverage periods returned for a dependent. Blank for coverage periods associated with an employee.
          nullable: true
        AcctKey:
          type: integer
          description: A unique identifier representing the flex account that was created by WCA when the account was first inserted. Commonly referred to as FlexAcctKey on other services.
          format: int32
        Coveragekey:
          type: integer
          description: 'A unique identifier for the coverage period, which is generated by WCA when the coverage period was created.'
          format: int32
        FirstName:
          type: string
          description: 'The First Name of the dependent, for any coverage periods returned for that dependent. Blank for coverage periods associated with an employee.'
          nullable: true
        LastName:
          type: string
          description: 'The Last Name of the dependent, for any coverage periods returned for that dependent. Blank for coverage periods associated with an employee.'
          nullable: true
        CoveragePeriodStartDate:
          type: string
          description: The coverage period's start date
          format: date-time
        CoveragePeriodEndDate:
          type: string
          description: The coverage period's end date
          format: date-time
        LifeEventType:
          type: string
          description: The Life Event Code and Life Event Description associated with the Coverage Period. Format is returned as "XXXX - YYYY…" where XXXX is the Life Event Code and YYYY is the Life Event Description.  Ex. "0001 - Marital Status - Marriage"
        AnnualElection:
          type: number
          description: The Annual Election amount for the coverage period.
          format: double
        IndividualAmt:
          type: number
          description: 'The individual spending limit for the dependent, for any coverage periods returned for that dependent. 0.00 is returned for coverage periods associated with an employee.'
          format: double
        DisbYTD:
          type: number
          description: Disbursed YTD amount for the coverage period.
          format: double
        AvailBal:
          type: number
          description: The Available Balance amount for the coverage period.
          format: double
        PreauthBal:
          type: number
          description: The Pre-auth Hold amount for the coverage period.
          format: double
        DisbBal:
          type: number
          description: Disbursable Balance amount for the coverage period.
          format: double
        SuspendActivity:
          type: boolean
          description: 'Indicates whether the the Suspend Activity flag is set on the Coverage Period: False = disabled, True = enabled'
        RecordType:
          type: string
          description: 'The Cover Period Record Type. Family is returned for Coverage Periods associated with Employees, and Individual is returned for Coverage Periods associated with Dependents.'
    ServicesParticipantCardsPinTpaIdEmployerIdParticipantIdGet200ApplicationJson:
      type: object
      description: 'If 0 is sent for asText on request, this will be the input stream for the image. If 1 is sent for asText on request, this will be the 4-digit PIN.'
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-PendingReimbursemen:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.PendingReimbursementSummary'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.PendingReimbursementSummary:
      type: object
      properties:
        TpaId:
          type: string
          description: Number assigned by Alegeus Healthcare Payment Solutions to you
        EmprId:
          type: string
          description: Unique identifier for the employer with whom the account number for this transaction is associated
        EmpeKey:
          type: integer
          description: Unique identifier for the employee associated with this transaction
          format: int32
        ServiceStartDate:
          type: string
          description: Service Start Date
          format: date-time
        ReimburseMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
          description: Reimbursement Method attached to the manual claim
        TransactionAmount:
          type: number
          description: Amount of this transaction
          format: double
        TransactionAmountOriginal:
          type: number
          description: Total amount of this transaction
          format: double
        MerchantName:
          type: string
          description: 'Name assigned to the Merchant ID, which appears on the transaction'
        TransactionNotes:
          type: string
          description: Transaction Notes
        EmployeeFirstName:
          type: string
          description: Employee First Name
        EmployeeMiddleInitial:
          type: string
          description: Employee Middile Initial
        EmployeeLastName:
          type: string
          description: Employee Last Name
        CardHolderFirstName:
          type: string
          description: Card Holder First Name
        CardHolderMiddleInitial:
          type: string
          description: Card Holder Middle Initial
        CardHolderLastName:
          type: string
          description: Card Hold Last Name
        NextRunDate:
          type: string
          description: Reimbursement Next Run Date
          format: date-time
        AccountType:
          type: string
          description: 'Code for benefit plan, such as FSA or DCA'
        PlanStartDate:
          type: string
          description: Plan start date as shown on the Benefit Account page under the Employee tab in WealthCare Admin
          format: date-time
        PlanEndDate:
          type: string
          description: Plan end date as shown on the Benefit Account
          format: date-time
        CustomPlanDescritpion:
          type: string
          description: Custom Plan Description
        TransactionKey:
          type: string
          description: Transaction Key
        TransactionSettleDte:
          type: string
          description: Date transaction was settled in WealthCare Admin
        TransactionSequenceNumber:
          type: integer
          description: 'For Card transactions, this field contains the transaction sequence number received from the Card terminal. For transactions you perform through the WealthCare Admin UI, this field contains the sequence number WealthCare Admin assigns'
          format: int32
        TransactionOptions:
          type: integer
          description: Transaction Options
          format: int64
    BenSoft.Contracts.DataContracts._0222.Transaction.HSATransactionDetail:
      type: object
      properties:
        HSAProcessingStatus:
          type: string
          description: Displays Processing / Posted status.
        CanUploadReceipt:
          type: boolean
          description: Indicates whether a transaction requires receipt.
          nullable: true
        DisplayName:
          type: string
          description: Name associated with Cardholder.
        HSATransactionType:
          type: string
          description: Refers to transaction type associated with HSA account transactions.
          nullable: true
        MerchantName:
          type: string
          description: Name of merchant associated with Transaction.
        OriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: Number field Explains orgin of transaction.
        ShowGreenColorFlag:
          type: boolean
          description: This field returns true when RealTime Employer Funding is enabled. Otherwise returns false.
        ShowHoverHelpFlag:
          type: boolean
          description: This field returns true when RealTime Employer Funding is enabled and transaction is not Posted. Otherwise returns false.
        TransactionAdjudCde:
          enum:
            - Approved
            - Reversed
            - Ineligible
            - Pending
            - ResolvedEmployeePay
            - ResolvedPayrollDeduction
            - New
            - Denied
            - Unknown
            - ResolvedNoRefund
            - IneligiblePartiallyOffset
            - ResolvedOffsetbyManualClaim
            - InsufficientDocumentation
            - EnteredNotReviewed
            - ClaimReversal
            - Overpayment
            - OverpaymentPartiallyResolved
            - OverpaymentResolved
            - NonPost
            - Returned
            - Resubmitted
          type: string
          description: Refers to status code associated with each HSA transaction.
        TransactionAdjudDetailCde:
          type: string
          description: Refers to adjudicated details code associated with each transaction.
        TransactionCde:
          type: integer
          description: Code to identify the nature/type of transaction.
          format: int32
        TransactionEligibleAmt:
          type: number
          description: Amount eligible for transaction.
          format: double
        TransactionType:
          type: string
          description: Text field display type of transaction to Participants.
      description: "HSA Transaction Detail\r\n<author>Bobson Samuel</author><date>Nov 30, 2021</date><version>WC 22.02.00</version>"
    BenSoft-Contracts-DataContracts-Mobile-Business-Portal-VisibleToEmployerArra:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.VisibleToEmployer'
    BenSoft.Contracts.DataContracts.Mobile.Business.Portal.VisibleToEmployer:
      type: object
      properties:
        Name:
          type: string
          description: The employer name of employer who have portal visibility.
        EmployerId:
          type: string
          description: The employer id of employer who have portal visibility.
      description: Data Contract for Portal Information Service
    BenSoft.Contracts.DataContracts._1016.ParticipantExpenseDetail:
      type: object
      properties:
        CarrierId:
          type: string
          description: Unique identifier for the Carrier
        ClaimId:
          type: string
          description: Unique identifier of the Claims
        ClaimLineNum:
          type: integer
          description: Refers to claim when multiple claim submitted
          format: int32
        ClaimTypeCde:
          enum:
            - None
            - Pharmacy
            - Medical
            - Dental
            - Vision
            - OTC
          type: string
          description: "Unique identifier for type of Claims : None = 0, Pharmacy = 1, Medical = 2,\r\nDental = 4, Vision = 8, OTC = 16"
        BenefitMaxMetAmount:
          type: number
          description: Amount for a benefit maximum being met
          format: double
        RbbExcessAmount:
          type: number
          description: Amount is used as the participant's excess amount responsibility Amount denied as not covered by the insurance plan
          format: double
        NotCoveredAmount:
          type: number
          description: Amount  which was not covered by the Participant associated with Employee
          format: double
        AboveRcAmount:
          type: number
          description: Amount which is above the usual and customary rate
          format: double
        RenderingProvider:
          type: string
          description: Providing the service of the participant's Employee
        BillingProviderTaxId:
          type: string
          description: Unique identifier for the Billing Provider
        ServiceCategoryTierId:
          type: string
          description: Unique identifier for the Service Categories Tier
        DependentId:
          type: string
          description: Unique identifier for the Dependent
        ServiceCategoryCode:
          type: string
          description: Unique identifier for the Service Categories
        TotalPatientRespAmt:
          type: number
          description: Total amount will be Paid as the participant's responsibility
          format: double
        RenderingProviderId:
          type: string
          description: Unique identifier for the Rendering Provider
        FirstName:
          type: string
          description: First Name of Participant associated with Employee
        LastName:
          type: string
          description: Last Name of Participant associated with Employee
        PayProviderKey:
          type: integer
          description: Unique identifier key for the Provider
          format: int32
        ProviderAddress1:
          type: string
          description: Address line 1 associated with the provider’s mailing address
        ProviderAddress2:
          type: string
          description: Address line 2 associated with the provider’s mailing address
        ProviderCity:
          type: string
          description: City associated with the provider’s mailing address
        ProviderState:
          type: string
          description: State associated with the provider’s mailing address
        ProviderCountryCde:
          type: string
          description: Country Code associated with the provider’s mailing address
        ProviderZip:
          type: string
          description: Zip Code associated with the provider’s mailing address
        ProviderPhone:
          type: string
          description: Phone associated with the provider’s mailing address
        ProviderId:
          type: string
          description: Unique identifier for the Provider
        TpaId:
          type: string
          description: Unique identifier that WealthCare Admin assigns to Employee
        ExpenseKey:
          type: integer
          description: Unique identifier key for Expense
          format: int64
        EmpeKey:
          type: integer
          description: Unique identifier key for Employer
          format: int32
        DepKey:
          type: integer
          description: Unique identifier key for the Dependent
          format: int32
        ServiceStartDte:
          type: string
          description: Date when the Service Start
          format: date-time
        ServiceEndDte:
          type: string
          description: Date when the Service End
          format: date-time
        ProviderName:
          type: string
          description: Name of the Provider
        DescOfService:
          type: string
          description: Description related to the Service
        BilledAmt:
          type: number
          description: Amount paid against total billed amount
          format: double
        InsAmtAllowed:
          type: number
          description: Maximum Insurance Amount Allowed For Participant associated with Employee
          format: double
        InsAmtPaid:
          type: number
          description: Insurance Amount paid to Participant associated with Employee
          format: double
        EmpePaidAmt:
          type: number
          description: Amount paid to Employee
          format: double
        Notes:
          type: string
          description: Notes entered by user related to the transaction
        FileKey:
          type: integer
          description: Unique identifier key for File
          format: int32
        eClaimOptions:
          type: integer
          description: 'Option for Online submission of claim: Yes=1, No=0'
          format: int64
        DeductibleAmt:
          type: number
          description: Amount will be used as the participant's deductible responsibility
          format: double
        CoinsAmt:
          type: number
          description: Amount to participant's coinsurance
          format: double
        CoPayAmt:
          type: number
          description: Amount will be used as participant's copay responsibility
          format: double
        TotalReimbAmt:
          type: number
          description: Total Amount of transaction which got reimbursed
          format: double
        OriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: "Origin Code indicates which way claims initiated : None = 0,POSCardSwipe = 1,POSKeyedIn = 2,POSPhonedIn = 3,\r\nPOSMbiSubmitted = 4,ManualScreen = 50,ManualEFT = 51, ManualAgent = 52, ParticipantManualScreen = 53,\r\nParticipantMobileScreen = 54, HZDirect = 55, eClaimManagerManual = 56, eClaimManagerTPS = 57, WebServiceClaim = 58"
        eClaimUIStatus:
          enum:
            - None
            - New
            - Matched
            - Reimbursed
            - NotAllowParticipantClaimEntry
            - MissParticipantClaimEntryUITemplate
            - In_Process
            - Fully_Paid
          type: string
          description: "Current status of the eClaim : None = 0, New = 1, Matched = 2, Reimbursed = 3,NotAllowParticipantClaimEntry = 4,\r\nMissParticipantClaimEntryUITemplate = 5,In_Process = 6,Fully_Paid = 7"
      description: "<author>Guritfaq Singh</author>\r\n<date>July 14, 2016</date>\r\n<version>7.5</version>"
    ServicesCommunicationsTpaIdEmployerIdParticipantIdUnreadcountGet200Applicati:
      type: integer
      description: The number of communications that the participant has not yet read.
      format: int32
    BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ClaimSubmittalFormInfo:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        HasFaxRoutingFeature:
          type: boolean
          description: Indicates if your admin instance has fax routing enabled.
        TrackingNumber:
          type: string
          description: 'Number you assign to track claims. Note: WCA does not use this number.'
        BarCodeStream:
          type: string
          description: The String Representation of the barcode image to be included on the claim submission form.
          format: byte
        BarCodeSymbologyType:
          type: integer
          description: 'Indicates the type of bar code that is represented in the bar code stream (a symbology is a defined method of representing numeric or alphabetic digits using bars and spaces that are easily scanned by computer systems). None = 0, Code39 = 1, Code39Ext = 2, Code128 = 4, EAN128 = 8, Code93 = 16, Code93Ext = 32'
        ReceiptInstruction:
          type: string
          description: The Receipt Instruction text as configured on the Receipt Form tab of the Claim Entry Template in WCA.
        ParticipantClaimList:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ParticipantClaim'
          description: Participant Claim List
      description: 'Contains information necessary for the claim submittal form, including participant claims and barcode details.'
    BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.ContactAdminReq:
      type: object
      properties:
        EmailFrom:
          type: string
          description: Email From - list of email addresses
        EmailCC:
          type: array
          items:
            type: string
          description: Email CC (Carbon copy) - list of email addresses
        EmailSubject:
          type: string
          description: Email Subject
        EmailBody:
          type: string
          description: Email Body
      description: Contact Admin Request DataContract - This schema defines the structure of the request body for contacting an administrator.
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileParticipantStatus:
      type: object
      properties:
        optinStatus:
          enum:
            - Unregistered
            - Registered
            - Pending
          type: string
    BenSoft-Vendors-Services-Drugs-Models-DrugArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.Drug'
    BenSoft.Vendors.Services.Drugs.Models.Drug:
      type: object
      properties:
        Ndc:
          type: string
        DrugName:
          type: string
        Strength:
          type: string
        Mony:
          type: string
        Type:
          type: string
        PackageSize:
          type: number
          format: double
        ProductName:
          type: string
        Gpi:
          type: string
        Otc:
          type: boolean
        Ingredient:
          type: boolean
        EquivalentNdc:
          type: string
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ReimbursementSummar:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementSummary'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementSummary:
      type: object
      properties:
        TpaId:
          type: string
          description: Number assigned by Alegeus Healthcare Payment Solutions to you
        EmprId:
          type: string
          description: Unique identifier for the employer with whom the account number for this reimbursement is associated
        EmpeKey:
          type: integer
          description: Unique identifier for the employee associated with this reimbursement
          format: int32
        EmployeeFirstName:
          type: string
          description: Employee First Name
        EmployeeMiddleInitial:
          type: string
          description: Employee Middle Initial
        EmployeeLastName:
          type: string
          description: Employee Last Name
        ReimburseKey:
          type: integer
          description: Represents a system generated identifier for the reimbursement which can be used to retrieve the reimbursement details in a separate request.
          format: int32
        ReimburseDate:
          type: string
          description: Date of Reimbursment
          format: date-time
        ReimburseMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
          description: Reimbursement method attached to the transaction
        TotalReimburseAmount:
          type: number
          description: Total amount reimbursed
          format: double
        CheckNumber:
          type: string
          description: Check Number associated with this reimbursement
        TrackingNumber:
          type: string
          description: Unique identifier to track this reimbursement
        VoidDate:
          type: string
          description: Date reimbursement was voided
          format: date-time
        StopPaymentDate:
          type: string
          description: Stop payment date
          format: date-time
        ACHDate:
          type: string
          description: ACH date
          format: date-time
        PaymentId:
          type: string
          description: 'Represents the draft # issued by our Integrated Payment vendor.'
        PayoutMethod:
          type: string
          description: 'Represents the payment method used by the participant or our Integrated Payment vendor. Valid methods include Pending, Check, Direct Deposit, External Check, External Direct Deposit, Card, Payroll, ePay-ACH, ePay-Virtual Card, and ePay-eCheck.'
        TransactionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementTransaction'
          description: Transaction Details
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementTransaction:
      type: object
      properties:
        ReimburseAmount:
          type: number
          format: double
        TransactionAmount:
          type: number
          format: double
        AccountType:
          type: string
        PlanStartDate:
          type: string
          format: date-time
        PlanEndDate:
          type: string
          format: date-time
        ServiceStartDate:
          type: string
          format: date-time
        MerchantName:
          type: string
        TransactionNotes:
          type: string
        CardHolderFirstName:
          type: string
        CardHolderMiddleInitial:
          type: string
        CardHolderLastName:
          type: string
        TransactionOptions:
          type: integer
          format: int64
        TransactionKey:
          type: string
        TransactionSettleDte:
          type: string
        TransactionSequenceNumber:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts._0522.Transaction.HSABillPayInfo:
      type: object
      properties:
        HSATransactionType:
          type: string
          description: Refers to transaction type associated with HSA account transactions.
          nullable: true
        AccountDescription:
          type: string
          description: Product partner name
        ErrorCode:
          type: integer
          description: Refers to the error code of the transaction.
          format: int32
        ErrorDescription:
          type: string
          description: Refers to the error description of the transaction.
        HSABillPayStatus:
          type: string
          description: 'HSA BillPay Status { Planned = 0, Failed = 1, Completed = 2 }'
        Memo:
          type: string
          description: Notes entered during the transaction.
        NextPaymentDate:
          type: string
          description: Date of next payment
          format: date-time
        PayeeAddress:
          type: string
          description: Refers to the address of Pay Provider/Payee.
        PayeeName:
          type: string
          description: Name of the Pay Provider/Payee.
        PaymentDate:
          type: string
          description: Service start date
          format: date-time
        PaymentType:
          type: integer
          description: 'Method for reimbursing an employee or provider for this transaction { Check = 1, DirectDeposit = 2 }'
          format: int32
        PayProvider:
          type: string
          description: Refers to the EIN number of Pay Provider.
        RecurrenceFrequency:
          enum:
            - All
            - None
            - Daily
            - Weekly
            - BiMonthly
            - Monthly
            - Quarterly
            - Yearly
            - SemiMonthly
            - BiWeekly
            - Once
          type: string
          description: Claims Recurrence Frequency
        TaskSchEndDate:
          type: string
          description: The end date for the recurrence
          format: date-time
        TaskSchKey:
          type: integer
          description: Unique key identifier for task scheduling
          format: int32
        TaskSchStartDate:
          type: string
          description: The start date for the first recurrence of the claim
          format: date-time
        TotalRecurrence:
          type: integer
          description: Number of payments that are to be made.
          format: int32
      description: "HSA Bill Pay Info\r\n<author>Bobson Samuel</author><date>Feb 08, 2022</date><version>WC 22.05.00</version>"
    BenSoft.Contracts.DataContracts._1121.AnalyzeRequest:
      type: object
      properties:
        EventType:
          enum:
            - SESSION_SIGNIN
            - FAILED_LOGIN_ATTEMPT
            - ENROLL
            - UPDATE_USER
            - CREATE_USER
            - OLB_ENROLL
            - FAILED_OLB_ENROLL_ATTEMPT
            - ACTIVATE_CARD
            - OPEN_NEW_ACCOUNT
            - REQUEST_CREDIT
            - ADD_PAYEE
            - EDIT_PAYEE
            - PAYMENT
            - DEPOSIT
            - STOCK_TRADE
            - OPTIONS_TRADE
            - CHANGE_LOGIN_ID
            - CHANGE_EMAIL
            - CHANGE_PHONE
            - CHANGE_ADDRESS
            - CHANGE_PASSWORD
            - CHANGE_LIFE_QUESTIONS
            - FAILED_CHANGE_PASSWORD_ATTEMPT
            - CHANGE_ALERT_SETTINGS
            - CHANGE_STATEMENT_SETTINGS
            - CHANGE_AUTH_DATA
            - SEND_SECURE_MESSAGE
            - READ_SECURE_MESSAGE
            - VIEW_CHECK
            - VIEW_STATEMENT
            - REQUEST_CHECK_COPY
            - REQUEST_STATEMENT_COPY
            - REQUEST_CHECKS
            - REQUEST_NEW_CARD
            - REQUEST_NEW_PIN
            - EXTRA_AUTH
            - USER_DETAILS
            - CLIENT_DEFINED
            - WITHDRAW
            - CARD_PIN_CHANGE
          type: string
        IpAddress:
          type: string
          description: The IP address from the user's device
        HardwareId:
          type: string
          description: Hardware Id(Mobile field)
        SimId:
          type: string
          description: Sim Id(Mobile field)
        OtherId:
          type: string
          description: Other Id(Mobile field)
        CallerId:
          type: string
          description: Identifier used to authenticate the caller initialing the message
        CustomEvent:
          type: string
          description: "Any custom defined event not included in the pre-defined RSA EventType enum.  If the\r\ncustom event type is stand-alone, the EventType must also be specified as CLIENT_DEFINED"
        DevicePrint:
          type: string
          description: Encapsulates all parameters obtained by device fingerprint gathering code
        CustomFacts:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.SecureLogon.API7.CustomFact'
          description: Custom facts
        TransactionAmountUSD:
          type: integer
          description: Transaction amount in USD for MFA rules that trigger based on transaction amount
          format: int64
        DeviceTokenFSO:
          type: string
          description: Value of the Flash Shared Object
        HttpAccept:
          type: string
          description: HTTP accept header value
        DeviceTokenCookie:
          type: string
          description: Contains the cookie value
        UserAgent:
          type: string
          description: User agent string
        HttpAcceptEncoding:
          type: string
          description: HTTP accept encoding
        HttpAcceptLanguage:
          type: string
          description: HTTP accept language
        PortfolioId:
          type: string
          description: Portfolio Id
        RequestFrom:
          enum:
            - WCA
            - WCP
            - WCM
          type: string
          description: 'Where the request is sent(WCA, WCP or WCM)'
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
      description: Update Analyze service with the Added Parameter for TPA ID
    BenSoft.Contracts.DataContracts._0717.ParticipantAccessAttribute:
      type: object
      properties:
        AcctsWaitingAdditionalInformation:
          type: array
          items:
            type: string
          description: Returns Flex Account ID for the HSA account(s) in Awaiting Additional Information status
        ParticipantAccessRights:
          enum:
            - None
            - AllowParticipantClaimEntry
            - AllowParticipantReceiptUpload
            - AllowParticipantPayProvider
            - AllowParticipantEmailUpdates
            - AllowParticipantEmailAdmin
            - AllowParticipantAccessDependentInfo
            - AllowParticipantRequestNewCard
            - AllowParticipantUpdateDemoInfo
            - AllowParticipantUpdateDirectDepositInfo
            - AllowParticipantViewDirectDepositInfo
            - AllowParticipantClaimsCrossOver
            - AllowParticipantCommunicationSelection
            - AllowEmpeSelfCreation
            - AllowParticipantUpdateAutoReimbSettings
            - AllowParticipantAddDependent
            - AllowParticipantLinkDependentAccount
            - AllowParticipantCreateDependentCard
            - AllowParticipantRequireDependentDOBSSN
            - AllowParticipantCardReimbursement
            - IsEligibleEnroll
            - GetAcctClassification
            - GetInnoPartners
            - GetParticipantPortalAccessInfo
            - EmployerNoDebitCard
            - DirectDepositBankAccountValidation
            - AllowParticipantOnlineRepayment
            - AllowOfflineSAAuthenticationToken
            - AllowSAFeatureOnOff
          type: string
          description: AccessAttributes Enumeration values is used to determine whether participant has access to particular feature / functionality / page.
        InnoPartnerIds:
          type: array
          items:
            type: string
          description: 'Displays a list of Innovation Partner IDs that are enabled for a participant. Innovation partners are controlled by Alegeus and include vendors like FSA Store, HSA Store, etc.  This value will be null if no innovation partners are enabled for this participant.'
        AcctTypeClasses:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountTypeClassInfo'
          description: 'If GetAcctClassification is a requested attribute, this will be populated with the account types which the participant can see. Valid values are FSA, HRA, HSA, VEBA, Deductible, Transit, Parking and Other. If GetAcctClassification is not requested, this will be null.'
      description: ParticipantAccessAttribute returned by REST API ParticipantEmployee service.
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdAAnswers:
      type: object
      properties:
        Answers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.IdCheck.IdAAnswer'
        QuizId:
          type: string
        TransId:
          type: string
        IdCheckRequest:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdCheckRequest'
      description: Represents the answers provided by the participant to the ID authentication questions.
    BenSoft.Contracts.DataContracts.Business.IdCheck.IdAAnswer:
      type: object
      properties:
        QuestionId:
          type: string
        AnswerId:
          type: string
    ServicesParticipantDependentTpaIdEmployerIdParticipantIdDependentIdDelete200:
      type: boolean
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueueUpload:
      type: object
      properties:
        TpaId:
          type: string
          description: Admin ID; Unique identifier that WealthCare Admin assigns to you.
        DataPartnerId:
          type: string
          description: Unique identifier for the product partner.
        docQueue:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueue'
        uploadFile:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentFile'
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentFile:
      type: object
      properties:
        ContentLength:
          type: integer
          description: 'The file length, in bytes.'
          format: int32
        ContentType:
          type: string
          description: The MIME content type of the uploaded file.
        FileName:
          type: string
          description: 'The name of the client''s file, including the directory path.'
        InputStream:
          type: string
          description: A System.IO.Stream pointing to a file.
          format: byte
        Base64:
          type: string
          description: The string representation in Base 64 of the file content.
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueue:
      type: object
      properties:
        QueueKey:
          type: integer
          description: Unique key identifier for queue.
          format: int32
        QueueName:
          type: string
          description: Name of the document queue.
        QueueType:
          enum:
            - None
            - Claim
            - Transaction
            - Termination
            - Other
            - EmployerUpload
            - TrustPlanDisclosures
            - Interaction
            - PartnerInteraction
            - PartnerTransaction
            - Disclosures
            - CIP
            - EmployeeUpload
          type: string
          description: Type of documents that the queue processes.
        QueueActionType:
          enum:
            - None
            - EnterClaim
            - AdjudicateLinkToTransaction
            - Terminate
            - SaveToEmployerEmployee
            - ChangeQueue
            - Delete
            - CreateInteraction
            - CreatePartnerInteraction
            - NewPartnerTransaction
            - LinkDisclosures
            - UpdateCIPStatus
            - ChangePartnerQueue
            - DeletePartnerQueue
          type: string
          description: Action performed by the queue.
        DocFileType:
          enum:
            - Unknown
            - ClaimReceiptQueue
            - POSReceiptQueue
            - ClaimEntryWorkQueue1
            - ClaimEntryWorkQueue2
            - ClaimEntryWorkQueue3
            - TransactionWorkQueue1
            - TransactionWorkQueue2
            - TransactionWorkQueue3
            - UnassignedQueue
            - DeleteQueue
            - ClaimEntryWorkQueue4
            - ClaimEntryWorkQueue5
            - ClaimEntryWorkQueue6
            - ClaimEntryWorkQueue7
            - ClaimEntryWorkQueue8
            - ClaimEntryWorkQueue9
            - ClaimEntryWorkQueue10
            - InteractionQueue1
            - InteractionQueue2
            - InteractionQueue3
            - InteractionQueue4
            - InteractionQueue5
            - InteractionQueue6
            - InteractionQueue7
            - InteractionQueue8
            - InteractionQueue9
            - InteractionQueue10
            - PartnerInteractionQueue1
            - PartnerInteractionQueue2
            - PartnerInteractionQueue3
            - PartnerInteractionQueue4
            - PartnerInteractionQueue5
            - PartnerInteractionQueue6
            - PartnerInteractionQueue7
            - PartnerInteractionQueue8
            - PartnerInteractionQueue9
            - PartnerInteractionQueue10
            - PartnerTransactionQueue1
            - PartnerTransactionQueue2
            - PartnerTransactionQueue3
            - PartnerTransactionQueue4
            - PartnerTransactionQueue5
            - PartnerTransactionQueue6
            - PartnerTransactionQueue7
            - PartnerTransactionQueue8
            - PartnerTransactionQueue9
            - PartnerTransactionQueue10
            - PartnerDisclosureQueue
            - PartnerCIPQueue
            - UnassignedPartnerQueue
            - DeletePartnerQueue
            - ClaimEntryWorkQueue11
            - ClaimEntryWorkQueue12
            - ClaimEntryWorkQueue13
            - ClaimEntryWorkQueue14
            - ClaimEntryWorkQueue15
            - ClaimEntryWorkQueue16
            - ClaimEntryWorkQueue17
            - ClaimEntryWorkQueue18
            - ClaimEntryWorkQueue19
            - ClaimEntryWorkQueue20
            - ClaimEntryWorkQueue21
            - ClaimEntryWorkQueue22
            - ClaimEntryWorkQueue23
            - ClaimEntryWorkQueue24
            - ClaimEntryWorkQueue25
            - TransactionWorkQueue4
            - TransactionWorkQueue5
            - TransactionWorkQueue6
            - TransactionWorkQueue7
            - TransactionWorkQueue8
            - TransactionWorkQueue9
            - TransactionWorkQueue10
            - TransactionWorkQueue11
            - TransactionWorkQueue12
            - TransactionWorkQueue13
            - TransactionWorkQueue14
            - TransactionWorkQueue15
            - TransactionWorkQueue16
            - TransactionWorkQueue17
            - TransactionWorkQueue18
            - TransactionWorkQueue19
            - TransactionWorkQueue20
            - TransactionWorkQueue21
            - TransactionWorkQueue22
            - TransactionWorkQueue23
            - TransactionWorkQueue24
            - TransactionWorkQueue25
            - InteractionQueue11
            - InteractionQueue12
            - InteractionQueue13
            - InteractionQueue14
            - InteractionQueue15
            - InteractionQueue16
            - InteractionQueue17
            - InteractionQueue18
            - InteractionQueue19
            - InteractionQueue20
            - InteractionQueue21
            - InteractionQueue22
            - InteractionQueue23
            - InteractionQueue24
            - InteractionQueue25
            - EmployeeDocument
          type: string
          description: Document file type that the queue belongs to.
        IsActive:
          type: boolean
          description: 'Indicates whether queue is active or not. If queue is active, returns true, otherwise returns false.'
      description: ''
    BenSoft.Contracts.DataContracts.ContactInfoForEmployee:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When an employer is created, WealthCare Admin assigns the 3-character prefix; you assign the remaining characters.'
        ContactURL:
          type: string
          description: 'A URL  to be presented to the participant.  If the participant is tied to a division and the division has a URL configured, that will be returned.  Otherwise, the employer’s consumer portal URL be returned will be returned, or if that does not exist, the consumer portal URL onfigured for the admin will be returned.'
        ContactPhone:
          type: string
          description: 'A contact phone number to be presented to the participant.  If the participant is tied to a division and the division has a phone number configured, that will be returned.  Otherwise, the employer’s customer service phone number will be returned, or if that does not exist, the phone number configured for the admin will be returned.'
        ContactNotes:
          type: string
          description: 'If a participant is tied to a division, this will return the division notes.  This will be null if not applicable.'
      description: Created for Issue#52177 - Add Division Level Data
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-PlanExpenseListArra:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.PlanExpenseList'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.PlanExpenseList:
      type: object
      properties:
        ExpenseId:
          type: integer
          description: Service Category Expense Id.
          format: int32
        ExpenseName:
          type: string
          description: Service Category Expense Name.
        ExpenseDescription:
          type: string
          description: Service Category Expense Description.
        InEligible:
          type: boolean
          description: Display Service Category Expense Option InEligible - Valid values are true and false.
        Eligible:
          type: boolean
          description: Display Service Category Expense Option Eligible - Valid values are true and false.
        EligibleWithRx:
          type: boolean
          description: Display Service Category Expense Option EligibleWithRx - Valid values are true and false.
        EligibleWithLMN:
          type: boolean
          description: Display Service Category Expense Option EligibleWithLMN - Valid values are true and false.
        PotentiallyEligible:
          type: boolean
          description: Display Service Category Expense Option PotentiallyEligible - Valid values are true and false.
    BenSoft-Contracts-DataContracts-Mobile-Business-Transactions-PendingContribu:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.PendingContributions'
    BenSoft.Contracts.DataContracts._0222.AnalyzeResponse:
      type: object
      properties:
        IsRSAEnabled:
          type: boolean
          description: RSA is enabled or disabled
        IsRSAUser:
          type: boolean
          description: User is or isn't a RSA user
        UserExist:
          type: boolean
          description: User does or doesn't exist in WCA
        ActionCode:
          type: string
          description: Indicate the action recommended by a triggered rule.
        ActionNames:
          type: array
          items:
            type: string
          description: Name of the action taken when the rule was triggerd
        UserTypeCde:
          enum:
            - None
            - MBI
            - Tpa
            - Employer
            - Cardholder
            - MBISystem
            - DataPartner
            - SSO
            - PartnerUser
            - InnovationPartner
          type: string
          description: User Type
        IsForcePasswordChange:
          type: boolean
          description: "True or False based on if password changed for a participant user  by any other user \r\nand not the participant user himself."
        DeviceTokenCookie:
          type: string
          description: A unique identifier representing the device token should be stored in the client's browser cookies and included as the DeviceTokenCookie parameter in the subsequent Analyze request.
      description: Update Analyze service with the Added Parameter for TPA ID
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.IdCheckRequest:
      type: object
      properties:
        TpaId:
          type: string
        EmployerId:
          type: string
        ParticipantId:
          type: string
        PlanKey:
          type: integer
          format: int32
        CustomTemplateKey:
          type: integer
          format: int32
        CustomerId:
          type: string
      description: IdCheckRequest
    ServicesPortalinfoAnnouncementTpaIdDelete200ApplicationJsonResponse:
      type: object
    SecurelogonOobsmsUserPost200ApplicationJsonResponse:
      type: string
      description: 'A confirmation message indicating the successful initiation of the SMS token request, along with any additional information.'
    SecurelogonOtptokenUserGet200ApplicationJsonResponse:
      type: string
    SecurelogonOtpemailtouserUserPost200ApplicationJsonResponse:
      type: boolean
    SecurelogonResetUserChallengeQuestionsPost200ApplicationJsonResponse:
      type: boolean
    SecurelogonUnlockRsaUserPost200ApplicationJsonResponse:
      type: string
    SecurelogonGetRsaUserStatusGet200ApplicationJsonResponse:
      type: string
    BenSoft.Contracts.DataContracts.Business.SecureLogon.API7.CustomFact:
      type: object
      properties:
        FactName:
          type: string
        FactDataType:
          enum:
            - STRING
            - BOOLEAN
            - FLOAT
            - DOUBLE
            - INTEGER
            - DATE
          type: string
        FactValue:
          type: string
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-EmployeeSummaryArra:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeSummary'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeSummary:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmprId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmpeId:
          type: string
          description: Employee ID; unique identifier for the employee.
        FirstName:
          type: string
          description: First Name of the Employee
        LastName:
          type: string
          description: Last Name of the Employee
        MiddleInitial:
          type: string
          description: Middle / Initial of the Employee
        NamePrefix:
          type: string
          description: Name Prefix of the Employee
      description: Employee Summary
    BenSoft-Contracts-DataContracts-_0822-AccountSummaryArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.AccountSummary'
    BenSoft-Contracts-DataContracts-BalanceDueAccountInfoArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1019.BalanceDueAccountInfo'
    BenSoft.Contracts.DataContracts._1019.BalanceDueAccountInfo:
      type: object
      properties:
        TpaId:
          type: string
        EmployerId:
          type: string
        ParticipantId:
          type: string
        FlexAccountId:
          type: string
        PlanId:
          type: string
        CustomPlanDescription:
          type: string
        BalanceDue:
          type: number
          format: double
    SecurelogonEnrollPost200ApplicationJsonResponse:
      type: string
      description: 'Confirmation message indicating successful enrollment, potentially including user-specific data or next steps.'
    ServicesDatapartnerCustomTextDataPartnerIdResourceKeyGet200ApplicationJsonRe:
      type: string
    ServicesDatapartnerCustomTextDataPartnerIdResourceKeyGet200ApplicationXmlRes:
      type: string
    CustomText:
      type: string
    ServicesDatapartnerCustomTextDataPartnerIdGet200ApplicationJsonResponse:
      type: array
      items:
        type: string
    ServicesDatapartnerCustomTextDataPartnerIdGet200ApplicationXmlResponse:
      type: array
      items:
        type: string
    CustomTexts:
      type: array
      items:
        type: string
    BenSoft-Contracts-DataContracts-Business-DataPartner-DataPartnerCustomTextAr:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomText'
    BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartnerCustomText:
      type: object
      properties:
        DataPartnerId:
          type: string
        DataPartnerCustomTextKey:
          type: integer
          format: int32
        CustomTextOption:
          type: integer
          format: int32
        CustomTextType:
          type: integer
          format: int32
        CustomText:
          type: string
        InsertUserIdKey:
          type: integer
          format: int32
        UpdateUserIdKey:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentDeliveryOption:
      type: object
      properties:
        DataPartnerId:
          type: string
        TpaId:
          type: string
        FlexAcctKey:
          type: integer
          format: int32
        TrustPaper:
          type: string
        FeeAmt:
          type: number
          format: double
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.FlexAccount:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmployeeId:
          type: string
        PlanKey:
          type: integer
          format: int32
        FlexAcctKey:
          type: integer
          format: int32
        FlexAcctId:
          type: string
        AcctStatusCde:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
        AcctTypeCde:
          type: string
        EnrollmentMethodCde:
          enum:
            - Paper
            - Online
            - Other
            - Marketplace
          type: string
        EligDte:
          type: string
        EsigCardCde:
          type: boolean
        EsigCardDte:
          type: string
          format: date-time
        PrefundedAmt:
          type: number
          format: double
        EmpeElectAmtPp:
          type: number
          format: double
        EmpeElectAmtLastPp:
          type: number
          format: double
        AvailBal:
          type: number
          format: double
        ElectAmt:
          type: number
          format: double
        LastAutoDepDte:
          type: string
        CoverageTierId:
          type: string
        CoverageTierKey:
          type: integer
          format: int32
        EmpeBrokerId:
          type: string
        AllowManualClaims:
          type: boolean
        MccFlags:
          type: integer
          format: int64
        ReassociationAcctNum:
          type: string
        TrustPaper:
          type: string
        ProxyCde:
          type: string
        PaperElectronicTaxForm:
          enum:
            - None
            - Electronic
            - Paper
          type: string
        AccountDetailsXML:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountDetailsXML'
      description: Beneficiary
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountDetailsXML:
      type: object
      properties:
        IssueDebitCard:
          type: integer
          format: int32
        WelcomeKitDeliveryMethod:
          type: integer
          format: int32
        Am1:
          type: string
        Am2:
          type: string
        Am3:
          type: string
        Am4:
          type: string
        Am5:
          type: string
        Am6:
          type: string
        Am7:
          type: string
        Am8:
          type: string
        Am9:
          type: string
        Am10:
          type: string
        Asf1:
          type: string
        Asf2:
          type: string
        Asf3:
          type: string
        Asf4:
          type: string
        Asf5:
          type: string
        Asf6:
          type: string
        Adf1a:
          type: string
        Adf1b:
          type: string
        Adf1c:
          type: string
        Adf1d:
          type: string
        Adf1e:
          type: string
        Adf1f:
          type: string
        Adf2a:
          type: string
        Adf2b:
          type: string
        Adf2c:
          type: string
        Adf2d:
          type: string
        Adf2e:
          type: string
        Adf2f:
          type: string
        Adf3a:
          type: string
        Adf3b:
          type: string
        Adf3c:
          type: string
        Adf3d:
          type: string
        Adf3e:
          type: string
        Adf3f:
          type: string
        Adf4a:
          type: string
        Adf4b:
          type: string
        Adf4c:
          type: string
        Adf4d:
          type: string
        Adf4e:
          type: string
        Adf4f:
          type: string
        Adf5a:
          type: string
        Adf5b:
          type: string
        Adf5c:
          type: string
        Adf5d:
          type: string
        Adf5e:
          type: string
        Adf5f:
          type: string
        Amf11:
          type: string
        Amf12:
          type: string
        Amf13:
          type: string
        Amf14:
          type: string
        Amf15:
          type: string
        Amf16:
          type: string
        Amf17:
          type: string
        Amf18:
          type: string
        Amf19:
          type: string
        Amf20:
          type: string
        Ndf1Type:
          type: string
        Ndf1Result:
          type: string
        Ndf2Type:
          type: string
        Ndf2Result:
          type: string
        Ndf3Type:
          type: string
        Ndf3Result:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ServiceCategoryMCC:
      type: object
      properties:
        CardTypeCode:
          type: integer
          description: 'Represents the card type or card network: -1 = None, 1 = MasterCard, 2 = VISA, 4 = American Express, 7 = All/IIAS'
        MerchantCategoryCode:
          type: string
          description: 'A 4-character alphanumeric code, identifying the type of merchant. This code is encoded into the terminal by the issuing bank and transmitted with every transaction.'
        Description:
          type: string
          description: The Merchant Category Code’s description.
        MCCFlags:
          type: integer
          description: 'Flag to identify whether plan is using one or more MCC account settings: None = 0, Deductible = 1, Claims Crossover = 2, UserDefdFlag1 = 4, UserDefdFlag2 = 8, UserDefdFlag3 = 16, UserDefdFlag4 = 32, UserDefdFlag5 = 64, UserDefdFlag6 = 128, UserDefdFlag7 = 256, UserDefdFlag8 = 512, UserDefdFlag9 = 1024, UserDefdFlag10 = 2048, Deductible Use = 4096'
    BenSoft.Contracts.DataContracts.Transaction.TransactionDetailsEx:
      type: object
      properties:
        PlanID:
          type: string
          description: "The plan ID for the plan which the employee is enrolled.\r\nIgnored if servcie category code is supplied"
        AccTypeCode:
          type: string
          description: "Account Type Code:\r\nNew = 1, Active = 2"
        PlanStartDate:
          type: string
          description: Start date of the plan. Conditionally required if service category code is not given
        PlanEndDate:
          type: string
          description: End date of the plan. Conditionally required if service category code is not given
        MerchantName:
          type: string
          description: Name of the merchant as shown on the claim/receipt
        MerchantID:
          type: string
          description: Unique number assigned by Visa/MasterCard identifying the submitting merchant
        MCC:
          type: string
          description: "Merchant Category Code - Merchant type code encoded into the terminal by issuing band and transmitted with every transaction.\r\nIdentifies the type of merchant submitting the transaction. Known as MCC for Mastercard and SIC for Visa"
        OriginalMCC:
          type: string
          description: The terminal Merchant Type Code that had its MTC code converted
        Amount:
          type: number
          description: The transaction amount
          format: double
        TransactionCode:
          type: integer
          description: "Transaction Code\r\n{ Unassigned = 0, Purchase = 11, PreAuth = 12, ForcePost = 13, Refund = 14, EmployerDeposit = 20\r\n  PrefundedDeposit = 21, AutoDeposit = 22, Adjustment = 23, Void = 24, PrefundedDepositReset = 25,\r\n  BalanceSyncAdjustment = 26, IndividualAmt = 27, IndividualAmtReset = 28, HsaImported = 29\r\n  OtherDeposit = 30, RolloverDeposit = 31, FamilyRolloverDeposit = 32, FamilyOther Deposit =33 }"
          format: int32
        TransactionStatus:
          type: integer
          description: "Transaction Adjudication Code. Filters transaction results the transaction with a specific transaction status:\r\n Approved, Ineligible, Pending, Resolved Employee Pay, Resolved Payroll Deduction, New, Denied\r\n Unkown, Resolved No Refund, Ineligible Partially Offest, Resolved Offset by Manual Claim,\r\n Unauthorized Refund, Insufficient Documentation, All"
          format: int32
        TransactionDate:
          type: string
          description: Date of the transaction
          format: date-time
        ConvFeePayerCode:
          type: integer
          description: "Convenience Fee Payer Code:\r\nNone = 1, Tpa = 2, Employer = 3, Employee = 4"
          format: int32
        DisbursableBal:
          type: number
          description: Employee Disbursable Balance
          format: double
        IsDependent:
          type: boolean
          description: "Indicates whether the transaction was for an account's dependent\r\nand not the employee"
        EmpeDepID:
          type: string
          description: The employee or dependent unique identifier for the family member
        OrgTransactionDate:
          type: string
          description: The original transaction date of the transaction
          format: date-time
        SeqNum:
          type: string
          description: Sequential number assinged by the settlement system within a settlement date
        SettlementDate:
          type: string
          description: Date that the transactions were settled on.
        SettlementSeqNum:
          type: integer
          description: Sequential number assigned by the settlement system within a settlement date
          format: int32
        TerminalCity:
          type: string
          description: The terminal city received on the card authorization request (for card transactions)
        TerminalState:
          type: string
          description: The terminal state received on the card authorization request (for card transactions)
        TerminalName:
          type: string
          description: The terminal name received on the card authorization request (for card transactions)
        TerminalOwnerName:
          type: string
          description: The terminal owner received on the card authorization request (for card transactions)
        TerminalID:
          type: string
          description: The terminal unique identifier received on the card authorization request (for card transactions)
        TransactionKey:
          type: string
          description: Unique identifier for the transaction generated by WCA
        CheckTraceNum:
          type: string
          description: 'If WCA has this information, this will be the check number for the reimbursement.'
        ReimbDate:
          type: string
          description: The reimbursement date for the transaction
        ReimbMethod:
          type: integer
          description: "Reimbursement Method:\r\nUndefined = -1, None = 0, Check = 1, DirectDeposit = 2, ExternalCheck = 3, ExternalDirectDeposit = 4,\r\nCard = 5, Payroll = 6"
          format: int32
        OffsetAmount:
          type: number
          description: The amount of the reimbursable amount that was offset by a balance due on the account
          format: double
        IsPartialAuth:
          type: boolean
          description: Indicates whether the transaction was partially approved
        Notes:
          type: string
          description: Notes that were provided with the transaction
        IsCheckReissued:
          type: boolean
          description: Indicates whether a check reimbursement was reisssued
        SCC:
          type: string
          description: The Service Catergory Code used for the transaction
        SCCDesc:
          type: string
          description: The Service Catergory Code description
        DepositSubTypeID:
          type: string
          description: Unique identifier for special deposits in WCA with a sub-type
        TransactionDesc:
          type: string
          description: The description as included with the transaction
        DeniedAmount:
          type: number
          description: The amount denied for the transaction
          format: double
        ExcludedAmount:
          type: number
          description: the excluded amount for the transaction
          format: double
        ExcludedReason:
          type: string
          description: The excluded reason description
        LowFundsAmount:
          type: number
          description: 'the amount that is reimbursable, but the account did not have enough funds to cover it'
          format: double
        EligibleAmount:
          type: number
          description: The amount that is reimbursable from the account after taking out the excluded amount
          format: double
        DeductibleAmount:
          type: number
          description: The deductible amount for the claim
          format: double
        PendedAmount:
          type: number
          description: The amount that is pended for further documentation
          format: double
        IsPayProvider:
          type: boolean
          description: Indicates whether the claim was paid to their provider
        CardProxyNum:
          type: string
          description: "Rather than providing the real number a proxy is provided.\r\nThe last 4 digits match the real card number's last 4 digits"
        ServiceStartDate:
          type: string
          description: The date of service for the transaction
          format: date-time
        ServiceEndDate:
          type: string
          description: The service end date of the transaction
          format: date-time
        RecurrenceStartDate:
          type: string
          description: The service start date for transactions made as part of recurring payments
          format: date-time
        RecurrenceEndDate:
          type: string
          description: The serivce end date for transactions made as part of recurring payments
          format: date-time
        RecurrenceFrequency:
          type: string
          description: "The frequency of how often the payments are made:\r\nMonthly, Weekly, etc"
        RecurrenceNextRunDate:
          type: string
          description: The next payment date in the recurring schedule
          format: date-time
        RecurrenceLastRunDate:
          type: string
          description: The last run date in the recurring schedule
          format: date-time
        RecurrenceMadeNum:
          type: integer
          description: The number of payments made so far in a recurring schedule
          format: int32
        RecurrencePendingNum:
          type: integer
          description: The number of payments remaining to be completed in a recurring schedule
          format: int32
        HSACodeDesc:
          type: string
          description: "The description of the transaction for HSA IRS reporting:\r\nNormal Contribution, Normal Distribution, Trustee to Trustee Transfer, etc"
        RemainingBalanceDue:
          type: number
          description: the amount of the participant's balance due at the time of a transaction
          format: double
        IneligibleAmount:
          type: number
          description: The amount of the transaction that was determined to be ineligible
          format: double
        IneligibleReason:
          type: string
          description: The reason the ineligible amount was deemed ineligible
        OriginCode:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: "The Origin Code the transaction was for:\r\n None = 0, POSCardSwipe = 1, POSKeyedIn = 2, POSPhonedIn = 3, POSMbiSubmitted = 4\r\n ManualScreen = 50, ManualEFT = 51, ManualAgent = 52, ParticpantManualScreen = 53\r\n ParticipantMobileScreen = 54, HZDirect = 55, eClaimManagerManual = 56,\r\n eClaimManagerTPS = 57, WebServiceClaim = 58"
        OriginCodeDesc:
          type: string
          description: The desciption of the transactions origin
        ReasonPendedForClaim:
          type: string
          description: Displays the "Reason for Pend" options associated with the claim (Manual Claim only)
        PendedCommentForClaim:
          type: string
          description: Comment added by the claims processor to explain why the claim was pended
        ReasonDeniedForClaim:
          type: string
          description: Reason the claim was denied
        DeniedCommentForClaim:
          type: string
          description: Comment added by the claims processor to explain why claim was denied
        ProviderName:
          type: string
          description: Name associated with the provider
        ProviderAddressLine1:
          type: string
          description: Address Line 1 associated with the provider. This is the address where reimbursements are mailed.
        ProviderAddressLine2:
          type: string
          description: Address Line 2 associated with the provider. This is the address where reimbursements are mailed.
        ProviderCity:
          type: string
          description: City associated with the provider address. This is the address where reimbursements are mailed.
        ProviderState:
          type: string
          description: State associated with the provider adress. This is the address where reimbursements are mailed.
        ProviderZipCode:
          type: string
          description: Zip code associated with the provider address. This is the address where reimbursements are mailed.
        TxnHoldKey:
          type: integer
          description: Unique identifier for the transaction hold.
          format: int32
        TaskScheduleKey:
          type: integer
          description: Unique identifier for the transaction schedule.
          format: int32
        HSAHoldBalance:
          type: number
          description: Amount of HSA current balance that is pending (Current balance - Hold = Account available balance)
          format: double
        PostingDate:
          type: string
          description: The date any HSA transactions will post to the participant's account
          format: date-time
        CardNumber:
          type: string
          description: Number assigned to the employee's benefits card by WCA
        OrigTxnAmt:
          type: number
          description: The original transaction amount
          format: double
        OrigTxnOnholdDate:
          type: string
          description: "If the transaction is a sub-transaction created from an on-hold amount,\r\nthen this is the original date the amount was put on hold"
          format: date-time
        CheckTraceNumStatus:
          type: string
          description: 'Returns the status of a check reimbursemement. If transaction is an HSA Import, Auto Deposit, or Other deposit, this field will be empty. If the check trace number exists and has been reissued, this field return the check trace number + a superscript "r" (i.e., 1234r) If the check trace number exists and this was an external check, this field will return the check trace number + a superscript "e" (i.e., 1234e) If the transaction was submitted manually, and was not denied, this will return "Pending Reimbursement" If the transaction was submitted manually, was not denied, and the reimbursement method is card, this will return "Card" If the transaction was submitted manually, was not denied, and the reimbursement method is external check, this will return "Pending External Reimbursement" If the transaction was submitted manually, is fully offset, and fully deductible, this will return "Offset / Deductible" If the transaction was submitted manually and is fully offset and overpayment is resolved, this will return "Offset" If the transaction was submitted manually and is fully deductible, this will return "Deductible" If the transaction was submitted manually, is partially offset and the reimbursement method is external check or external direct deposit, this will return the check trace number with a superscript "e" + " / Offset" (i.e., "1234e / Offset") If the transaction was submitted manually, is partially offset, the reimbursement method is check or direct deposit, and the check has been reissued, this will return the check trace number with a superscript "r" + " / Offset" (i.e., "1234r / Offset") If the transaction was submitted manually, is partially offset, and a check trace number exists, this will return the check number + " / Offset" (i.e., "1234 / Offset") If the transaction was submitted manually, is partially offset, the reimbursement method is external check or external direct deposit, and a check trace number doesnot exist, this will return "Pending External Reimbursement / Offset" If the transaction was submitted manually, reimbursememt method is check, direct deposit, or payroll, the transaction is partially offset, the overpayment is partially resolved, and there is no check trace number, this will return "Pending Reimbursement / Offset" If the transaction was submitted manually, reimbursement is set to "None," the transaction is partially offset, and the overpayment is partially resolved, this will return "None / Offset" If the transaction does not meet any of the above criteria but a check trace number exists, this will return the check trace number. Otherwise, this field will be empty.'
        ReimbAmt:
          type: number
          description: The amount being reimbursed for the transaction
          format: double
        TxnAmtOrig:
          type: number
          description: The original amount of the transaction
          format: double
        ApprovedAmount:
          type: number
          description: The transaction amount after the denied amount was subtracted from the total amount
          format: double
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: "Receipts Information:\r\nTpaId, FileKey, DocId, DocDisplayName, OriginalFileName, UploadDate"
    BenSoft.Vendors.Services.Pharmacies.Models.Pharmacy:
      type: object
      properties:
        Name:
          type: string
        Nabp:
          type: string
        ChainCode:
          type: string
        Address1:
          type: string
        Address2:
          type: string
        City:
          type: string
        State:
          type: string
        ZipCode:
          type: string
        Phone:
          type: string
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
        Distance:
          type: number
          format: double
        Type:
          type: string
        Class:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ParticipantSearch:
      type: object
      properties:
        EmprId:
          type: string
          description: Specify the employerID for the employer or an empty string to search all employers
        SearchBy:
          enum:
            - EmployeeId
            - FirstName
            - LastName
            - FirstLastName
            - SSN
            - CardNumber
            - EmailAddress
            - HealthId
            - PBMId
            - Address1
            - PhoneNumber
            - PPAccountNumber
            - AlternateId
          type: string
          description: Search criteria
        SearchFor:
          type: string
          description: The content to search for
        MaxRecords:
          type: integer
          description: The maximum number of records returns
          format: int32
        StartOrdinal:
          type: integer
          description: The starting ordinal number to return results (normally 0)
          format: int32
    BenSoft.Vendors.Services.Providers.Models.ProviderSearchResult:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Common.Models.PagedParmeters'
        data:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Providers.Models.Provider'
    ServicesParticipantTransactionsUpdatefxclaimlineTpaIdEmployerIdParticipantId:
      type: boolean
    BenSoft-Contracts-DataContracts-_0717-TransactionDetailsExArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.TransactionDetailsEx'
    BenSoft.Contracts.DataContracts._0717.TransactionDetailsEx:
      type: object
      properties:
        FXClaimStatus:
          type: integer
          description: 'For an FX claim, this will be a number 1 through 9 representing the status of the claim. The FXClaimStatusDesc field will include the corresponding description.   1 = Paid  2 = Approved  3 = Applied to Deductible  4 = Denied  5 = Eligible for Reimbursement  6 = Reversed  8 = Overpaid 9 = Partially Approved'
          format: int32
        FXClaimStatusDesc:
          type: string
          description: 'For an FX claim, this will be a human friendly description of the claim status, correpsonding to the FXClaimStatus field.  1 = Paid  2 = Approved  3 = Applied to Deductible  4 = Denied  5 = Eligible for Reimbursement  6 = Reversed  8 = Overpaid  9 = Partially Approved '
        FXClaimDisplayType:
          type: integer
          description: 'This indicates, for this specific TransactionDetailEx object, if the information is for the entire FX claim (1), for a single line of the FX claim (2), or for a reimbursement (3).  Your response will include a TransactionDetailEx object for each claim line and then a TransactionDetailEx for the entire claim; a TransactionDetailEx object for a reimbursement will only be included if it is applicable to this particular FX claim. 0 = None 1 = Total 2 = Line  3 = Reimbursement '
          format: int32
        AdjustedClaimLine:
          type: integer
          format: int32
        RenderingProvider:
          type: string
          description: The provider who provided the service to the participant (this may be different than the billing provider name). It is recommended to use this field as the Provider Name to display.
        RenderingProviderId:
          type: string
          description: Provider ID for the provider who performed the service for the participant.
        OutOfPocketAmt:
          type: number
          description: Amount the participant designated as paid Out Of Pocket for the claim and therefore the participant is not seeking reimbursements for this portion.
          format: double
        Claimant:
          type: string
          description: The family member for whom the claim applies
        PatientID:
          type: string
          description: The provider’s patient account number.
        PatientName:
          type: string
          description: The name of the patient associated with the claim.
        ReimburseKey:
          type: integer
          description: Represents a system generated identifier for the reimbursement which can be used to retrieve the reimbursement details in a separate request.
          format: int32
        PaymentId:
          type: string
          description: 'Represents the draft # issued by our Integrated Payment vendor.'
        PayoutMethod:
          type: string
          description: 'Represents the payment method used by the participant or our Integrated Payment vendor. Valid methods include Pending, Check, Direct Deposit, External Check, External Direct Deposit, Card, Payroll, ePay-ACH, ePay-Virtual Card, and ePay-eCheck.'
        TrackingNumber:
          type: string
          description: 'Tracking Number assigned by the system importing the transaction to WCA '
        ExternalClaimID:
          type: string
          description: 'For an FX claim, this is the external identifier for the claim'
        ServiceCategoryTier:
          type: integer
          description: The Service Categoriy Tier associated with the claim line.
          format: int32
        ClaimLine:
          type: integer
          description: Refers to claim when multiple claim submitted
          format: int32
        ServiceProcedureCode:
          type: string
          description: "CPT, HCPCS or other service procedure type. This information is stored in the system for display to the administrator and participant\r\nIt is not used by the system to determine whether a claim is eligible"
        BilledAmt:
          type: number
          description: 'On an FX or TC claim or a participant added expense, this is the amount the provided billed to insurance. It is for information purposes only and is not used for adjudication. It is intended to help a participant match-up to the full billed amount for a service. For TC/FX Claims this is the summation of all claim lines.'
          format: double
        AllowedAmt:
          type: number
          description: 'On an FX or TC claim or a participant “save expense” for later, this is the amount allowed by insurance. It is for information purposes only and is not used for adjudication. For TC/FX Claims this is the summation of all claim lines.'
          format: double
        DeductibleAmtRequested:
          type: number
          description: The participant's deductible responsibility that was requested
          format: double
        DeductibleAmtReimbursed:
          type: number
          description: The participant's deductible responsibility that was reimbursed
          format: double
        CoinsuranceAmtRequested:
          type: number
          description: Amount requested by participant's coinsurance
          format: double
        CoinsuranceAmtReimbursed:
          type: number
          description: Amount reimbursed to participant's coinsurance
          format: double
        CopayAmtRequested:
          type: number
          description: Requested amount will be used as participant's copay responsibility
          format: double
        CopayAmtReimbursed:
          type: number
          description: Reimbursed amount will be used as participant's copay responsibility
          format: double
        BenefitMaxMetAmtRequested:
          type: number
          description: 'On an FX or TC, this is the requested amount that is being denied by the insurance company due to the benefit being maxed out in number of visits or limit (such as a limit of 20 Physical Therapy visits per year). WCA can be configured to reimburse this amount since it would otherwise be covered by insurance were it not for the limit.'
          format: double
        BenefitMaxMetAmtReimbursed:
          type: number
          description: 'On an FX or TC, this is the reimbursed amount that is being denied by the insurance company due to the benefit being maxed out in number of visits or limit (such as a limit of 20 Physical Therapy visits per year). WCA can be configured to reimburse this amount since it would otherwise be covered by insurance were it not for the limit.'
          format: double
        ExcessAmtRequested:
          type: number
          description: The participant's Excess Amount responsibility that was requested
          format: double
        ExcessAmtReimbursed:
          type: number
          description: The participant's Excess Amount responsibility that was reimbursed
          format: double
        NotCoveredAmtRequested:
          type: number
          description: The amount the insurance carrier deemed as "not covered" by insurance but was still requested. It can be used in adjudication as a participant reimbursable liability amount.
          format: double
        NotCoveredAmtReimbursed:
          type: number
          description: The amount the insurance carrier deemed as "not covered" by insurance but was still reimbursed. It can be used in adjudication as a participant reimbursable liability amount.
          format: double
        AboveRCAmtRequested:
          type: number
          description: 'On an FX or TC claim or a participant “save expense” for later, this is the requested amount above the usual and customary rate – for an out of network claim, it’s the amount the provider billed minus the insurance allowed amount. WCA can be configured to reimburse this amount by service category tier.'
          format: double
        AboveRCAmtReimbursed:
          type: number
          description: 'On an FX or TC claim or a participant “save expense” for later, this is the reimbursed amount above the usual and customary rate – for an out of network claim, it’s the amount the provider billed minus the insurance allowed amount. WCA can be configured to reimburse this amount by service category tier.'
          format: double
        InsurancePaidAmount:
          type: number
          description: This is the amount that the insurance provide paid of the billed amount for the service and is only used for display; no system business rules are performed using this amount.
          format: double
        PlanID:
          type: string
          description: Unique ID of the benefit plan
        AccTypeCode:
          type: string
          description: 'The Account Type Code for the transaction, such as FSA, FS2, etc.'
        PlanStartDate:
          type: string
          description: Date when the plan starts
        PlanEndDate:
          type: string
          description: Date when the plan ends
        MerchantName:
          type: string
          description: Merchant Name of merchant associated with provider
        MerchantID:
          type: string
          description: Unique identification ID for a provider or vendor
        MCC:
          type: string
          description: Merchant category code used to create transaction
        OriginalMCC:
          type: string
          description: MCC attached while initiating claim
        Amount:
          type: number
          description: 'The purpose of this field varies, depending on the Type Code. TC Claim (5) or Member Expense (4): Total Patient Responsibility Amount. Manual Claim (3): Original claim amount. If Denied or (pended and has pended comment): EligibleAmt + TxnAmtPended + TxnAmtDenied HSA Bill Pay (10): Txn Amount. FX Claims (1): Total Reimbursed Amount'
          format: double
        TransactionCode:
          type: integer
          description: Code to identify the type of transaction.  11 = Purchase  12 = PreAuth  13 = ForcePost  14 = Refund  20 = EmployerDeposit  21 = PrefundedDeposit  22= AutoDeposit   23 = Adjustment  24 = Void  25 = PrefundedDepositReset  26 = BalanceSyncAdjustment  27 = IndividualAmt  28 = IndividualAmtReset  29 = HsaImported  30 = OtherDeposit 31 = RolloverDeposit 32 = FamilyRolloverDeposit 33 = FamilyOther Deposit
          format: int32
        TransactionStatus:
          type: integer
          description: Current status of the transaction. Valid values are   2 -Approved  4- Ineligible  8- Pending  16 - Resolved Employee Pay  32 - Resolved Payroll Deduction   64 - New   128 - Denied   256 - Unkown   512 - Resolved No Refund   1024 - Ineligible Partially Offset  2048 - Resolved Offset by Manual Claim  4096 - Unauthorized Refund  8192 - Insufficient Documentation  16384 - Entered but not reviewed 32768 - Reversed 65536 – Claim Reversal 131072 - Overpayment 262144 -Overpayment Partially Resolved 524288 – Overpayment Resolved 1048576 – Non-post 2097153 - Returned 4194304 - Resubmitted
          format: int32
        TransactionDate:
          type: string
          description: Date when the transaction is made
          format: date-time
        ConvFeePayerCode:
          type: integer
          description: Convenience Fee Payer Code. This indicates who paid a convenience fee. None = 1 (indicates no fee is set up) Tpa = 2  Employer = 3 Employee = 4
          format: int32
        DisbursableBal:
          type: number
          description: 'Disbursable Balance: The remaining balance in the account. For account types other than HSA, this is the “Disbursable Balance.” For HSAs, this is the “Available Balance”'
          format: double
        IsDependent:
          type: boolean
          description: 'Indicates if a dependent is associated ` 1= Yes, 0 = No'
        EmpeDepID:
          type: string
          description: 'If the transaction is for the employee, this will be the Employee ID.  If the transaction is for the dependent, this will be the Dependent ID.'
        OrgTransactionDate:
          type: string
          description: Date when the original transaction occurred
          format: date-time
        SeqNum:
          type: string
          description: Unique number assigned to transactions in WCA
        SettlementDate:
          type: string
          description: Date when the transaction settlement occurred
        SettlementSeqNum:
          type: integer
          description: A unique identifier for the transaction generated by WCA during the settlement process.
          format: int32
        TerminalCity:
          type: string
        TerminalState:
          type: string
        TerminalName:
          type: string
        TerminalOwnerName:
          type: string
        TerminalID:
          type: string
        TransactionKey:
          type: string
          description: Unique identifier applied to the Transaction in WCA.
        CheckTraceNum:
          type: string
          description: 'If WCA has this information, this will be the check number for the reimbursement.'
        ReimbDate:
          type: string
          description: Date when the reimbursement occurred
        ReimbMethod:
          type: integer
          description: 'Method used for reimbursement Undefined = -1, None = 0, Check = 1, DirectDeposit = 2, ExternalCheck = 3, ExternalDirectDeposit = 4,Card = 5, Payroll = 6'
          format: int32
        OffsetAmount:
          type: number
          description: '`The amount of the transaction that was eligible to be applied to a participant’s account but was used to offset a participant’s balance due for that account.'
          format: double
        IsPartialAuth:
          type: boolean
          description: 'Indicates if the transaction is partially authorized. ` 1= Yes, 0 = No'
        Notes:
          type: string
          description: Notes entered by user related to the transaction
        IsCheckReissued:
          type: boolean
          description: 'Indicates if the Check is reissued. 1 = Yes, 0 = No'
        SCC:
          type: string
          description: Service category code used to create transaction
        SCCDesc:
          type: string
          description: Description to Service category code used to create transaction
        DepositSubTypeID:
          type: string
          description: The sub-type code for an Other Deposit Sub-Type
        TransactionDesc:
          type: string
          description: 'For claims, the SCC description + the Merchant name (Note: a <BR> tag is included to separate the two fields). For Card transactions, the Merchant Name. For other transactions, the type of transaction'
        DeniedAmount:
          type: number
          description: 'The amount of the claim that was denied by the claims processor. '
          format: double
        ExcludedAmount:
          type: number
          description: 'The amount that was either paid from other accounts (or applied to DTR account) or the amount eligible to be reimburse was reduced by a business rule such as a Service Category %, Max Transaction amount or max total amount.'
          format: double
        ExcludedReason:
          type: string
          description: The reason for the excluded amount on a claim.  An excluded amount is due to a system business rule that reduces what is eligible for reimbursement such as an amount paid by a higher priority account or a max transaction amount.
        LowFundsAmount:
          type: number
          description: The amount that exceeded the participants balance at the time the transaction was processed.
          format: double
        EligibleAmount:
          type: number
          description: 'The amount of the total claim minus the excluded, pending and denied amounts equals the Eligible Amount. Formula: Total Claim – Excluded Amount – Pended Amount – Denied Amount = Eligible Amount'
          format: double
        DeductibleAmount:
          type: number
          description: 'The amount that was applied to the Deductible for Deductible manager enabled plans. '
          format: double
        PendedAmount:
          type: number
          description: Amount of the claim that the claims processor needs additional information form the participant in order to approve or deny the claim Pended.
          format: double
        IsPayProvider:
          type: boolean
          description: 'Indicates if the transaction is associated with a pay provider. ` 1= Yes, 0 = No'
        CardProxyNum:
          type: string
          description: Proxy number of the card
        ServiceStartDate:
          type: string
          description: Start date of the service provided to the participant that the transaction is for
          format: date-time
        ServiceEndDate:
          type: string
          description: 'Ending date of the service for the claim line provided to the participant '
          format: date-time
        RecurrenceStartDate:
          type: string
          description: 'For a recurring claim, indicates the start date for the recurrence'
          format: date-time
        RecurrenceEndDate:
          type: string
          description: 'For a recurring claim, indicates the end date for the recurrence'
          format: date-time
        RecurrenceFrequency:
          type: string
          description: 'For a recurring claim, indicates the frequency of recurrence '
        RecurrenceNextRunDate:
          type: string
          description: 'For a recurring claim, this is the date when the next recurring transaction will be made'
          format: date-time
        RecurrenceLastRunDate:
          type: string
          description: 'For a recurring claim, indicates the date when the last transaction of the series was made'
          format: date-time
        RecurrenceMadeNum:
          type: integer
          description: 'For a recurring claim, this would be the total number of payments that are to be made'
          format: int32
        RecurrencePendingNum:
          type: integer
          description: 'For a recurring claim, this would be the number of payments remaining in the series'
          format: int32
        HSACodeDesc:
          type: string
          description: 'Refers to the IRS reporting category associated with the HSA account transaction, derived from the transaction type or the product partner HSA Status Code'
        RemainingBalanceDue:
          type: number
          description: 'When a participant’s debit card transaction is marked as ineligible, or if a reimbursement is issued which is later reversed, the ineligible or reversed amount is tracked as a ‘balance due’ and the participant must pay it back. This field returns the amount the participant still owes.'
          format: double
        IneligibleAmount:
          type: number
          description: The Ineligible Amount of the transaction
          format: double
        IneligibleReason:
          type: string
          description: 'The reason the Ineligible Amount provided is ineligible. '
        OriginCode:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: Origin Code indicates which way claims initiated - Mobile/Web Portal/eClaim
        OriginCodeDesc:
          type: string
          description: A human friendly description that corresponds to OriginCode
        ReasonPendedForClaim:
          type: string
          description: Reason provided for pended claims
        PendedCommentForClaim:
          type: string
          description: Text of any comments added to the claim when an amount was marked pended
        ReasonDeniedForClaim:
          type: string
          description: Reason provided for denied claims
        DeniedCommentForClaim:
          type: string
          description: Comment added to claim by claims processor explaining why it was denied
        ProviderName:
          type: string
          description: Name of the pay provider
        ProviderAddressLine1:
          type: string
          description: First line of the provider’s mailing address
        ProviderAddressLine2:
          type: string
          description: Second line of the provider’s mailing address
        ProviderCity:
          type: string
          description: City associated with the provider’s mailing address
        ProviderState:
          type: string
          description: State associated with the provider’s mailing address
        ProviderZipCode:
          type: string
          description: Zip Code associated with the provider’s mailing address
        TxnHoldKey:
          type: integer
          description: 'A unique identifier key generated by WCA when a hold is created, used to identify the hold information'
          format: int32
        TaskScheduleKey:
          type: integer
          description: 'For a recurring claim, this is a unique identifier for task scheduling for a recurring payment'
          format: int32
        HSAHoldBalance:
          type: number
          description: On hold amount balance of the HSA account
          format: double
        PostingDate:
          type: string
          description: Date when the transaction is posted
          format: date-time
        CardNumber:
          type: string
          description: Card proxy number of the Participant
        OrigTxnAmt:
          type: number
          description: 'Origin Txn Amount is total of approved amt,pended amt and denied amt'
          format: double
        OrigTxnOnholdDate:
          type: string
          description: Date when the claim was put on hold
          format: date-time
        CheckTraceNumStatus:
          type: string
          description: 'Returns the status of a check reimbursemement. If transaction is an HSA Import, Auto Deposit, or Other deposit, this field will be empty. If the check trace number exists and has been reissued, this field return the check trace number + a superscript “r” (i.e., 1234r) If the check trace number exists and this was an external check, this field will return the check trace number + a superscript “e” (i.e., 1234e) If the transaction was submitted manually, and was not denied, this will return “Pending Reimbursement" If the transaction was submitted manually, was not denied, and the reimbursement method is card, this will return “Card” If the transaction was submitted manually, was not denied, and the reimbursement method is external check, this will return “Pending External Reimbursement” If the transaction was submitted manually, is fully offset, and fully deductible, this will return “Offset / Deductible” If the transaction was submitted manually and is fully offset and overpayment is resolved, this will return “Offset” If the transaction was submitted manually and is fully deductible, this will return “Deductible” If the transaction was submitted manually, is partially offset and the reimbursement method is external check or external direct deposit, this will return the check trace number with a superscript “e” + “ / Offset” (i.e., “1234e / Offset”) If the transaction was submitted manually, is partially offset, the reimbursement method is check or direct deposit, and the check has been reissued, this will return the check trace number with a superscript “r” + “ / Offset” (i.e., “1234r / Offset”) If the transaction was submitted manually, is partially offset, and a check trace number exists, this will return the check number + “ / Offset” (i.e., “1234 / Offset”) If the transaction was submitted manually, is partially offset, the reimbursement method is external check or external direct deposit, and a check trace number doesnot exist, this will return “Pending External Reimbursement / Offset” If the transaction was submitted manually, reimbursememt method is check, direct deposit, or payroll, the transaction is partially offset, the overpayment is partially resolved, and there is no check trace number, this will return “Pending Reimbursement / Offset” If the transaction was submitted manually, reimbursement is set to “None,” the transaction is partially offset, and the overpayment is partially resolved, this will return “None / Offset” If the transaction does not meet any of the above criteria but a check trace number exists, this will return the check trace number. Otherwise, this field will be empty.'
        ReimbAmt:
          type: number
          description: Total Amount of transaction which got reimbursed
          format: double
        TxnAmtOrig:
          type: number
          description: Transaction amount entered when the claim or transaction was first entered.  The actual transaction amount may be different after adjustments.
          format: double
        ApprovedAmount:
          type: number
          description: 'The Approved amount is the amount that was debited from (refund: credited to) for this adjudicated claim'
          format: double
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Details of attached receipt for claims
      description: ''
    BenSoft.Contracts.DataContracts._0221.TransactionDetailsEx:
      type: object
      properties:
        TxnTotalAmount:
          type: number
          format: double
        CopayAmount:
          type: number
          format: double
        CoinsuranceAmount:
          type: number
          format: double
        EmployeePaidAmount:
          type: number
          format: double
        PreviousPaidAmount:
          type: number
          format: double
        ReimbursableAmount:
          type: number
          format: double
        ExcludedReasonDesc:
          type: string
        TaxYear:
          type: string
          description: Tax Year
        PreTaxAmt:
          type: number
          description: Pre Tax Amount
          format: double
        PostTaxAmt:
          type: number
          description: Post Tax Amount
          format: double
        ReimburseKey:
          type: integer
          description: Represents a system generated identifier for the reimbursement which can be used to retrieve the reimbursement details in a separate request.
          format: int32
        PaymentId:
          type: string
          description: 'Represents the draft # issued by our Integrated Payment vendor.'
        PayoutMethod:
          type: string
          description: 'Represents the payment method used by the participant or our Integrated Payment vendor. Valid methods include Pending, Check, Direct Deposit, External Check, External Direct Deposit, Card, Payroll, ePay-ACH, ePay-Virtual Card, and ePay-eCheck.'
        ErrorCode:
          type: integer
          description: Error Code
          format: int32
        ErrorDesc:
          type: string
          description: Error Description
        TrackingNumber:
          type: string
          description: Tracking Number
        ExternalClaimID:
          type: string
          description: Unique ID of the external claims
        ServiceCategoryTier:
          type: integer
          description: Service category tier if multiple SCC attached to it
          format: int32
        ClaimLine:
          type: integer
          description: Refers to claim when multiple claim submitted
          format: int32
        ServiceProcedureCode:
          type: string
          description: "CPT, HCPCS or other service procedure type. This information is stored in the system for display to the administrator and participant\r\nIt is not used by the system to determine whether a claim is eligible"
        BilledAmt:
          type: number
          description: 'On an FX or TC claim or a participant added expense, this is the amount the provided billed to insurance. It is for information purposes only and is not used for adjudication. It is intended to help a participant match-up to the full billed amount for a service. For TC/FX Claims this is the summation of all claim lines.'
          format: double
        AllowedAmt:
          type: number
          description: Amount applicable for creating claims
          format: double
        DeductibleAmtRequested:
          type: number
          description: Requested amount will be used as the participant's deductible responsibility
          format: double
        DeductibleAmtReimbursed:
          type: number
          description: Reimbursed amount will be used as the participant's deductible responsibility
          format: double
        CoinsuranceAmtRequested:
          type: number
          description: Amount requested by participant's coinsurance
          format: double
        CoinsuranceAmtReimbursed:
          type: number
          description: Amount reimbursed to participant's coinsurance
          format: double
        CopayAmtRequested:
          type: number
          description: Requested amount will be used as participant's copay responsibility
          format: double
        CopayAmtReimbursed:
          type: number
          description: Reimbursed amount will be used as participant's copay responsibility
          format: double
        BenefitMaxMetAmtRequested:
          type: number
          description: 'On an FX or TC, this is the requested amount that is being denied by the insurance company due to the benefit being maxed out in number of visits or limit (such as a limit of 20 Physical Therapy visits per year). WCA can be configured to reimburse this amount since it would otherwise be covered by insurance were it not for the limit.'
          format: double
        BenefitMaxMetAmtReimbursed:
          type: number
          description: 'On an FX or TC, this is the reimbursed amount that is being denied by the insurance company due to the benefit being maxed out in number of visits or limit (such as a limit of 20 Physical Therapy visits per year). WCA can be configured to reimburse this amount since it would otherwise be covered by insurance were it not for the limit.'
          format: double
        ExcessAmtRequested:
          type: number
          description: Requested amount will be used as the participant's Excess Amount responsibility
          format: double
        ExcessAmtReimbursed:
          type: number
          description: Reimbursed amount will be used as the participant's Excess Amount responsibility
          format: double
        NotCoveredAmtRequested:
          type: number
          description: Requested amount  which was not covered by the insurance plan
          format: double
        NotCoveredAmtReimbursed:
          type: number
          description: Reimbursed amount  which was not covered by the insurance plan
          format: double
        AboveRCAmtRequested:
          type: number
          description: 'On an FX or TC claim or a participant “save expense” for later, this is the reimbursed amount above the usual and customary rate – for an out of network claim, it’s the amount the provider billed minus the insurance allowed amount. WCA can be configured to reimburse this amount by service category tier.'
          format: double
        AboveRCAmtReimbursed:
          type: number
          description: 'On an FX or TC claim or a participant “save expense” for later, this is the requested amount above the usual and customary rate – for an out of network claim, it’s the amount the provider billed minus the insurance allowed amount. WCA can be configured to reimburse this amount by service category tier.'
          format: double
        InsurancePaidAmount:
          type: number
          description: Amount paid for insurance
          format: double
        PlanID:
          type: string
          description: Unique ID of the benefit plan
        AccTypeCode:
          type: string
          description: 'The Account Type Code for the transaction, such as FSA, FS2, etc.'
        PlanStartDate:
          type: string
          description: Date when the plan starts
        PlanEndDate:
          type: string
          description: Date when the plan ends
        MerchantName:
          type: string
          description: Merchant Name of merchant associated with provider
        MerchantID:
          type: string
          description: Unique identification ID for a provider or vendor
        MCC:
          type: string
          description: Merchant category code used to create transaction
        OriginalMCC:
          type: string
          description: MCC attached while initiating claim
        Amount:
          type: number
          description: Transaction Amount
          format: double
        TransactionCode:
          type: integer
          description: Code to identify the nature/type of transaction
          format: int32
        TransactionStatus:
          type: integer
          description: Current status of the transaction
          format: int32
        TransactionDate:
          type: string
          description: Date when the transaction is made
          format: date-time
        ConvFeePayerCode:
          type: integer
          description: "Convenience Fee Payer Code:\r\nNone = 1, Tpa = 2, Employer = 3, Employee = 4"
          format: int32
        DisbursableBal:
          type: number
          description: Amount disbursed till now for this account
          format: double
        IsDependent:
          type: boolean
          description: 'Indicates if a dependent is associated ` 1= Yes, 0 = No'
        EmpeDepID:
          type: string
          description: Employee's Dependent ID
        OrgTransactionDate:
          type: string
          description: Date when the original transaction occurred
          format: date-time
        SeqNum:
          type: string
          description: Sequence number to transaction when multiple transaction created
        SettlementDate:
          type: string
          description: Date when the transaction settlement identified
        SettlementSeqNum:
          type: integer
          description: 'In case of split transaction, this sequence number can identify the transaction uniquely among the set of transactions'
          format: int32
        TerminalCity:
          type: string
          description: Terminal City
        TerminalState:
          type: string
          description: Terminal State
        TerminalName:
          type: string
          description: Terminal Name
        TerminalOwnerName:
          type: string
          description: Terminal Owner Name
        TerminalID:
          type: string
          description: Terminal ID
        TransactionKey:
          type: string
          description: Unique identifier key to store the transaction
        CheckTraceNum:
          type: string
          description: 'If WCA has this information, this will be the check number for the reimbursement.'
        ReimbDate:
          type: string
          description: Date when the reimbursement occurred
        ReimbMethod:
          type: integer
          description: "Method used for reimbursement\r\nUndefined = -1, None = 0, Check = 1, DirectDeposit = 2, ExternalCheck = 3, ExternalDirectDeposit = 4,\r\nCard = 5, Payroll = 6"
          format: int32
        OffsetAmount:
          type: number
          description: Balance due amount
          format: double
        IsPartialAuth:
          type: boolean
          description: 'Indicates if the transaction is partially authorized. ` 1= Yes, 0 = No'
        Notes:
          type: string
          description: Notes entered by user related to the transaction
        IsCheckReissued:
          type: boolean
          description: 'Indicates if the Check is reissued. 1 = Yes, 0 = No'
        SCC:
          type: string
          description: Service category code used to create transaction
        SCCDesc:
          type: string
          description: Description to Service category code used to create transaction
        DepositSubTypeID:
          type: string
          description: A unique text ID of the subtype
        TransactionDesc:
          type: string
          description: Quick description which can show the purpose of the transaction
        DeniedAmount:
          type: number
          description: Amount denied in FX claim
          format: double
        ExcludedAmount:
          type: number
          description: Amount not considered for reimbursement
          format: double
        ExcludedReason:
          type: string
          description: Reason to excluding the amount for a claim
        LowFundsAmount:
          type: number
          description: Indicate low fund balance in account
          format: double
        EligibleAmount:
          type: number
          description: Amount eligible for FX claim
          format: double
        DeductibleAmount:
          type: number
          description: Amount will be used as the participant's deductible responsibility
          format: double
        PendedAmount:
          type: number
          description: Amount provided to create pending claims
          format: double
        IsPayProvider:
          type: boolean
          description: 'Indicates if the transaction is associated with a pay provider. ` 1= Yes, 0 = No'
        CardProxyNum:
          type: string
          description: Proxy number of the card
        ServiceStartDate:
          type: string
          description: Start date of the transaction
          format: date-time
        ServiceEndDate:
          type: string
          description: End date of the transaction
          format: date-time
        RecurrenceStartDate:
          type: string
          description: Start date of the recurring claims
          format: date-time
        RecurrenceEndDate:
          type: string
          description: End date of the recurring claim
          format: date-time
        RecurrenceFrequency:
          type: string
          description: 'Provides the information on how frequent the recurrent transaction occurs. Example: Daily, Weekly, Monthly'
        RecurrenceNextRunDate:
          type: string
          description: Date when the next recurrence transaction will occurr
          format: date-time
        RecurrenceLastRunDate:
          type: string
          description: Date when the last recurrence transaction occurred
          format: date-time
        RecurrenceMadeNum:
          type: integer
          description: It is equivalent to RecurrenceTotalNumber
          format: int32
        RecurrencePendingNum:
          type: integer
          description: Number of recurrence transaction pending
          format: int32
        HSACodeDesc:
          type: string
          description: Description related to the HSA plan
        RemainingBalanceDue:
          type: number
          description: Balance due amount from the employee account
          format: double
        IneligibleAmount:
          type: number
          description: Ineligible amount is amount denied in card transaction
          format: double
        IneligibleReason:
          type: string
          description: Reason for ineligible amount in card transaction
        OriginCode:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: Origin Code indicates which way claims initiated - Mobile/Web Portal/eClaim
        OriginCodeDesc:
          type: string
          description: Description for which way claims initiated
        ReasonPendedForClaim:
          type: string
          description: Reason provided for pended claims
        PendedCommentForClaim:
          type: string
          description: Description for creating pended claims
        ReasonDeniedForClaim:
          type: string
          description: Reason provided for denied claims
        DeniedCommentForClaim:
          type: string
          description: Comment given on denial of FX claim
        ProviderName:
          type: string
          description: Name of the pay provider
        ProviderAddressLine1:
          type: string
          description: First line of the provider’s mailing address
        ProviderAddressLine2:
          type: string
          description: Second line of the provider’s mailing address
        ProviderCity:
          type: string
          description: City associated with the provider’s mailing address
        ProviderState:
          type: string
          description: State associated with the provider’s mailing address
        ProviderZipCode:
          type: string
          description: Zip Code associated with the provider’s mailing address
        TxnHoldKey:
          type: integer
          description: Unique identifier key to store the on hold information of a transaction
          format: int32
        TaskScheduleKey:
          type: integer
          description: Unique identifier key to store the task schedule
          format: int32
        HSAHoldBalance:
          type: number
          description: On hold amount balance of the HSA account
          format: double
        PostingDate:
          type: string
          description: Date when the transaction is posted
          format: date-time
        CardNumber:
          type: string
          description: Card proxy number of the Participant
        OrigTxnAmt:
          type: number
          description: 'Origin Txn Amount is total of approved amt,pended amt and denied amt'
          format: double
        OrigTxnOnholdDate:
          type: string
          description: Date when the claim was put on hold
          format: date-time
        CheckTraceNumStatus:
          type: string
          description: 'Returns the status of a check reimbursemement. If transaction is an HSA Import, Auto Deposit, or Other deposit, this field will be empty. If the check trace number exists and has been reissued, this field return the check trace number + a superscript “r” (i.e., 1234r) If the check trace number exists and this was an external check, this field will return the check trace number + a superscript “e” (i.e., 1234e) If the transaction was submitted manually, and was not denied, this will return “Pending Reimbursement" If the transaction was submitted manually, was not denied, and the reimbursement method is card, this will return “Card” If the transaction was submitted manually, was not denied, and the reimbursement method is external check, this will return “Pending External Reimbursement” If the transaction was submitted manually, is fully offset, and fully deductible, this will return “Offset / Deductible” If the transaction was submitted manually and is fully offset and overpayment is resolved, this will return “Offset” If the transaction was submitted manually and is fully deductible, this will return “Deductible” If the transaction was submitted manually, is partially offset and the reimbursement method is external check or external direct deposit, this will return the check trace number with a superscript “e” + “ / Offset” (i.e., “1234e / Offset”) If the transaction was submitted manually, is partially offset, the reimbursement method is check or direct deposit, and the check has been reissued, this will return the check trace number with a superscript “r” + “ / Offset” (i.e., “1234r / Offset”) If the transaction was submitted manually, is partially offset, and a check trace number exists, this will return the check number + “ / Offset” (i.e., “1234 / Offset”) If the transaction was submitted manually, is partially offset, the reimbursement method is external check or external direct deposit, and a check trace number doesnot exist, this will return “Pending External Reimbursement / Offset” If the transaction was submitted manually, reimbursememt method is check, direct deposit, or payroll, the transaction is partially offset, the overpayment is partially resolved, and there is no check trace number, this will return “Pending Reimbursement / Offset” If the transaction was submitted manually, reimbursement is set to “None,” the transaction is partially offset, and the overpayment is partially resolved, this will return “None / Offset” If the transaction does not meet any of the above criteria but a check trace number exists, this will return the check trace number. Otherwise, this field will be empty.'
        ReimbAmt:
          type: number
          description: Amount of transaction which got reimbursed
          format: double
        TxnAmtOrig:
          type: number
          description: Transaction amount enterd first time while creating claim
          format: double
        ApprovedAmount:
          type: number
          description: Amount approved for the Transaction
          format: double
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Details of attached receipt for claims
      description: "<author>Koteswara Rao</author>\r\n<Version>21.02.00</Version>\r\n<date>Dec 08, 2020</date>"
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-DependentSummaryArr:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DependentSummary'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DependentSummary:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmprId:
          type: string
          description: 'Unique identifier for the employer. Note: When an employer is created, WealthCare Admin assigns the 3-character prefix; you assign the remaining characters.'
        DepId:
          type: string
          description: Unique identifier for the dependent
        FirstName:
          type: string
          description: The full first name of the dependent
        LastName:
          type: string
          description: The full last name of the dependent
        MiddleInitial:
          type: string
          description: The middle initial of the dependent. This will be an empty string if no middle initial exists.
        NamePrefix:
          type: string
          description: 'Name Prefix of the dependent. If populated, valid values are Mr., Mrs., Ms., Dr., Rev.'
        EmpeId:
          type: string
          description: The Employee ID of the employee the dependent is associated with.
        EmpeFullName:
          type: string
          description: 'This is the full name of the employee the dependent is associated with.  The format is “{Last Name}, {First Name} {Middle Initial}”'
        Relationship:
          enum:
            - Unknown
            - SpouseorCommonLawSpouse
            - Child
            - DomesticPartner
            - Other
          type: string
          description: Indicated relation of Dependent to Employee.
        DependentStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: Activity status for the dependent
    BenSoft-Contracts-DataContracts-ParticipantClaimArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.ParticipantClaim'
    BenSoft-Contracts-DataContracts-_0218-ParticipantNotificationArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0218.ParticipantNotification'
    BenSoft.Contracts.DataContracts.Mobile.EnrollUserRequest:
      type: object
      properties:
        UserId:
          type: string
        Email:
          type: string
        ChallengeQs:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.QAPairType'
        Phrase:
          type: string
        SelectImage:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Image'
    BenSoft.Contracts.DataContracts.Mobile.QAPairType:
      type: object
      properties:
        QuestionId:
          type: string
        AnswerId:
          type: string
        UserAnswer:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Image:
      type: object
      properties:
        ImageInfo:
          type: string
        ImageStream:
          type: string
    BenSoft-Contracts-DataContracts-_0717-ParticipantClaimArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.ParticipantClaim'
    BenSoft-Contracts-DataContracts-Mobile-Business-Portal-DownloadableFormArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm'
    BenSoft.Contracts.DataContracts.Mobile.Business.Portal.DownloadableForm:
      type: object
      properties:
        FileDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FileDetails'
        TpaId:
          type: string
          description: Unique id of the TPA
        InfoKey:
          type: integer
          description: Portal Info Key
          format: int32
        InfoName:
          type: string
          description: Portal Info Name
        InfoDesc:
          type: string
          description: Portal Info Description
        InfoDate:
          type: string
          description: Portal Info Date
          format: date-time
        ExpireDate:
          type: string
          description: Portal Info Expiration Date
          format: date-time
        LastUpdateDate:
          type: string
          description: Date in which Portal Info was last updated
          format: date-time
        EmployerIdList:
          type: array
          items:
            type: string
          description: List of Employer IDs
        VisibilityIsGlobal:
          type: boolean
          description: "Global Visibility.\r\nTrue = Visible to the participant.\r\nFalse = Not visible to the participant."
        VisibilityIsNone:
          type: boolean
          description: "No Visibility.\r\nTrue = Not visible to the participant.\r\nFalse = Visible to the participant."
      description: Downloadable Form
    BenSoft.Contracts.DataContracts.Mobile.Business.Portal.FileDetails:
      type: object
      properties:
        FileKey:
          type: integer
          description: File Key
          format: int32
        FileFormat:
          enum:
            - All
            - Unknown
            - Fixed
            - Csv
            - Xml
            - Pdf
            - Qif
            - Excel
            - Jpeg
            - Gif
            - Bmp
            - FixedNacha
            - Delimited
            - Word
            - Png
            - Tiff
            - ExtFileFormat
          type: string
        ContentLength:
          type: integer
          description: 'The file length, in bytes.'
          format: int32
        ContentType:
          type: string
          description: The MIME content type of the uploaded file.
        FileName:
          type: string
          description: 'The name of the client''s file, including the directory path.'
        InputStream:
          type: string
          description: A System.IO.Stream pointing to a file.
          format: byte
        Base64:
          type: string
          description: The string representation in Base 64 of the file content.
      description: File Details
    BenSoft.Contracts.DataContracts._0717.ParticipantClaim:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        TransactionDate:
          type: string
          description: Date of the transaction
          format: date-time
        ServiceStartDate:
          type: string
          description: Service Start Date for the claim
          format: date-time
        ServiceEndDate:
          type: string
          description: Service End Date for the claim
          format: date-time
        Type:
          type: string
          description: 'A code indicating the type of transaction this is: Deposit = 0, Card = 1, Bank = 2, HSA Online Recurring Payment = 3, HSA Online Single Payment = 4, Fee = 5, Transfer = 6, ACH Credit = 7, ACH Debit = 8, Check = 9, Commission = 10, Interest Payment = 11, Recurring Claim = 12, Claim = 13, Manual Claim = 14, Fee Paid To Admin = 15, Fee Paid By Admin = 16, Fee Paid To Employer = 17, Fee Paid By Employer = 18'
        Claimant:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Employee.Claimant'
        AcctTypeCde:
          type: string
          description: The account type code for the benefit account the claim is processed under.
        AcctTypeDesc:
          type: string
          description: The account type description for the benefit account the claim is processed under.
        AccountKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under.
          format: int32
        PlanStartDate:
          type: string
          description: Plan Start Date for the account the claim is processed under
          format: date-time
        PlanEndDate:
          type: string
          description: Plan End Date for the account the claim is processed under
          format: date-time
        Status:
          type: string
          description: Claim status
        TxnAmt:
          type: number
          description: Transaction Amount
          format: double
        FlexAcctKey:
          type: integer
          description: A system generated ID for the benefit account the claim is processed under. Same value as AccountKey
          format: int32
        TxnAmtOrig:
          type: number
          description: Original Transaction Amount
          format: double
        TxnAmtDenied:
          type: number
          description: Transaction Denied Amount
          format: double
        TxnAmtPending:
          type: number
          description: Transaction Pending Amount
          format: double
        TxnCde:
          type: integer
          description: Transaction Code
          format: int32
        TxnMsg:
          type: string
          description: Transaction Message
        TxnAmtRefund:
          type: number
          description: Transaction Refund Amount
          format: double
        TxnOriginCde:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
          description: 'Transaction Origin Code: None = 0, POSCardSwipe = 1, POSKeyedIn = 2, POSPhonedIn = 3, POSMbiSubmitted = 4, ManualScreen = 50, ManualEFT = 51, ManualAgent = 52, ParticipantManualScreen = 53, ParticipantMobileScreen = 54, HZDirect = 55, eClaimManagerManual = 56, eClaimManagerTPS = 57, WebServiceClaim = 58'
        TxnOptions:
          enum:
            - None
            - IncludeNoteInReceiptNotificationLetter
            - ResolveRefund
            - IncludeNoteInDenialLetter
            - GenerateDenialLetter
            - IsDuplicate
            - DenialLetterReportKeyGenerated
            - WasChargedBack
            - IsAChargeback
            - ChargebackWasReversed
            - IsAChargebackReversal
            - EligibleForPOSOffset
            - ManualClaimFullyOffset
            - ManualClaimPartiallyOffset
            - ReimbLetterGenerated
            - ReissueCheckPending
            - PartialAuthInd
            - PartialAuthorized
            - HideOrigOnHoldTxn
            - CheckVoided
            - IiasMerchant
            - CheckReissued
            - TxnReissued
            - OverrideSuspendActivity
            - OnHoldFlg
            - DenialOverride
            - ReduceForBalanceMax
            - BypassDeductibleRule
            - PrimaryRolloverTxn
            - FixedEmprFundingDeposit
            - SplitTxn
            - ByPassPercentCoverage
            - EnforceParticipantEligibility
            - EnforceAccountEligibility
            - ManualClaimFullyDeductible
            - PendingVerify
            - CrossOverClaim
            - SkipDuplicateClaimCheck
            - PayProvider
            - PendingLetter2
            - Reprocessed
            - PendedWorkflow
            - NachaGenearated
            - CurrentReprocessed
            - EmployerEnteredDeposits
            - PayrollFundingDeposit
            - FutureDeposited
            - PendingDepositProcessed
            - TxnWasReimbursed
            - PendingExternalDepositVoid
            - PriorYearContribution
            - OverpaymentPartiallyResolved
            - OverpaymentResolved
            - CopayFirstApplied
            - HideFromReports
            - AutoDepositAgentDeposit
            - ExcludeFromEmployerFunding
            - PayrollNacha
            - ForceExternalNacha
            - OriginatedFromTPSEntry
            - OriginatedFromEClaims
            - CardProcessed
            - SCTierAmountFeatureEnabled
            - EmailSentForPayrollFunding
          type: string
          description: Transaction Options
        BalanceDue:
          type: number
          description: Balance Due
          format: double
        CardHolderDisplay:
          type: boolean
          description: True if the claim the receipt is attached to should display to the participant. False if the claim should not be displayed to the participant.
        ProviderId:
          type: string
          description: Provider Id on the claim
        ProviderDesc:
          type: string
          description: Provider Description on the claim
        FileKey:
          type: integer
          description: A system generated ID used to identify the receipt just uploaded.
          format: int32
        HasReceipt:
          type: boolean
          description: True if the claim has a receipt attached to it.
        ReceiptExpired:
          type: boolean
          description: 'Returns true if the receipt has expired. Returns false if the receipt is still active. If the document routing feature is not enabled, documents are retained for 30 days after the transaction has been adjudicated. If the document routing feature is enabled, documents are stored for three years and then archived. Documents containing eSignatures are stored on the claim as long as the claim is visible in WCA'
        ReceiptsInfo:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Receipts Info
        DisplayableFields:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0717.DisplayableFields'
          description: Displayable Fields
        InsertDate:
          type: string
          description: The date the claim was inserted.
          format: date-time
        UpdateDte:
          type: string
          description: The last update date of the claim
          format: date-time
        InsertUserIdKey:
          type: integer
          description: A system generated ID for the user ID that inserted the claim.
          format: int32
        UpdateUserIdKey:
          type: integer
          description: A system generated ID used to identify the user that last updated the claim
          format: int32
        ExpenseKey:
          type: integer
          description: This will return 0 when on a UploadManualClaimReceipt response.
          format: int64
    BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartner:
      type: object
      properties:
        DataPartnerId:
          type: string
        PartnerName:
          type: string
        Addr1:
          type: string
        Addr2:
          type: string
        City:
          type: string
        State:
          type: string
        CountryCde:
          type: string
        Zip:
          type: string
        Phone:
          type: string
        Fax:
          type: string
        EmailAddr:
          type: string
        PosPhysBankAcctKey:
          type: integer
          format: int32
        ManPhysBankAcctKey:
          type: integer
          format: int32
        InsertDte:
          type: string
          format: date-time
        InsertUserIdKey:
          type: integer
          format: int32
        UpdateDte:
          type: string
          format: date-time
        UpdateUserIdKey:
          type: integer
          format: int32
        NegativeBalanceToEmailAddr:
          type: string
        NegativeBalanceCcEmailAddr:
          type: string
        NegativeBalanceOptions:
          type: integer
          format: int32
        ProcessingTypeCde:
          enum:
            - PBF
            - Transaction
          type: string
        ReconciliationToEmailAddr:
          type: string
        ReconciliationCcEmailAddr:
          type: string
        EligResponseLastRunDte:
          type: string
          format: date-time
        PbfLastRunDte:
          type: string
          format: date-time
        EligImportLastRunDte:
          type: string
          format: date-time
        TransImportLastRunDte:
          type: string
          format: date-time
        TransExportLastRunDte:
          type: string
          format: date-time
        DataPartnerOptions:
          type: integer
          format: int64
        ImsRegion:
          type: string
        DatabaseTwin:
          type: string
        BankDepositNum:
          type: string
        LastSetlDte:
          type: string
        CardFileLastRunDte:
          type: string
          format: date-time
        RequiredFields:
          type: integer
          format: int64
        ProcessingStatus:
          type: integer
          format: int32
        DpstPhysBankAcctKey:
          type: integer
          format: int32
        CurYrTxnCde:
          type: integer
          format: int32
        CurYrNegativeAmtTxnCde:
          type: integer
          format: int32
        PriorYrTxnCde:
          type: integer
          format: int32
        PriorYrNegativeAmtTxnCde:
          type: integer
          format: int32
        AchDescription:
          type: string
        DaysToDelay:
          type: integer
          format: int32
        SsoChannel:
          type: string
        SsoLinkName:
          type: string
        SsoLinkText:
          type: string
        PosPurchCde:
          type: integer
          format: int32
        PosPurchReversalCde:
          type: integer
          format: int32
        PosReturnCde:
          type: integer
          format: int32
        PosReturnReversalCde:
          type: integer
          format: int32
        ManualClaimPmntCde:
          type: integer
          format: int32
        ManualClaimPmntReversalCde:
          type: integer
          format: int32
        ManualClaimRfndCde:
          type: integer
          format: int32
        ManualClaimRfndReversalCde:
          type: integer
          format: int32
        DepositCde:
          type: integer
          format: int32
        DepositReversalCde:
          type: integer
          format: int32
        PayrollFundingDebitOffsetCde:
          type: integer
          format: int32
        ExtFundingDebitOffsetCde:
          type: integer
          format: int32
        PennyCreditPhysBankAcctKey:
          type: integer
          format: int32
        ExtFundingPhysBankAcctKey:
          type: integer
          format: int32
        TpsProcessorKey:
          type: integer
          format: int32
        TpsProcessorId:
          type: string
        AgentUserIdKey:
          type: integer
          format: int32
        ProfileKey:
          type: integer
          format: int32
        FirstName:
          type: string
        LastName:
          type: string
        Initial:
          type: string
        UserStatusCde:
          enum:
            - New
            - Active
            - TempInactive
            - PermInactive
            - TempActive
          type: string
        Pswd:
          type: string
        UserId:
          type: string
        NamePrefix:
          type: string
        UserLastUpdateDte:
          type: string
          format: date-time
        TpsLastUpdateDte:
          type: string
          format: date-time
        TpsProcStatusCde:
          enum:
            - New
            - Active
            - Inactive
          type: string
        RecordIdLength:
          type: integer
          format: int32
        TpsOptions:
          type: integer
          format: int32
        HlthAcctTypeCde:
          type: string
        HlthAcctTypeDesc:
          type: string
        HlthAuxHtml:
          type: string
        Hlt2AcctTypeCde:
          type: string
        Hlt2AcctTypeDesc:
          type: string
        Hlt2AuxHtml:
          type: string
        AcctTypeOptions:
          type: integer
          format: int64
        PosDebitOffsetCde:
          type: integer
          format: int32
        ManualClaimDebitOffsetCde:
          type: integer
          format: int32
        PaperStmtIndAllowed:
          enum:
            - None
            - ElectronicOnly
            - PaperOnly
            - Both
          type: string
        PaperStmtIndDefault:
          type: string
        StmtEffectiveDte:
          type: string
          format: date-time
        DepositsUserId:
          type: string
        DepositsPwd:
          type: string
        RoutingId:
          type: string
        AbaRoutingNum:
          type: string
        InvestmentPartnerId:
          type: string
        InvstTransOutBankAcctKey:
          type: integer
          format: int32
        InvstTransInBankAcctkey:
          type: integer
          format: int32
        InvstTransInOffsetCde:
          type: integer
          format: int32
        InvstTransOutOffsetCde:
          type: integer
          format: int32
        InvstTransInCde:
          type: integer
          format: int32
        InvstFeeTxnCde:
          type: integer
          format: int32
        InvstFeeOffsetCde:
          type: integer
          format: int32
        InvstFeeBankAcctkey:
          type: integer
          format: int32
        InvstTransOutCde:
          type: integer
          format: int32
        InvstDataPartnerId:
          type: string
        RoutingNum:
          type: string
        EmprFundingRoutingNum:
          type: string
        MailingAddress:
          type: string
        PartnerUrl:
          type: string
        CustomerServicePhoneNumber:
          type: string
        DaysToProcess:
          type: integer
          format: int32
        WcaBank:
          type: boolean
        SettleActivity:
          type: boolean
        SetlPhysBankAcctKey:
          type: integer
          format: int32
        NextCheckNum:
          type: integer
          format: int64
        InstructionTxt:
          type: string
        CertificationTxt:
          type: string
        GlAcct:
          type: integer
          format: int32
        OmniBusExist:
          type: boolean
        WcHsaStmtEffectiveDte:
          type: string
          format: date-time
        WcHsaStmtPeriod:
          enum:
            - All
            - None
            - Daily
            - Weekly
            - BiMonthly
            - Monthly
            - Quarterly
            - Yearly
            - SemiMonthly
            - BiWeekly
            - Once
          type: string
        WcHsaStmtDisclosure:
          type: string
        IdvCustomerIdentifier:
          type: string
        PcsGroupId:
          type: integer
          format: int32
        PcsPlanId:
          type: integer
          format: int32
        PcsAccountId:
          type: integer
          format: int32
        PcsSignatureId:
          type: integer
          format: int32
        PcsImgLogoId:
          type: integer
          format: int32
        PcsImgSignId:
          type: integer
          format: int32
        OnlinePayPhysBankAcctNum:
          type: string
        OnlinePayPhysBankRoutingNum:
          type: string
        TaxpayerIdNum:
          type: string
        TaxFormEmailAlertAddr:
          type: string
        DefaultSsoPrtrProfileKey:
          type: integer
          format: int32
        PayerName:
          type: string
        PayerAddr1:
          type: string
        PayerAddr2:
          type: string
        PayerCity:
          type: string
        PayerState:
          type: string
        PayerZip:
          type: string
        PayerCountryCde:
          type: string
        PayerPhone:
          type: string
        EmprFundingOmnibusExist:
          type: boolean
        PCSWcHsaStmtDisclosure:
          type: string
        DaysToWaitForAcknowledgement:
          type: integer
          format: int32
        DisclosureAlertExists:
          type: boolean
        PortfolioId:
          type: string
        ChkLogoFileKey:
          type: integer
          format: int32
        ChkSignatureText:
          type: string
        ChkSignatureFileKey:
          type: integer
          format: int32
        ChkLogoName:
          type: string
        ChkSignName:
          type: string
        FractionalFoutingNum:
          type: string
    ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdGet2:
      type: string
    ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdGet2-2:
      type: string
    BenSoft-Contracts-DataContracts-Business-Statement-StatementResponseArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Statement.StatementResponse'
    BenSoft.Contracts.DataContracts.Business.Statement.StatementResponse:
      type: object
      properties:
        ImageData:
          type: string
          format: byte
        ImageType:
          type: string
        TpaId:
          type: string
        StatementHistKey:
          type: integer
          format: int64
        DataPartnerId:
          type: string
        MailDate:
          type: string
          format: date-time
        ExternalAccountId:
          type: string
        StatementDate:
          type: string
          format: date-time
        StatementOpenDate:
          type: string
          format: date-time
        StatementPreference:
          type: integer
          format: int32
        StatementOptions:
          type: integer
          format: int32
        OrigStmtHistKey:
          type: integer
          format: int64
        ReleaseDate:
          type: string
          format: date-time
      description: ''
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.PDFReaderCheckData:
      type: object
      properties:
        ImageData:
          type: string
          format: byte
        ImageText:
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerTxnRequest:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmptFlexAcctKey:
          type: integer
          format: int32
        AccountKey:
          type: integer
          format: int32
        DataPartnerTxnCode:
          type: string
        ServiceStartDate:
          type: string
        DataPartnerBankAcctKey:
          type: integer
          format: int32
        DataPartnerHsaCde:
          type: integer
          format: int32
        DataPartnerId:
          type: string
        Notes:
          type: string
        TotalAmount:
          type: number
          format: double
        CheckNum:
          type: integer
          format: int32
        AccountNumber:
          type: string
        Description:
          type: string
        ActivityStartDte:
          type: string
          format: date-time
        ActivityEndDte:
          type: string
          format: date-time
        txnOrigin:
          enum:
            - None
            - POSCardSwipe
            - POSKeyedIn
            - POSPhonedIn
            - POSMbiSubmitted
            - ManualScreen
            - ManualEFT
            - ManualAgent
            - ParticipantManualScreen
            - ParticipantMobileScreen
            - HZDirect
            - eClaimManagerManual
            - eClaimManagerTPS
            - WebServiceClaim
          type: string
    BenSoft-Contracts-DataContracts-Mobile-Business-Enrollment-EnrollmentEmpePla:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.EnrollmentEmpePlan'
      description: An array of enrollment plans available for the specified TPA and template key.
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-AccountIntervalTrac:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountIntervalTracker'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.AccountIntervalTracker:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        FlexAcctId:
          type: string
          description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, i.e., "0001699940".'
        IntervalType:
          type: integer
          description: '(None = 0, Month = 1, Year = 2, Quarter = 3)'
          format: int32
        IntervalPeriod:
          type: string
          description: Displays the benefit period the row represents
        SpendingLimit:
          type: number
          description: Displays the maximum allowable spend for the selected interval. The behavior varies based on the limit type selected in benefit plan level
          format: double
        DepositLimit:
          type: number
          description: Maximum amount of contributions or deposits allowed for a participant within a specific benefit interval
          format: double
        LimitType:
          type: string
          description: 'Displays how Spending limits are applied whether to both deposits and transactions, only to deposits, or only to transactions based on the selected configuration at plan level.'
        Contributions:
          type: number
          description: Displays the scheduled contributions or payroll-based deposits made during the selected interval.
          format: double
        AdditionalDeposits:
          type: number
          description: 'Shows any rollover amounts, employer manual deposits, or special one-time funding during the interval.'
          format: double
        SpendingLimitForTheInterval:
          type: number
          description: 'Displays the maximum allowable spend for the selected interval. The behavior varies based on the deposits made into the account. If the Transaction - Total Contributed option is selected, the user is permitted to spend the entire amount deposited within that interval.'
          format: double
        TotalSpent:
          type: number
          description: Shows the total amount of approved claims or card transactions with service dates that fall within the interval.
          format: double
        SpendingLimitRemaining:
          type: number
          description: Displays the remaining spendable amount for the interval.Shown as null if no spending limit is defined.
          format: double
        TotalAccountBalance:
          type: number
          description: 'Reflects the total account balance, including all prior and current contributions, deposits, and unspent funds. This column is shown as N/A when the Spending Limit Type is set to Total Contributed, since rollover is not applicable.'
          format: double
        PlanYears:
          type: array
          items:
            type: integer
          description: Plan years available under the account
    ServicesParticipantHsaBankaccountsValidationTpaIdEmployerIdParticipantIdPost:
      type: boolean
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-ReassociatedDataPar:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReassociatedDataPartnerAccountInfo'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReassociatedDataPartnerAccountInfo:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        FlexAcctId:
          type: string
        ParticipantId:
          type: string
        PlanYrStartDte:
          type: string
        PlanYrEndDte:
          type: string
    BenSoft.Contracts.DataContracts._0218.ParticipantNotification:
      type: object
      properties:
        CommunicationVersion:
          type: integer
          description: "Communication Version. \r\n1 = Legacy Communication, \r\n2 = Premium Communication"
          format: int32
        PreventOptOut:
          type: integer
          description: "Prevent Opt Out. \r\nOption to prevent the participant to opt out from receiving the communication. \r\n1 = Enabled, \r\n0 = Disabled"
          format: int32
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmprId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmployeeId:
          type: string
          description: Employee Id
        DeliveryMethods:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DeliveryMethod'
          description: Delivery Methods
        CustTempType:
          type: integer
          description: Custom Template Type
          format: int32
        CustTempName:
          type: string
          description: Custom Template Name
        CustTempDesc:
          type: string
          description: Custom Template Description
        CustTempOptions:
          type: integer
          description: "Custom Template Options. \r\nBit flags for custom options set on the communication template in WCA."
          format: int64
    ServicesProductItemLookupTpaIdEmployerIdParticipantIdProductCodeGet200Applic:
      type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.DeliveryMethod:
      type: object
      properties:
        MethodName:
          type: string
          description: "Method Name. \r\nPossible delivery methods are: Email, Mobile, None."
        IsSelected:
          type: boolean
          description: "Is Selected. \r\nTrue or False depending on if participant has selected this Delivery Method."
      description: Delivery Method
    BenSoft-Contracts-DataContracts-TransactionActivityPage:
      type: object
      properties:
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        TotalPages:
          type: integer
          format: int32
        TotalCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.TransactionActivity'
    ServicesParticipantTransactionsResubmitfxclaimTpaIdEmployerIdParticipantIdPo:
      type: boolean
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.EmployeeDisclosureAccount:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        DataPartnerId:
          type: string
        DataPartnerOptions:
          type: integer
          format: int64
        EmployeeID:
          type: string
        FlexAccountKey:
          type: integer
          format: int32
        PlanId:
          type: string
        PlanStartDate:
          type: string
        PlanEndDate:
          type: string
        DiscIntroTxt:
          type: string
        DiscLink1Name:
          type: string
        DiscLink1Url:
          type: string
        DiscLink1Desc:
          type: string
        DiscLink2Name:
          type: string
        DiscLink2Url:
          type: string
        DiscLink2Desc:
          type: string
        DiscLink3Name:
          type: string
        DiscLink3Url:
          type: string
        DiscLink3Desc:
          type: string
        DiscLink4Name:
          type: string
        DiscLink4Url:
          type: string
        DiscLink4Desc:
          type: string
        DiscLink5Name:
          type: string
        DiscLink5Url:
          type: string
        DiscLink5Desc:
          type: string
        DiscEndCustomText:
          type: string
        DiscAcceptText:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
    ServicesParticipantCommunicationsTpaIdEmployerIdParticipantIdLetterHistKeyGe:
      type: string
      format: byte
    BenSoft-Contracts-DataContracts-_0521-CardSummaryArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0521.CardSummary'
    BenSoft.Contracts.DataContracts.Business.SecureLogon.OtpEmailRequest:
      type: object
      properties:
        TpaId:
          type: string
        EmployerId:
          type: string
        Email:
          type: string
        SiteURL:
          type: string
    BenSoft-Contracts-DataContracts-Mobile-Business-Communication-CommunicationR:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Communication.CommunicationRequest'
    BenSoft.Contracts.DataContracts.Mobile.Business.Communication.CommunicationRequest:
      type: object
      properties:
        CommunicationRequestKey:
          type: integer
          description: A system generated key used to identify the particular communication message.
          format: int64
        CommunicationRuleType:
          type: integer
          description: A numerical value indicating the type of communication
        CommunicationRuleKey:
          type: integer
          description: A system generated ID used to identify the template used to generate this communication message
          format: int32
        CommunicationRuleName:
          type: string
          description: The name of the template used to generate this communication message
        CommunicationRuleChannels:
          type: integer
          description: 'Specifies the delivery channel through which the participant received the communication message. This is a bitwise value which can indicate multiple options (I.e., a 3 represents both email and SMS)'
        Subject:
          type: string
          description: The title of the communication message; sent as the subject in an email message.
        InsertDte:
          type: string
          description: The date the communication message was created
          format: date-time
        UpdateDte:
          type: string
          description: The date the communication message was last updated
          format: date-time
        CommunicationVersion:
          type: integer
          description: Indicates which version of communication this is.  A one indicates the standard WCA communication offerings.  A two will be used for future offerings.
          format: int32
        ReadDte:
          type: integer
          description: The date the communication message was read by the participant
          format: int32
          nullable: true
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.CommunicationMessage:
      type: object
      properties:
        DocumentFileType:
          enum:
            - Unknown
            - ClaimReceiptQueue
            - POSReceiptQueue
            - ClaimEntryWorkQueue1
            - ClaimEntryWorkQueue2
            - ClaimEntryWorkQueue3
            - TransactionWorkQueue1
            - TransactionWorkQueue2
            - TransactionWorkQueue3
            - UnassignedQueue
            - DeleteQueue
            - ClaimEntryWorkQueue4
            - ClaimEntryWorkQueue5
            - ClaimEntryWorkQueue6
            - ClaimEntryWorkQueue7
            - ClaimEntryWorkQueue8
            - ClaimEntryWorkQueue9
            - ClaimEntryWorkQueue10
            - InteractionQueue1
            - InteractionQueue2
            - InteractionQueue3
            - InteractionQueue4
            - InteractionQueue5
            - InteractionQueue6
            - InteractionQueue7
            - InteractionQueue8
            - InteractionQueue9
            - InteractionQueue10
            - PartnerInteractionQueue1
            - PartnerInteractionQueue2
            - PartnerInteractionQueue3
            - PartnerInteractionQueue4
            - PartnerInteractionQueue5
            - PartnerInteractionQueue6
            - PartnerInteractionQueue7
            - PartnerInteractionQueue8
            - PartnerInteractionQueue9
            - PartnerInteractionQueue10
            - PartnerTransactionQueue1
            - PartnerTransactionQueue2
            - PartnerTransactionQueue3
            - PartnerTransactionQueue4
            - PartnerTransactionQueue5
            - PartnerTransactionQueue6
            - PartnerTransactionQueue7
            - PartnerTransactionQueue8
            - PartnerTransactionQueue9
            - PartnerTransactionQueue10
            - PartnerDisclosureQueue
            - PartnerCIPQueue
            - UnassignedPartnerQueue
            - DeletePartnerQueue
            - ClaimEntryWorkQueue11
            - ClaimEntryWorkQueue12
            - ClaimEntryWorkQueue13
            - ClaimEntryWorkQueue14
            - ClaimEntryWorkQueue15
            - ClaimEntryWorkQueue16
            - ClaimEntryWorkQueue17
            - ClaimEntryWorkQueue18
            - ClaimEntryWorkQueue19
            - ClaimEntryWorkQueue20
            - ClaimEntryWorkQueue21
            - ClaimEntryWorkQueue22
            - ClaimEntryWorkQueue23
            - ClaimEntryWorkQueue24
            - ClaimEntryWorkQueue25
            - TransactionWorkQueue4
            - TransactionWorkQueue5
            - TransactionWorkQueue6
            - TransactionWorkQueue7
            - TransactionWorkQueue8
            - TransactionWorkQueue9
            - TransactionWorkQueue10
            - TransactionWorkQueue11
            - TransactionWorkQueue12
            - TransactionWorkQueue13
            - TransactionWorkQueue14
            - TransactionWorkQueue15
            - TransactionWorkQueue16
            - TransactionWorkQueue17
            - TransactionWorkQueue18
            - TransactionWorkQueue19
            - TransactionWorkQueue20
            - TransactionWorkQueue21
            - TransactionWorkQueue22
            - TransactionWorkQueue23
            - TransactionWorkQueue24
            - TransactionWorkQueue25
            - InteractionQueue11
            - InteractionQueue12
            - InteractionQueue13
            - InteractionQueue14
            - InteractionQueue15
            - InteractionQueue16
            - InteractionQueue17
            - InteractionQueue18
            - InteractionQueue19
            - InteractionQueue20
            - InteractionQueue21
            - InteractionQueue22
            - InteractionQueue23
            - InteractionQueue24
            - InteractionQueue25
            - EmployeeDocument
          type: string
          description: Bit flags indicating the document type queues the communication is in
        DocumentTrackingNum:
          type: integer
          description: Document tracking number
          format: int64
        EmailTypeCde:
          type: integer
          description: 'Email type code {BenSoft.Common.Enumeration.EmailType}'
          format: int32
        CustTempOptions:
          type: integer
          description: 'Bit flags for custom options set on the communication template {BenSoft.Common.Enumeration.CustomTemplateOptions}'
          format: int64
        NotificationEmailSubject:
          type: string
          description: Notification email subject
        SenderAddress:
          type: string
          description: Sender email address
        Subject:
          type: string
          description: Message subject
        Body:
          type: string
          description: Message body
        EmpeId:
          type: integer
          description: Participant Id
          format: int32
        CustomTemplateType:
          enum:
            - Unknown
            - ParticipantClaimEntryUI
            - OnlineEnrollmentUI
            - EligibilityReponseImport
            - PositiveBalanceImport
            - HSATransactionImport
            - EmployeeAccountExport
            - TransactionExport
            - CardExport
            - ManualClaimEntered
            - ShippingAddressChange
            - EmployeeEmailAddressChange
            - DirectDepositChange
            - PasswordChange
            - BillingAddressChange
            - CardMailed
            - CardLostStolen
            - CardTransactionDenied
            - AccountBalanceAlert
            - AccountDeductibleMet
            - RunOutDateReminder
            - YearEndReminder
            - GracePeriodReminder
            - OnlineEnrollmentPlan
            - BalanceStatementAlert
            - UserIdChange
            - EmployerReimbVerification
            - ParticipantClaimEntryEmail
            - GenericEmail
            - ParticipantPOSReceiptUpload
            - EmployerQueueCommunication
            - TpaQueueCommunication
            - EmployerFundingNotification
            - DepositReceivedAlert
            - HSAOnlineStatement
            - EnrolleeWelcomeEmail
            - EmailCommunicationTemplate
            - PendingContributionsCommunication
            - DeductibleRulesTemplate
            - ServiceCategoriesTemplate
            - CompletedHSAPaymentNotice
            - FailedHSAPaymentNotice
            - CardTransactionApproved
            - ReimbursementProcessed
            - EmployerPortal
            - WelcomeEmailPartnerAlert
            - BillingAddressChangePartnerAlert
            - ShippingAddressChangePartnerAlert
            - EmployeeEmailAddressChangePartnerAlert
            - PasswordChangePartnerAlert
            - UserIdChangePartnerAlert
            - HSAOnlineStatementPartnerAlert
            - DepositReceivedPartnerAlert
            - ExternalAccountUpdatedPartnerAlert
            - EmailCommunicationTemplatePartnerAlert
            - IRSContributionLimitPartnerAlert
            - AccountClosedPartnerAlert
            - AccountReAssociatedPartnerAlert
            - OnlineEnrollmentEmailPartnerAlert
            - Disclosure
            - ProductPartnerCustomText
            - EmprHSAFundingNotification
            - AccountReAssociatedAlert
            - IRSTaxForms1099Alert
            - IRSTaxForms5498Alert
            - NewAdminMasterFraudAlert
            - CIPLetter
            - EmprNonHSAFundingNotificationRecipientData
            - EmprNonHSAFundingNotification
            - PayrollContributionReminderRecipientData
            - PayrollContributionReminder
            - ReportNotification
            - ProrationScheduleTemplate
            - CustomDependentPrivacy
            - EmployerPlanReconcilation
            - EmpeDDBankAcctStatusAlert
            - EmployeeIDNotes
            - OnlineBalanceRepaymentConfirmation
            - OnlineBalanceRepaymentFailure
            - OnlineRepaymentTemplate
            - FutureDatedClaims
            - CommunicationHoldRuleTemplate
            - MobileNumberRegistration
            - UserIdRegistration
            - ParticipantSelfServiceOption
          type: string
          description: Participant communication template type
        TemplateKey:
          type: integer
          description: Participant communication template id
          format: int32
        CommunicationChannel:
          enum:
            - None
            - Email
            - Mobile
            - Both
            - LetterCommunication
            - NotifyEmail
            - MailedLetter
            - SendEmailToTaxFormsAcctHolders
          type: string
          description: Communication channel bit flags
        BarcodeStream:
          type: string
          description: Barcode data
          format: byte
        BarcodeAlign:
          type: string
          description: "Barcode alignment.\r\nValues: \"Left\", \"Center\", \"Right\", \"None\", \"100%\""
      description: Participant communication message details
    ServicesRepaymentCustomtextAvoidoverpaymenttipsTpaIdEmployerIdParticipantIdG:
      type: string
    ServicesRepaymentCustomtextAuthorizationTpaIdEmployerIdParticipantIdGet200Ap:
      type: string
    ServicesRepaymentCustomtextConfirmationTpaIdEmployerIdParticipantIdGet200App:
      type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProviderSearchResults:
      type: object
      properties:
        PayProviders:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProvider'
        TotalRowCount:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts._0618.DependentDetails:
      type: object
      properties:
        Prefix:
          type: string
          description: 'Title for Dependent, such as Mr., Mrs., Ms., Dr., or Rev'
        LastName:
          type: string
          description: Last name of Dependent.
        FirstName:
          type: string
          description: First name of Dependent.
        MiddleInitial:
          type: string
          description: Middle initial of Dependent.
        Phone:
          type: string
          description: 'Dependent’s Phone number, including area code.'
        AddressLine1:
          type: string
          description: First line of the Dependent’s mailing address.
        AddressLine2:
          type: string
          description: Second line of the Dependent’s mailing address.
        City:
          type: string
          description: City associated with the Dependent’s mailing address.
        State:
          type: string
          description: State associated with the Dependent’s mailing address.
        Zip:
          type: string
          description: Zip code associated with the Dependent’s mailing address.
        Country:
          type: string
          description: Country associated with the Dependent’s mailing address.
        DependentStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: "Activity status for the Dependent: 0 = All, 1 = New, 2 = Active,\r\n3 = TempInactive, 4 = PermInactive, 5 = Terminated,6 = Enrollment"
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
          description: "Gender of the Dependent :\r\n0 = None,                                                               \r\n1 = Male,\r\n2 = Female"
        ShippingAddressLine1:
          type: string
          description: First line of the Dependent’s shipping address.
        ShippingAddressLine2:
          type: string
          description: Second line of the Dependent’s shipping address.
        ShippingAddressCity:
          type: string
          description: City associated with a Dependent’s shipping address.
        ShippingAddressState:
          type: string
          description: State associated with a Dependent’s shipping address.
        ShippingAddressZip:
          type: string
          description: Zip code associated with a Dependent’s shipping address.
        ShippingAddressCountry:
          type: string
          description: Country associated with a Dependent’s shipping address.
        BirthDate:
          type: string
          description: Birth date of Dependent.
        CardDesignID:
          type: string
          description: "Card design associated with a Dependent:\r\n1 = Payment Card\r\n2 = Combo Card"
        CardNumber:
          type: string
          description: Benefits Card number of the Dependent.
        DependentID:
          type: string
          description: Unique identifier for the Dependent.
        DependentSSN:
          type: string
          description: Social Security Number of Dependent.
        EligibilityDate:
          type: string
          description: Date from when Dependent become eligible.
        EmployeeID:
          type: string
          description: Unique identifier for the Employee to which Dependent is added to.
        EmployeeSSN:
          type: string
          description: Social Security Number of Employee.
        FullTimeStudent:
          type: boolean
          description: "Indicated that the Dependent is a FullTimeStudent or Not.\r\n0 = No, this person is not full time student.\r\n1 = Yes, this person is full time student."
        HealthPlanID:
          type: string
          description: An assigned ID for the Dependent’s health plan.
        LastUpdated:
          type: string
          description: Last date the Dependent demographic data was modified.
          format: date-time
        PBMID:
          type: string
          description: An assigned ID for the Pharmacy Benefits Management (PBM) organization handling pharmaceutical benefits for Dependents.
        Relationship:
          enum:
            - Unknown
            - SpouseorCommonLawSpouse
            - Child
            - DomesticPartner
            - Other
          type: string
          description: "Indicated relation of Dependent to Employee.\r\n0 = Unknown,\r\n1 = SpouseorCommonLawSpouse,\r\n2 = Child,\r\n3 = DomesticPartner,\r\n4 = Other"
        TerminationDate:
          type: string
          description: Termination Date of Dependent.
        MedicareBeneficiary:
          enum:
            - None
            - PrimaryBeneficiary
            - SecondaryBeneficiary
          type: string
          description: Indicates Participant as a Medicare beneficiary.
        MedicareID:
          type: string
          description: This value is the active covered individual’s/beneficiary’s health insurance claim number.
        PersonCode:
          type: string
          description: "This code is used to identify specific individuals on a policy for Medicare Reporting.\r\nThe values are established by the insurer. May also be known as a Dependent Code."
        EndStageRenalDisease:
          type: boolean
          description: "Indicates whether the Dependent has ESRD for Medicare Reporting.\r\n0 = No, this person does not have ESRD.\r\n1 = Yes, this person has ESRD."
        TpaId:
          type: string
          description: Unique identifier assigned by WealthCare Admin.
        EmprId:
          type: string
          description: Unique identifier for the Employer.
        IssueDependentCard:
          type: boolean
          description: "Indicated that the Dependent is issued with a Card other than Employee one.\r\n0 = No, this person not issued with a card.\r\n1 =  Yes, this person is issued with card."
        FlexAcctIds:
          type: array
          items:
            type: string
          description: Unique Id to account associated with Dependents.
      description: Dependent Privacy Authentication - add new fields for Custom Privacy
    BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience'
    BenSoft-Contracts-DataContracts-Business-Document-DocumentAudienceDeleteRequ:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudienceDeleteRequest'
    BenSoft.Contracts.DataContracts.Business.Document.DocumentAudienceDeleteRequest:
      type: object
      properties:
        TpaId:
          type: string
        AudienceKey:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts.Business.Document.DocumentAudience:
      type: object
      properties:
        TpaId:
          type: string
        AudienceKey:
          type: integer
          format: int32
        AudienceId:
          type: string
        AudienceName:
          type: string
        AudienceMembers:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentAudienceMember'
        AudienceOptions:
          enum:
            - None
            - AllEmployer
            - AllDivision
            - AllSubgroup
            - AllAcctType
            - EmptyEmployer
            - EmptyDivision
            - EmptySubgroup
            - EmptyAcctType
          type: string
        LastUpdateDate:
          type: string
          format: date-time
    BenSoft.Contracts.DataContracts.Business.Document.DocumentAudienceMember:
      type: object
      properties:
        TpaId:
          type: string
        Employers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Employer'
        Divisions:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Division'
        Subgroups:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Subgroup'
        AcctTypes:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.AccountType'
        HideSubgroup:
          type: boolean
    BenSoft.Contracts.DataContracts.Business.Document.AccountType:
      type: object
      properties:
        TpaId:
          type: string
        AcctTypeCde:
          type: string
        AcctTypeDesc:
          type: string
        AcctTypeClass:
          enum:
            - FSA
            - HRA
            - HSA
            - Deductible
            - Other
            - VEBA
            - Transit
            - Parking
            - Retiree
          type: string
        AcctTypeClassDesc:
          type: string
          readOnly: true
    BenSoft.Contracts.DataContracts.Business.Document.Subgroup:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmprName:
          type: string
        SubGroupKey:
          type: integer
          format: int32
        SubgroupName:
          type: string
    BenSoft.Contracts.DataContracts.Business.Document.Division:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmprName:
          type: string
        DivisionKey:
          type: integer
          format: int32
        DivisionName:
          type: string
    BenSoft-Contracts-DataContracts-Business-Document-DocumentDetailsArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDetails'
    BenSoft-Contracts-DataContracts-Business-Document-DocumentDeleteRequestArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.DocumentDeleteRequest'
    BenSoft.Contracts.DataContracts.Business.Document.DocumentDeleteRequest:
      type: object
      properties:
        TpaId:
          type: string
        DocumentKey:
          type: integer
          format: int32
        isLegacyDocument:
          type: boolean
    ServicesHsainvestmentAccountGeneratePost200ApplicationJsonResponse:
      type: boolean
      description: Indicates whether the investment account creation was successful (true) or not (false).
    BenSoft-Vendors-Services-Drugs-Models-DrugPricingArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.DrugPricing'
    BenSoft.Vendors.Services.Drugs.Models.DrugPricing:
      type: object
      properties:
        Claims:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.DrugClaim'
        Drug:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.Drug'
    BenSoft.Vendors.Services.Drugs.Models.DrugClaim:
      type: object
      properties:
        Pharmacy:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.DrugPharmacy'
        Cost:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.DrugCost'
        Response:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Drugs.Models.DrugResponse'
    BenSoft.Vendors.Services.Drugs.Models.DrugPharmacy:
      type: object
      properties:
        Name:
          type: string
        Nabp:
          type: string
        ChainCode:
          type: string
        Address1:
          type: string
        Address2:
          type: string
        City:
          type: string
        State:
          type: string
        ZipCode:
          type: string
        Phone:
          type: string
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
        Distance:
          type: number
          format: double
        Type:
          type: string
        Class:
          type: string
    BenSoft.Vendors.Services.Drugs.Models.DrugCost:
      type: object
      properties:
        Copay:
          type: string
        PlanPay:
          type: string
        UncPrice:
          type: string
        Ndc:
          type: string
    BenSoft.Vendors.Services.Drugs.Models.DrugResponse:
      type: object
      properties:
        Status:
          type: string
        Message:
          type: string
    BenSoft.Contracts.DataContracts._0521.CardSummary:
      type: object
      properties:
        MobileWalletEnabled:
          type: boolean
          description: True if Mobile Wallet is enabled for the card.
        EmployeeId:
          type: string
          description: The Employee Id of the card of the employee
        DependentId:
          type: string
          description: Returns the dependent ID if the card was issued to a dependent.  Returns null if the card belongs to an employee
          nullable: true
        CardLast4Digits:
          type: string
          description: The last four digits of the card
        CardProxyNumber:
          type: string
          description: The proxy number of the card
        CardStatusCode:
          type: integer
          description: 'A numerical value indicating the status: 1 = New, 2 = Active, 3 = Temp Inactive, 4 = Perm Inactive, 5 = Lost/Stolen'
        NamePrefix:
          type: string
          description: 'The prefix of cardholder''s name. Valid values are: Mr., Mrs., Ms., Dr., Rev.'
          nullable: true
        FirstName:
          type: string
          description: The cardholder's first name
        MiddleInitial:
          type: string
          description: The cardholder's middle name initial
          nullable: true
        LastName:
          type: string
          description: The cardholder's last name
        MailedDate:
          type: string
          description: The date the card was mailed on.  The date format is yyyymmdd.
          nullable: true
        CardIssueCde:
          type: integer
          description: 'A code indicating the issue status of the card: 1 = Do Not Issue, 2 = Issue, 3 = Sent, 4 = Conditional, 5 = Mailed, 6 = Waiting'
        ActivationDate:
          type: string
          description: The date the card was activated. Returns an empty value if the card has not been activated; returns yyyymmdd when the card has been activated.
          nullable: true
        IssueDate:
          type: string
          description: The date the card was issued on.  The date format is yyyymmdd.
      description: Summary of participant card/s information
    BenSoft-Contracts-DataContracts-Transaction-RepaymentTransactionArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepaymentTransaction'
    BenSoft.Contracts.DataContracts.Transaction.RepaymentTransaction:
      type: object
      properties:
        SeqNum:
          type: integer
          description: The settlement sequence number of the transaction to be repaid
          format: int32
        SetlDte:
          type: string
          description: The settlement date of the transaction to be repaid
      description: Created for Issue#132751 - Send Transactions to WCA with transactions the member selected to repay.
    BenSoft-Contracts-DataContracts-Transaction-RepayTxnArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.RepayTxn'
    BenSoft.Contracts.DataContracts.Transaction.RepayTxn:
      type: object
      properties:
        SeqNum:
          type: integer
          description: The settlement sequence number of the transaction to be repaid
          format: int32
        SetlDte:
          type: string
          description: The settlement date of the transaction to be repaid
        ErrMsg:
          type: string
          description: Error message if transaction is not to be repaid
      description: Individual Repay transaction that not be repaid
    BenSoft.Contracts.DataContracts.PlanEnrollmentAttribute:
      type: object
      properties:
        TpaId:
          type: string
        PlanKey:
          type: integer
          format: int32
        DefaultBrokerId:
          type: string
        EnrollmentStartDte:
          type: string
        EnrollmentEndDte:
          type: string
        PlanExtOptions:
          enum:
            - None
            - EligibleOnlineEnrollment
            - AllowEnterElection
            - AllowEnterPerPayPeriod
            - AllowAssociatedDependent
            - AllowAddBrokerID
            - AllowChooseCoverageTier
            - AllowManualClaims
            - AllowReassociation
            - AllowRollingEnrollment
            - AllowClaimCrossoverAutoPay
            - MedicarePrimaryPlan
            - CopyEmpeExpenses
            - CopyEmpeCoPays
            - AllowAutoReimbSettings
            - AutoPayProviderDefault
            - AllowEnrolledElectionAmount
            - AllowEnrolledCoverageTier
            - AllowMonthlyEnrollment
            - AllowMidYearEnrollment
            - PlanTIDueToACHRejectionNew
            - PlanTIDueToACHRejectionActive
            - PlanTIDueToACHRejectionTI
            - PlanTIDueToACHRejection
          type: string
        CrossoverAutopayText:
          type: string
        ManualClaimText:
          type: string
        ReassociateAcctText:
          type: string
        FreeText:
          type: string
        WaiverText:
          type: string
        WaiverElectText:
          type: string
        WaiverNotElectText:
          type: string
        DisclaimerText:
          type: string
        CoverageTiers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.PlanCoverageTier'
      description: Enrollment Service Interface - for Midyear Enrollment Support
    BenSoft.Contracts.DataContracts.Mobile.Business.Enrollment.PlanCoverageTier:
      type: object
      properties:
        TpaId:
          type: string
        CoverageTierKey:
          type: integer
          format: int32
        CoverageTierId:
          type: string
        CoverageTierDesc:
          type: string
    BenSoft-Contracts-DataContracts-Business-Document-EmployerArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.Document.Employer'
    BenSoft.Contracts.DataContracts.Business.Document.Employer:
      type: object
      properties:
        TpaId:
          type: string
        EmprId:
          type: string
        EmprName:
          type: string
    ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdPut2:
      type: string
    ServicesDocumentsHSAStatementsDeliveryOptionTpaIdEmployerIdParticipantIdPut2-2:
      type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Document.DataPartnerAccount:
      type: object
      properties:
        DataPartnerId:
          type: string
        TpaId:
          type: string
        FlexAcctKey:
          type: integer
          format: int32
        ExternalAcctId:
          type: string
        ExternalSocSecNum:
          type: string
        SyncStatusCde:
          type: integer
          format: int32
        DetailErrorCde:
          type: integer
          format: int32
        SigCardStatus:
          type: integer
          format: int32
        AllowManualClaims:
          type: integer
          format: int32
        LastSyncDte:
          type: string
          format: date-time
        LastSyncBalance:
          type: number
          format: double
        LastBalanceSyncDte:
          type: string
          format: date-time
        InsertDte:
          type: string
          format: date-time
        InsertUserIdKey:
          type: integer
          format: int32
        UpdateDte:
          type: string
          format: date-time
        UpdateUserIdKey:
          type: integer
          format: int32
        TriggerDelete:
          type: integer
          format: int32
        StatusChange:
          type: integer
          format: int32
        NegativeBalance:
          type: number
          format: double
        SendEmail:
          type: integer
          format: int32
        EsigCardCde:
          type: integer
          format: int32
        EsigCardDte:
          type: string
          format: date-time
        ProductPartnerAcctStatus:
          type: integer
          format: int32
        TrustAgreement:
          type: string
        InvestmentModel:
          type: string
        TrustPaper:
          type: string
        ProxyCde:
          type: string
        ReassociationAcctNum:
          type: string
        StatusChangeDte:
          type: string
          format: date-time
        ExternalAcctIdDateChanged:
          type: string
          format: date-time
        InterestPlanKey:
          type: integer
          format: int32
        AccountFundingDte:
          type: string
        InterestEndDte:
          type: string
        InterestTargetFlexAcctKey:
          type: integer
          format: int32
        InterestCycleKey:
          type: integer
          format: int32
        InterestReaccrueThisCycle:
          type: integer
          format: int32
        InterestPaymentAmt:
          type: number
          format: double
        ProductPartnerBalance:
          type: number
          format: double
        InterestAccruedAmt:
          type: number
          format: double
        InterestRate:
          type: number
          format: double
        NextInterestPaymentDte:
          type: string
        DataPartnerAcctOptions:
          type: integer
          format: int32
        TrustAcctUserId:
          type: string
        TrustBankAcctNum:
          type: string
        TrustBranchNum:
          type: string
        AccountDetailsXml:
          type: string
        TrustAcctNum:
          type: string
        TrustEffectiveDate:
          type: string
          format: date-time
        BillPayUserId:
          type: string
        BillPayAcctNum:
          type: string
        TrustAcctOpenDate:
          type: string
          format: date-time
        IsTransferBlocked:
          type: integer
          format: int32
        TransferBlockedExpDte:
          type: string
          format: date-time
        TrustPlanId:
          type: string
        AccountOpenDte:
          type: integer
          format: int32
        InterestAccuredYTD:
          type: number
          format: double
        CheckBookInd:
          type: string
        last_interest_payment_dte:
          type: integer
          format: int32
        next_stmt_dte:
          type: string
          format: date-time
        account_close_dte:
          type: string
          format: date-time
        PaperElectronicTaxForm:
          type: integer
          format: int32
        DateOfDeath:
          type: string
          format: date-time
    BenSoft.Contracts.DataContracts._0218.FXClaimForResubmit:
      type: object
      properties:
        ExternalClaimID:
          type: string
        ClaimLine:
          type: integer
          format: int32
        AllowPosOffset:
          type: boolean
        IsPayProvider:
          type: boolean
        PayProviderKey:
          type: integer
          format: int32
        ReimbMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
      description: "<author>Chindi Xu</author>\r\n<date>Nov 29, 2017</date>\r\n<version>7.9.0</version>"
    BenSoft-Contracts-DataContracts-Mobile-Business-DataPartner-DataPartnerBankA:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount'
    BenSoft.Contracts.DataContracts.Mobile.Business.DataPartner.DataPartnerBankAccount:
      type: object
      properties:
        DataPartnerId:
          type: string
        DataPartnerBankAcctKey:
          type: integer
          format: int32
        AccountName:
          type: string
        AccountType:
          type: integer
          format: int32
        IsDefault:
          type: integer
          format: int32
        Description:
          type: string
        IsOmnibus:
          type: integer
          format: int32
        CostCenter:
          type: string
        ABANumberEncrypted:
          type: string
        AccountnumberEncrypted:
          type: string
        InsertUserIdKey:
          type: integer
          format: int32
        UpdateUserIdKey:
          type: integer
          format: int32
        TriggerDelete:
          type: integer
          format: int32
        gl_phys_bank_acct_key:
          type: integer
          format: int32
        IsEmployerFundingOmnibusGL:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts.Mobile.Business.InnoPartner.InnovationPartner:
      type: object
      properties:
        InnoPartnerKey:
          type: integer
          description: Unique identifier for innovation partner key
          format: int32
        InnoPartnerId:
          type: string
          description: Unique identifier for innovation partner id
        InnoPartnerName:
          type: string
          description: Innovation partner name
      description: ''
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCNotifyTokenUpdatedResponse:
      type: object
      properties:
        responseId:
          type: string
          description: The id of the response returned
        errorCode:
          type: string
          description: Error code for the reason the operation failed
        errorDescription:
          type: string
          description: Error description of the reason the operation failed
      description: Represents the response to a token update notification.
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse:
      type: object
      properties:
        services:
          type: array
          items:
            type: string
        decision:
          type: string
        activationMethods:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse_ActivationMethod'
        issuerProductConfigId:
          type: string
        encryptedPayload:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse_EncryptedPayload'
        cvcResponse:
          type: string
        tokenRequestorId:
          type: string
        responseId:
          type: string
          description: The id of the response returned
        errorCode:
          type: string
          description: Error code for the reason the operation failed
        errorDescription:
          type: string
          description: Error description of the reason the operation failed
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse_ActivationMethod:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCAuthorizeResponse_EncryptedPayload:
      type: object
      properties:
        publicKeyFingerprint:
          type: string
        encryptedKey:
          type: string
        oaepHashingAlgorithm:
          type: string
        iv:
          type: string
        encryptedData:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCDeliverActivationCodeRequest:
      type: object
      properties:
        requestId:
          type: string
          description: The Id of request submitted
        tokenUniqueReference:
          type: string
          description: A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime
        correlationId:
          type: string
          description: Value linking pre-digitization messages generated during provisioning
        activationCode:
          type: string
          description: The Activation Code to be distributed for the digitization. (This will be blank)
        expirationDateTime:
          type: string
          description: The DateTime when the Activation Code is no longer valid
          format: date-time
        activationMethod:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCDeliverActivationCodeRequest_ActivationMethod'
      description: Represents the request to deliver an activation code for digitization to a participant.
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCDeliverActivationCodeRequest_ActivationMethod:
      type: object
      properties:
        type:
          type: string
          description: "Specifies the activation method type\r\nTEXT_TO_CARDHOLDER_NUMBER = Text message to Account holder's mobile phone number. Value will be the Account holder's masked mobile phone number\r\nEMAIL_TO_CARDHOLDER_ADDRESS = Email to Account holder's email address. Value will be the Account holder's masked email address\r\nCARDHOLDER_TO_CALL_AUTOMATED_NUMBER = Account holder-initiated call to automated call center phone number. Value will be the phone number for the Account holder to call"
        value:
          type: string
          description: Specifies the activation method value (meaning varies depending on the activation method type)
      description: Activation type and value
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Responses.MCNotifyServiceActivatedResponse:
      type: object
      properties:
        responseId:
          type: string
          description: The id of the response returned
        errorCode:
          type: string
          description: Error code for the reason the operation failed
        errorDescription:
          type: string
          description: Error description of the reason the operation failed
      description: MasterCard notify service activated response
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_DeviceInfo:
      type: object
      properties:
        deviceName:
          type: string
        serialNumber:
          type: string
        formFactor:
          type: string
        isoDeviceType:
          type: string
        osName:
          type: string
        osVersion:
          type: string
        imei:
          type: string
        msisdn:
          type: string
        paymentTypes:
          type: array
          items:
            type: string
        storageTechnology:
          type: string
        cardCaptureTechnology:
          type: string
      description: ''
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_WalletProviderDecisioningInfo:
      type: object
      properties:
        recommendedDecision:
          type: string
        recommendationStandardVersion:
          type: string
        deviceScore:
          type: string
        accountScore:
          type: string
        accountLifeTime:
          type: string
        recommendationReasons:
          type: array
          items:
            type: string
      description: ''
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_FundingAccountInfo:
      type: object
      properties:
        encryptedPayload:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_EncryptedPayload'
        panUniqueReference:
          type: string
          description: Reference to the PAN that is unique per Wallet Provider
      description: ''
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCAuthorizeRequest_EncryptedPayload:
      type: object
      properties:
        publicKeyFingerprint:
          type: string
        encryptedKey:
          type: string
        oaepHashingAlgorithm:
          type: string
        iv:
          type: string
        encryptedData:
          type: string
    ServicesQwasiIdGet200ApplicationJsonResponse:
      type: string
    ServicesQwasiIdGet200ApplicationXmlResponse:
      type: string
    ServicesQwasiTestPost200ApplicationJsonResponse:
      type: string
      description: 'The response body contains the status of the Qwasi operation, which can be used to determine the next steps or actions required.'
    BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTierType:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier that WealthCareAdmin assigns to a TPA.
        TierTypeKey:
          type: integer
          description: Unique identifier for the Common Code Tier Type.
          format: int32
        TierTypeId:
          type: string
          description: ID of the Common Code Tier Type of the TPA.
          nullable: true
        TierTypeDesc:
          type: string
          description: Description of the Common Code Tier Type.
        CommonCodeType:
          type: integer
          description: Common Code Type. Valid value for ServiceCategory = 1.
          format: int32
        NumTiers:
          type: integer
          description: Number of service category tiers associated with a service category tier type. Maximum value is 8.
          format: int32
        InsertDte:
          type: string
          description: Date when the common code tier type was inserted.
          format: date-time
        UpdateDte:
          type: string
          description: Date when the common code tier type was updated.
          format: date-time
        InsertUserIdKey:
          type: integer
          description: Unique identifier of the user who inserted the record.
          format: int32
        UpdateUserIdKey:
          type: integer
          description: Unique identifier of the user who updated the record.
          format: int32
        UpdateUserFirstName:
          type: string
          description: First Name of the user who updated the record.
        UpdateUserFirstNameSecure:
          type: string
        UpdateUserLastName:
          type: string
          description: Last Name of the user who updated the record.
        UpdateUserLastNameSecure:
          type: string
        InUse:
          type: boolean
          description: Boolean field to indicate if the common code tier type is being used in any of the service categories or not. Valid values are 0 and 1.
        CommonCodeTiers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTier'
          description: List of all common code tier types.
      description: Data Contract for Common Code Tier Type
    BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.CommonCodeTier:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier that WealthCareAdmin assigns to a TPA.
        TierKey:
          type: integer
          description: Unique identifier for the Common Code Tier.
          format: int32
        TierTypeKey:
          type: integer
          description: Unique identifier for the Common Code Tier Type.
          format: int32
        TierId:
          type: string
          description: ID of the Common Code Tier of the TPA.
        TierDesc:
          type: string
          description: Description of the Common Code Tier.
        InsertDte:
          type: string
          description: Date when the common code tier was inserted.
          format: date-time
        UpdateDte:
          type: string
          description: Date when the common code tier was updated.
          format: date-time
        InsertUserIdKey:
          type: integer
          description: Unique identifier of the user who inserted the record.
          format: int32
        UpdateUserIdKey:
          type: integer
          description: Unique identifier of the user who updated the record.
          format: int32
        DeleteObject:
          type: boolean
          description: Boolen value to indicate if the common code tier can be deleted. Valid values are 0 and 1.
        IsEditable:
          type: boolean
          description: Boolen value to indicate if the common code tier can be edited. Valid values are 0 and 1.
        InUse:
          type: boolean
          description: Boolean field to indicate if the common code tier type is being used in any of the service categories or not. Valid values are 0 and 1.
      description: Data Contract for Common Code Tier
    BenSoft.Contracts.DataContracts.Mobile.ResetPasswordReq:
      type: object
      properties:
        UserName:
          type: string
          description: User Name
        Password:
          type: string
          description: New User Password
        SecAnswers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.UserQuestionAnswer'
          description: User Security Question and Answers
      description: Reset Password Request DataContract
    BenSoft.Contracts.DataContracts.UnlockUserReq:
      type: object
      properties:
        UserName:
          type: string
        IsOobSMS:
          type: boolean
        Token:
          type: string
    BenSoft-Vendors-Services-Pharmacies-Models-PharmacyArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Vendors.Services.Pharmacies.Models.Pharmacy'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationRequest:
      required:
        - TpaId
        - EmployerId
        - EmployeeId
        - TransactionId
        - RequestFrom
        - ValidationCode
      type: object
      properties:
        TpaId:
          maxLength: 6
          minLength: 0
          type: string
        EmployerId:
          maxLength: 18
          minLength: 0
          type: string
        EmployeeId:
          maxLength: 255
          minLength: 0
          type: string
        RSAId:
          maxLength: 75
          minLength: 0
          type: string
        TransactionId:
          maxLength: 75
          minLength: 0
          type: string
        PortfolioId:
          maxLength: 75
          minLength: 0
          type: string
        RequestFrom:
          enum:
            - WCA
            - WCP
            - WCM
          type: string
        ValidationCode:
          maxLength: 75
          minLength: 0
          type: string
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.RegistrationValidationResponse:
      type: object
      properties:
        Status:
          type: string
        ErrorCode:
          type: string
        ErrorDescription:
          type: string
    BenSoft-Contracts-DataContracts-Mobile-Business-Employee-MobileNumberArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileNumber'
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileNumber:
      type: object
      properties:
        PAN:
          type: string
          description: Personal Account Number
        PhoneNumber:
          type: string
          description: Mobile phone number
        RegisterStatus:
          enum:
            - Unregistered
            - Registered
            - Pending
          type: string
          description: Phone number registration status
      description: Mobile phone number and status
    BenSoft.Contracts.DataContracts._0619.CardDetails:
      type: object
      properties:
        ReissueCard:
          type: boolean
          description: This returns true if this card was a reissue or replacement; false if this is a brand new card.
        EmployerID:
          type: string
          description: A system generated ID used to identify a specific employer in WCA
        EmployeeID:
          type: string
          description: 'The employee ID the card was issued to, or the employee ID associated with the dependent to whom the card card was issued to'
        DependentID:
          type: string
          description: Returns the dependent ID if the card was issued to a dependent. Returns null if the card belongs to an employee
        CardEffectiveDate:
          type: string
          description: The date the card is first effective. Date format is yyyymmdd.
        CardExpireDate:
          type: string
          description: Card Expire Date
        CardProxyNumber:
          type: string
          description: Card Proxy Number
        CardLast4Digits:
          type: string
          description: The last four digits of the card number
        LastUpdatedDateTime:
          type: string
          description: The date/time the card was last updated. Format is Epoch Unix Timestamp.
          format: date-time
        PrimaryCard:
          type: boolean
          description: Primary Card Indicator (True (1) or False (0))
        CardStatusCode:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - LostStolen
          type: string
          description: 'The Card status Code: New = 1, Active = 2, TempInactive = 3, PermInactive = 4, LostStolen = 5'
        UserDefinedField:
          type: string
          description: 'Custom employee level field that can be used for internal needs, WCA does not use this field.'
          nullable: true
        CardStatusReasonCode:
          type: integer
          description: Used in combination with the card status code to indicate how/why the card was moved to that status.
          format: int32
        ShipmentTrackingNumber:
          type: string
          description: Shipment Tracking Number (FedEx or USPS Tracking Number depending on shipping type)
          nullable: true
        ActivationDate:
          type: string
          description: The date the card was activated. Returns an empty value if the card has not been activated; returns yyyymmdd when the card has been activated.
        CardDesignID:
          type: string
          description: A system generated ID to identify the template for the card design.
        MailedDate:
          type: string
          description: The date the card was mailed. Format is yyyymmdd.
          nullable: true
        IssueDate:
          type: string
          description: The issue date of the card. Format is yyyymmdd.
        PickDate:
          type: integer
          description: Legacy Field - do not use
          format: int32
        IssuedBy:
          type: string
          description: Will always return the value CARDAGENT
        ShippingAddress:
          type: string
          description: The address that the card was shipped to.
        ThermalFrontLogoID:
          type: string
          description: The thermal front logo ID printed on the card
        CreationDate:
          type: string
          description: The date the card was created. Format is yyyymmdd.
        PINMailerRequestDate:
          type: string
          description: The date the PIN Mailer was requested on.
          nullable: true
        PINMailedDate:
          type: string
          description: Date that a PIN mailer was mailed on.
          nullable: true
        PINMailerAddress:
          type: string
          description: The address the PIN Mailer was mailed to.
    BenSoft.Contracts.DataContracts.Mobile.AdminOptionsInfo:
      type: object
      properties:
        TpaOption:
          enum:
            - All
            - None
            - ProcessEdi
            - AllowSplit
            - ForceDefaultPlan
            - EmailEdiPerformance
            - PayFlexNotifyTemplate
            - LimitAcctType
            - UseDupClaimMatch
            - AllowMultipleClaimEntry
            - AllowExternalReimb
            - AllowIneligiblePOSOffset
            - EnableComboCard
            - EnableMbiIias
            - EnableTpaIiasUpdatePlans
            - EnableTpaIiasUpdateMtcs
            - PrintCorrispondenceAtASC
            - PrintStatementsAtASC
            - PrintReimbursementsAtASC
            - ChangedPlanPriorityByPlanYear
            - AutoTerminateParticipants
            - AutoTerminateAccounts
            - CheckDupUponClaimEntry
            - AllowOver10ClaimsPerCheck
            - TpaQueueCommunication
            - PayProvider
            - AllowEmpeSelfCreation
            - SelfCreationUseSSN
            - OnlineEnrollPrePopSSN
            - OnlineEnrollPrePopDoB
            - OnlineEnrollPrePopMMN
            - OnlineEnrollPrePopDrivLic
            - AllowPendingContributions
            - AutoGenSSNForEmpeSelfCreation
            - UseEmpeIdForEmpeSelfCreatiom
            - EnableDupDepositWarnForUIDeposits
            - SetDefaultMCCAcctSetting
            - AutoClaimReversal
            - EnablePinMailers
            - AutoTempInactivateParticipantPrimaryCards
            - TpaGetCurrentSessionsOn
            - MarketplaceIntegration
            - HideEmpeProcNotes
            - EnableFraudPrevent
            - Card
            - CardReimbursementDefault
            - PopulateRunOutDays
            - SkipEDIDataComparison
            - EmployerIDwithNoPrefix
            - EnforceCalculatedPOSLimit
            - AllowDependentPrivacy
            - AllowDepPrivFor18Plus
            - DepPrivacyCommOption
            - EmprTaxIdReq
            - ManageEmprPayrollFileUploadViaProfile
            - NotAllowEmailReport
            - BypassProcessAcctCreationDeposit
            - ProcessCustomEdi
            - OCRAIClaimsProcessing
            - EnableEmployerInvoicing
            - AllowSelEmployerByNameInRegistration
            - HideHeaderofParticipantCommunicationsTemplates
            - Payroll
            - HidePIAccountsFromRest
          type: string
          description: Get Admin Options
        TpaOptionExt:
          enum:
            - All
            - None
            - HideCardReissueText
            - EnableRetroTermination
            - HideRequestReviewBtn
            - UseAlegeusCryptoKey
            - EnableSubGrpChkFFWS
            - EnableSFTPForDocQueues
            - HoldCommunications
            - RejectFutureDatedClaimsEdiWSCarrier
            - SendRestPasswordExpirationAlert
            - HideFxScc
            - HideFxZeroBal
            - DirectDepositDefault
            - ReallocateTxns
            - POSAutoSubstantiation
            - AllowMultipleUserEDIProcessing
            - AllowHSAContributionReversals
            - RestrictDefaultCoveragePeriod
            - ProcessingDelayDays
            - EnableNewStatusCardReissue
            - ExternalMethodsDefault
            - CheckPrintAdminiSourceDefault
            - EnableAdminCustomText
            - AutomaticDirectDepositDefault
            - AllowAutoReimbAndClaimCrossOverAutoPay
            - ShowPriorYearCarryoverAmount
            - BypassAutoReimbAndClaimCrossOverSentInICFile
          type: string
          description: Get Extended Admin Options
      description: Data Contract for Getting Admin Options
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.MCNotifyTokenUpdatedRequest:
      type: object
      properties:
        requestId:
          type: string
          description: The Id of the request submitted
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token'
          description: Contains the Tokens which were updated.
        reasonCode:
          type: string
          description: "The reason code for why the notification is being sent. This applies to all tokens in the Tokens array. Must be one of\r\nSTATUS_UPDATE - The status of the tokens has been changed,\r\nREDIGITIZATION_COMPLETE - The token has been re-digitized to the device,\r\nDELETED_FROM_CONSUMER_APP = The token has been deleted from the consumer application. The token may still be active"
      description: Represents a request to notify the system of updates to payment tokens.
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token:
      type: object
      properties:
        tokenUniqueReference:
          type: string
          description: A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime.
        status:
          type: string
          description: "The current status of token. Must be one of; \r\nINACTIVE - Token has not yet been activated, \r\nACTIVE - Token is active and ready to transact, \r\nSUSPENDED - Token is suspended and unable to transact, \r\nDEACTIVATED - Token has been permanently deactivated"
        suspendedBy:
          type: array
          items:
            type: string
          description: "Who or what caused the token to be suspended. One or more values of; \r\nISSUER = Suspended by the Issuer. PaymentAppProvider unable to unsuspend this token, \r\n(PAYMENT_APP_PROVIDER = Deprecated - Suspended by the PaymentAppProvider), \r\nTOKEN_REQUESTOR = Suspended by the Token Requestor, \r\nMOBILE_PIN_LOCKED = Suspended due to the Mobile PIN being locked, \r\nCARDHOLDER = Suspended by the Cardholder. Conditional - Required if status = SUSPENDED"
        tokenExpiry:
          type: string
          description: "The expiry of the Token PAN given in MMYY format. \r\nConditional - Required for notifyTokenUpdated if reasonCode - \"REDIGITIZATION_COMPLETE\"."
        fundingAccountInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_FundingAccountInfo'
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_FundingAccountInfo:
      type: object
      properties:
        encryptedPayload:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_EncryptedPayload'
        panUniqueReference:
          type: string
          description: Reference to the PAN that is unique per Wallet Provider
      description: ''
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_EncryptedPayload:
      type: object
      properties:
        publicKeyFingerprint:
          type: string
        encryptedKey:
          type: string
        oaepHashingAlgorithm:
          type: string
        iv:
          type: string
        encryptedData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_EncryptedData'
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_EncryptedData:
      type: object
      properties:
        cardAccountData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_CardAccountData'
        financialAccountData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_FinancialAccountData'
        tokenData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_TokenData'
        accountHolderAddress:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderAddress'
        accountHolderData:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderData'
        accountHolderMobilePhoneNumber:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderMobilePhoneNumber'
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_CardAccountData:
      type: object
      properties:
        accountNumber:
          type: string
        expiryMonth:
          type: string
        expiryYear:
          type: string
        securityCode:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_FinancialAccountData:
      type: object
      properties:
        financialAccountId:
          type: string
        interbankCardAssociationId:
          type: string
        countryCode:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_TokenData:
      type: object
      properties:
        token:
          type: string
        expiryMonth:
          type: string
        expiryYear:
          type: string
        sequenceNumber:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderAddress:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        countrySubdivision:
          type: string
        postalCode:
          type: string
        country:
          type: string
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderData:
      type: object
      properties:
        accountHolderName:
          type: string
        accountHolderAddress:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderAddress'
        sourceIp:
          type: string
        deviceLocation:
          type: string
        consumerIdentifier:
          type: string
        accountHolderEmailAddress:
          type: string
        accountHolderMobilePhoneNumber:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderMobilePhoneNumber'
    BenSoft.Contracts.DataContracts.MobilePay.MCPreDigitization.Requests.Token_AccountHolderMobilePhoneNumber:
      type: object
      properties:
        countryDialInCode:
          type: string
        phoneNumber:
          type: string
      description: ''
    BenSoft-Contracts-DataContracts-Mobile-Business-Document-DocumentQueueArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Document.DocumentQueue'
    BenSoft.Rest.Models.Partners.QwasiBalanceRequest:
      required:
        - uuid
        - msisdn
      type: object
      properties:
        uuid:
          maxLength: 26
          minLength: 22
          type: string
          description: Universally Unique Identifier (Combination Of TpaId And PAN Number.)
        msisdn:
          type: string
          description: Mobile Phone Number.
      description: 'Represents the data structure for a Qwasi balance request, containing essential identifiers for processing.'
    ServicesRepaymentSubmitTpaIdEmployerIdParticipantIdPost200ApplicationJsonRes:
      type: boolean
    ServicesUserPasswordTpaIdPut200ApplicationJsonResponse:
      type: object
    ServicesUserPasswordOobTpaIdPut200ApplicationJsonResponse:
      type: object
      description: Response structure for a successful password reset operation.
    ServicesUserUsernameTpaIdPost200ApplicationJsonResponse:
      type: object
    BenSoft.Vendors.Services.Locations.Models.LocationSearchResult:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Common.Models.PagedParmeters'
        data:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Locations.Models.Location'
    BenSoft.Vendors.Services.Common.Models.PagedParmeters:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count
          format: int32
        page:
          type: integer
          description: Page
          format: int32
        page_size:
          type: integer
          description: Page size
          format: int32
        sort_by:
          type: string
          description: Sort by
        description:
          type: string
          nullable: true
    BenSoft.Vendors.Services.Locations.Models.Location:
      type: object
      properties:
        Uuid:
          type: string
        Name:
          type: string
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
        Address:
          type: string
        AddressDetail:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Locations.Models.LocationAddressDetail'
        GoogleMapsLink:
          type: string
        Distance:
          type: number
          format: double
        LocationTypes:
          type: array
          items:
            type: string
        Rating:
          type: number
          format: double
        LocationUrl:
          type: string
        PhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Vendors.Services.Locations.Models.LocationPhoneNumber'
        Hours:
          $ref: '#/components/schemas/BenSoft.Vendors.Services.Locations.Models.LocationWorkingHours'
    BenSoft.Vendors.Services.Locations.Models.LocationAddressDetail:
      type: object
      properties:
        Street:
          type: string
        City:
          type: string
        State:
          type: string
        Zip:
          type: string
    BenSoft.Vendors.Services.Locations.Models.LocationPhoneNumber:
      type: object
      properties:
        Phone:
          type: string
    BenSoft.Vendors.Services.Locations.Models.LocationWorkingHours:
      type: object
    BenSoft.Contracts.DataContracts.Mobile.Business.Tpa.PayProviderSearch:
      type: object
      properties:
        SearchField:
          enum:
            - ProviderId
            - ProviderName
            - Address
            - City
            - State
            - Zip
            - Phone
            - ProviderEIN
            - StatusCode
          type: string
        SearchText:
          type: string
        OperationMode:
          enum:
            - AdimMaintenance
            - AdminProcessing
            - ParticipantProcessing
          type: string
        StartOrdinalPosition:
          type: integer
          format: int32
        NumRowsReturn:
          type: integer
          format: int32
    BenSoft.Contracts.DataContracts._0421.HSAAccountSummary:
      type: object
      properties:
        HSACurrentBalance:
          type: number
          description: Ledger Balance +/- Memo Posts Balance (Displayed as "available balance" in WealthCare Admin)
          format: double
        CashAndEquivalents:
          type: number
          description: Cash and Equivalents Market Value as determined by the system for tax reporting purposes.
          format: double
        FixedIncome:
          type: number
          description: Only Applies to Devenir Trust Accounts. Fixed Income Market Value
          format: double
        EquitiesAndMutualFunds:
          type: number
          description: Only Applies to Devenir Trust Accounts. Equities and Mutual Funds Market Value
          format: double
        Category1Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 1 Description
          nullable: true
        Category1Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 1 Value
          format: double
        Category2Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 2 Description
          nullable: true
        Category2Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 2 Value
          format: double
        Category3Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 3 Description
          nullable: true
        Category3Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 3 Value
          format: double
        Category4Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 4 Description
          nullable: true
        Category4Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 4 Value
          format: double
        Category5Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 5 Description
          nullable: true
        Category5Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 5 Value
          format: double
        Category6Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 6 Description
          nullable: true
        Category6Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 6 Value
          format: double
        Category7Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 7 Description
          nullable: true
        Category7Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 7 Value
          format: double
        Category8Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 8 Description
          nullable: true
        Category8Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 8 Value
          format: double
        Category9Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 9 Description
          nullable: true
        Category9Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 9 Value
          format: double
        Category10Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 10 Description
          nullable: true
        Category10Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 10 Value
          format: double
        Category11Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 11 Description
          nullable: true
        Category11Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 11 Value
          format: double
        Category12Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 12 Description
          nullable: true
        Category12Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 12 Value
          format: double
        Category13Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 13 Description
          nullable: true
        Category13Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 13 Value
          format: double
        Category14Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 14 Description
          nullable: true
        Category14Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 14 Value
          format: double
        Category15Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 15 Description
          nullable: true
        Category15Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 15 Value
          format: double
        Category16Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 16 Description
          nullable: true
        Category16Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 16 Value
          format: double
        Category17Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 17 Description
          nullable: true
        Category17Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 17 Value
          format: double
        Category18Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 18 Description
          nullable: true
        Category18Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 18 Value
          format: double
        Category19Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 19 Description
          nullable: true
        Category19Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 19 Value
          format: double
        Category20Desc:
          type: string
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 20 Description
          nullable: true
        Category20Value:
          type: number
          description: Only Applies to Devenir Trust Accounts. Portfolio Category 20 Value
          format: double
        HSAProductPartnerName:
          type: string
          description: Product Partner / HSA Banking Partner Name
        PortfolioBalance:
          type: number
          description: The total amount of the participant's investment account as of prior day close.
          format: double
        TotalHSABalance:
          type: number
          description: Total HSA Balance before preauth/hold balance
          format: double
        PendingTrades:
          type: number
          description: Pending Trades Amount
          format: double
        TotalAvailabletoSpend:
          type: number
          description: Total available for spending HSA Current Balance + Cash And Equivalents + PendingTrades
          format: double
        MinimumBalanceRqdinHSAAcct:
          type: number
          description: Minimum Balance the participant must maintain in their HSA cash balance - only amounts above this may be transferred to investments (subject to the minimum)
          format: double
        MinimumBalToInvestInTrustAcct:
          type: number
          description: Minimum Balance the participant must have in their cash has balance in order to invest in an investment account. This value is set at the HSA Bank Partner level
          format: double
        TotalAvailabletoInvest:
          type: number
          description: Total available for investing. Total available to Spend - Minimum balance required in HSA account
          format: double
        CurrentYearContributions:
          type: number
          description: Total current year HSA contribution amount for IRS reporting
          format: double
        CurrentYearTotContributions:
          type: number
          description: Total current year HSA contribution amount
          format: double
        CurrentYearRolloverContributions:
          type: number
          description: 'Current Year Rollover Contributions. Note: Rollover Contributions are non-resportable as Contributions for the 5498-SA.'
          format: double
        CurrentYearDistributions:
          type: number
          description: HSA Current Year Distributions
          format: double
        CurrentYearInterestPaid:
          type: number
          description: Current Year Interest Paid
          format: double
        PriorYearContributions:
          type: number
          description: Prior Year Contribution amount for IRS reporting
          format: double
        PriorYearRolloverContributions:
          type: number
          description: HSA Prior Year Rollover Contributions
          format: double
        PriorYearDistributions:
          type: number
          description: HSA Prior Year Distributions (1099-SA)
          format: double
        RemainingBalanceAmt:
          type: number
          description: Remaining Balance Amount -- no longer used
          format: double
        SpentAmt:
          type: number
          description: Spent Amount -- no longer used
          format: double
        ExternalAcctId:
          type: string
          description: HSA bank account number
        TrustAcctNum:
          type: string
          description: Investment account number
        YourContributionsYTD:
          type: number
          description: Accountholder Contributions YTD Total Contributions YTD - Employer Contributions YTD
          format: double
        EmployerContributionsYTD:
          type: number
          description: Employer Contributions YTD
          format: double
        TotalContributionsYTD:
          type: number
          description: Total Contributions YTD
          format: double
        EmployerPerPayPeriodAmt:
          type: number
          description: Amount the employer chose to deposit to the cardholder account each pay period.
          format: double
        EmployeePerPayPeriodAmt:
          type: number
          description: Amount employee elected to deposit to the account each pay period
          format: double
        YourPriorYearContributions:
          type: number
          description: Accountholder Prior Year Contributions Total Prior Year Contributions - Employer Prior Year Contributions
          format: double
        EmployerPriorYearContributions:
          type: number
          description: Employer prior year contributions
          format: double
        TotalPriorContributions:
          type: number
          description: Total prior year contributions
          format: double
        CurrYrSingleLimit:
          type: number
          description: HSA contribution Single Limit for the calendar
          format: double
        CurrYrFamilyLimit:
          type: number
          description: HSA contribution Family Limit for the calendar
          format: double
        CurrYrCatchUpContribution:
          type: number
          description: The Current Year IRS allowed amount for catch-up contributions.
          format: double
        PriorYrSingleLimit:
          type: number
          description: The IRS set limit for  Contributions for singles the prior tax year.
          format: double
        PriorYrFamilyLimit:
          type: number
          description: The IRS set limit for Contributions for Family plans in the the prior tax year.
          format: double
        PriorYrCatchUpContribution:
          type: number
          description: The IRS set limit for Catch Up Contributions for the prior tax year.
          format: double
        CurrentYear:
          type: integer
          description: The Current Tax Year for the account
          format: int32
        IsTransferBlocked:
          type: boolean
          description: Returns whether or not transfers to the investment account are blocked
        TransferBlockedExpDte:
          type: string
          description: Returns the date which investment transfers will no longer be blocked
          format: date-time
    BenSoft-Contracts-DataContracts-0822-Transaction-EmployeeActivityPage:
      type: object
      properties:
        PageNumber:
          type: integer
          description: The current page number of the results returned in the response.
          format: int32
        PageSize:
          type: integer
          description: The number of items returned per page in the response.
          format: int32
        TotalPages:
          type: integer
          description: The total number of pages available based on the total number of items and the specified page size.
          format: int32
        TotalCount:
          type: integer
          description: 'The total number of items available across all pages, regardless of the current page or page size.'
          format: int32
        Items:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.Transaction.EmployeeActivity'
    BenSoft.Contracts.DataContracts._0822.Transaction.EmployeeActivity:
      type: object
      properties:
        DepositDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.Transaction.DepositDetails'
        ReimbursementDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0822.Transaction.ReimbursementInfo'
          description: Reimbursement Details
        Amount:
          type: number
          description: Amount
          format: double
        Status:
          type: string
          description: Status
        Type:
          type: string
          description: 'A description of the transaction type. Valid values are FX Claim, Card Transaction, Manual Claim, Member Expense, TC claim, Member Claim, Deposit, HSA Transaction and Bill Pays'
        TypeCode:
          type: integer
          description: 'A numeric code that corresponds to the transaction type returned in the Type field. 1- FX CLAIM, 2- CARD TRANSACTION, 3- MANUAL CLAIM, 4- MEMBER EXPENSE, 5- TC CLAIM, 7- MEMBER CLAIM, 8- DEPOSIT, 9- HSA TRANSACTION, 10- HSA BILLPAY'
          format: int32
        ClaimId:
          type: string
          description: Claim Id
        Actions:
          type: integer
          description: 'This code identifies actions associated with transactions:- 1: Add Receipt, 2: Submit Claim, 4: Pay It Back and 8: Mark as Paid.'
          format: int32
        ServiceStartDate:
          type: string
          description: Service Start Date
          format: date-time
        ServiceEndDate:
          type: string
          description: Service End Date
          format: date-time
        Description:
          type: string
          description: Description related to the claim
        Claimant:
          type: string
          description: Claimant
        ReimbursementDate:
          type: string
          description: Reimbursement Date
          format: date-time
        ReimbursementMethod:
          type: string
          description: Reimbursement Method
        PaidToProvider:
          type: boolean
          description: Paid To Provider
        CheckNumber:
          type: string
          description: Check Number
        HasReceipts:
          type: boolean
          description: 'Has Receipts (this will be, true(1) or false(0))'
        Provider:
          type: string
          description: Provider
        BilledAmount:
          type: number
          description: Billed Amount
          format: double
        AllowedAmount:
          type: number
          description: Allowed Amount
          format: double
        CoveredAmount:
          type: number
          description: Covered Amount
          format: double
        ResponsibilityAmount:
          type: number
          description: Responsibility Amount
          format: double
        OutOfPocketAmount:
          type: number
          description: Out Of Pocket Amount
          format: double
        AccountsPaidAmount:
          type: number
          description: Accounts Paid Amount
          format: double
        OffsetAmount:
          type: number
          description: Offset Amount
          format: double
        RemainingResponsibilityAmount:
          type: number
          description: Remaining Responsibility Amount
          format: double
        ServiceCategoryCode:
          type: string
          description: Service Category Code
        ServiceCategoryName:
          type: string
          description: Service Category Name
        RenderingProvider:
          type: string
          description: Rendering Provider
        PatientName:
          type: string
          description: Patient Name
        PatientAccountNumber:
          type: string
          description: Patient Account Number
        TrackingNumber:
          type: string
          description: Tracking Number
        Date:
          type: string
          description: Date
          format: date-time
        StatusCode:
          type: integer
          description: Status Code
          format: int32
        TransactionKey:
          type: string
          description: Transaction Key
        SeqNumber:
          type: integer
          description: Sequence Number
          format: int32
        SettlementDate:
          type: string
          description: Settlement Date
        DeductibleAmount:
          type: number
          description: Deductible Amount
          format: double
        ProviderKey:
          type: integer
          description: Provider Key
          format: int32
        ProviderId:
          type: string
          description: Provider Id
        ClaimKey:
          type: integer
          description: Claim Key
          format: int64
        ExpenseKey:
          type: integer
          description: Expense Key
          format: int64
        DenialReason:
          type: string
          description: Denial Reason
        ExcludedReason:
          type: string
          description: Excluded Reason
        PendedReason:
          type: string
          description: Pended Reason
        PendedComment:
          type: string
          description: Pended Comment
        IsAcctEligForRepayment:
          type: boolean
          description: Indicates whether the account is eligible for repayment.
        StatusWithAmount:
          type: string
          description: Status With Amount
        DisplayStatus:
          type: string
          description: Display Status
        ReimburseKey:
          type: integer
          description: Represents a system generated identifier for the reimbursement which can be used to retrieve the reimbursement details in a separate request.
          format: int32
        ExpensesDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1018.ParticipantExpenseDetail'
          description: Expenses Details
        ReceiptsDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Transactions.ReceiptInfo'
          description: Receipt Info
        CardTransactionDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1020.Transaction.CardTransactionDetails'
        ClaimAdjudicationDetails:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Transaction.ClaimAdjudicationDetails'
        CustomDescription:
          type: string
          description: Custom Plan Description
        TaxYear:
          type: string
          description: Tax Year
        PreTaxAmt:
          type: number
          description: Pre Tax Amtount
          format: double
        PostTaxAmt:
          type: number
          description: Post Tax Amtount
          format: double
        RepaymentStatus:
          enum:
            - NotApplicable
            - NotPaid
            - Pending
            - Failed
            - Approved
          type: string
          description: Repayment Status
        BalanceDue:
          type: number
          description: Transaction balance due Amount
          format: double
        RepaymentInitiatedDate:
          type: string
          description: The date repayment was made.
          format: date-time
        AcctTypeCode:
          type: string
          description: Account Type Code
        AcctTypeClass:
          type: integer
          format: int32
        FlexAcctKey:
          type: integer
          description: Flex Account Key
          format: int32
        HSATransactionDetail:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0222.Transaction.HSATransactionDetail'
        SetlSeqNum:
          type: integer
          description: Settlement sequence number of the transaction
          format: int32
        TxnOverDistAmt:
          type: number
          description: The over distributed amount on the transaction
          format: double
        HSABillPayInfo:
          $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0522.Transaction.HSABillPayInfo'
        IlaCategoryDescription:
          type: string
          description: 'It will show the transaction''s multiple ILA categories with descriptions, separated by a delimiter character.'
      description: Employee Activity data contract
    BenSoft-Contracts-DataContracts-_1121-Transaction-FutureRecurringPaymentsArr:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._1121.Transaction.FutureRecurringPayments'
    BenSoft.Contracts.DataContracts._0921.ParticipantSearch:
      type: object
      properties:
        ExcludePIEmpr:
          type: boolean
          description: Send true to exclude employees under an employer in a Permanently Inactive status.  Send false to include employees under an employer in a Permanently Inactive status.
        EmprId:
          type: string
          description: 'Specify the unique Employer ID generated by WealthCare Admin if the employer is known, or use an empty string to search all employers'
        SearchBy:
          enum:
            - EmployeeId
            - FirstName
            - LastName
            - FirstLastName
            - SSN
            - CardNumber
            - EmailAddress
            - HealthId
            - PBMId
            - Address1
            - PhoneNumber
            - PPAccountNumber
            - AlternateId
            - CardProxyNumber
            - MobileNumber
          type: string
          description: 'Used with the SearchFor value. Specifies what type of data is sent in SearchFor. I.e., if a 3 is sent here, then the value sent in SearchFor will be compared to LastName values of employees in the system to determine what employees will be returned.'
        SearchFor:
          type: string
          description: Used with the SearchBy field.  This is the value actually being searched for.
        MaxRecords:
          type: integer
          description: 'The maximum number of records to include in the response. Minimum value is 1; maximum value is 999,999.'
          format: int32
        StartOrdinal:
          type: integer
          description: 'This can be used if searches are being completed in batches. Minimum value is 1; maximum value is 999,999. For example, if you want to only handle 25 results at a time, you would send 1 for this value on the first call (and 25 for MaxRecords), and if/when the next 25 are needed, send 26 for this value on the second call (and still send 25 for MaxRecords) in order to get results 26-50.'
          format: int32
      description: "<author>Pratheesh Aravindakshan</author>\r\n<date>Jun 16, 2021</date>\r\n<version>WC 21.09.00</version>"
    BenSoft.Contracts.DataContracts.Transaction.RepaymentBalanceDueAlert:
      type: object
      properties:
        BalanceDue:
          type: number
          description: Balance Due
          format: double
        IneligibleChargeBalanceMessage:
          type: string
          description: Ineligible Charge Balance Message
      description: Created for Issue#54889 - Online repayment of balance due
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.MobileMessageHistoryStatus:
      type: object
      properties:
        deliveryStatus:
          enum:
            - Hold
            - Approved
            - Denied
            - Sent
            - Undelivered
            - Failed
          type: string
    BenSoft.Contracts.DataContracts._1121.Transaction.FutureRecurringPayments:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmployerId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        ParticipantId:
          type: string
          description: Employee ID
        ClaimKey:
          type: integer
          description: Unique Key to identify the claim details.
          format: int64
        TaskScheduleKey:
          type: integer
          description: Unique Key to identify the Recurring Task Schedule.
          format: int32
        Claimant:
          type: string
          description: The family member for whom the claim applies
        Payee:
          type: string
          description: Name of the Payee.
        StartDate:
          type: string
          description: Start Date of the Recurring Schedule.
          format: date-time
        EndDate:
          type: string
          description: End Date of the Recurring Schedule.
          format: date-time
        Type:
          enum:
            - None
            - HSAOnlinePayment
            - RecurringClaim
            - RecurringExpenses
          type: string
          description: Recurring Claim Type.
        FrequencyTypeCode:
          enum:
            - All
            - None
            - Daily
            - Weekly
            - BiMonthly
            - Monthly
            - Quarterly
            - Yearly
            - SemiMonthly
            - BiWeekly
            - Once
          type: string
          description: Frequency Type Code.
        TxnAmt:
          type: number
          description: Txn Amount.
          format: double
        TotalNumRecurrences:
          type: integer
          description: Total number of Recurrences.
          format: int32
        AcctTypeCode:
          type: string
          description: Account Type Code.
        AcctTypeDesc:
          type: string
          description: Custom Description.
        SCC:
          type: string
          description: Service Category Code.
        RemainingNumRecurrences:
          type: integer
          description: Remaining number of Recurrences.
          format: int32
        NextRunDate:
          type: string
          description: Next Run Date of the Recurrence.
          format: date-time
      description: Future Recurring Payments
    ServicesDocumentsHSAStatementsTpaIdEmployerIdParticipantIdPdfGet200Applicati:
      type: string
      format: byte
    ServicesDocumentsHSAStatementsReassocTpaIdEmployerIdParticipantIdReassociate:
      type: string
      format: byte
    ServicesDocumentsHSATaxFormsTpaIdEmployerIdParticipantIdTaxFormPdfGet200Appl:
      type: string
      format: byte
    ServicesDocumentsHSATaxFormsReassocTpaIdEmployerIdParticipantIdPdfGet200Appl:
      type: string
      format: byte
    ServicesParticipantEmployeeEnrollmentTpaIdEmployerIdParticipantIdDirectDepos:
      type: string
    BenSoft.Contracts.DataContracts.mobile.Business.Transactions.ParticipantAccountsInvestments:
      type: object
      properties:
        FlexAcctId:
          type: string
          description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, i.e., "0001699940".'
        InvestmentPartner:
          enum:
            - None
            - WealthCareInvestment
            - Devenir
          type: string
          description: 'Indicates which investment solution the account is using. Valid values are: None, WealthCareInvestment, and Devenir'
        IsInvAcctCreated:
          type: boolean
          description: Indicates whether the investment account is active.
    BenSoft.Contracts.DataContracts._0423.EmployeeDetails:
      type: object
      properties:
        LanguagePreference:
          type: string
        CarrierName:
          type: string
          description: The name of the employee’s medical insurance carrier.
        MedicalDed:
          type: number
          description: The annual deductible for this employee’s medical insurance.
          format: double
        MedicalDedPtd:
          type: number
          description: The amount the employee has paid toward his deductible in the current plan year.
          format: double
        BankAcctValStatus:
          type: integer
          description: "If Direct Deposit Bank Account doesn't exist for the Employee, then 0 will be returned.\r\nIf the Direct Deposit Bank Account Validation feature is Not Enabled for the TPA and a Direct Deposit Bank Account exists, then 2 will be returned.\r\nIf the Direct Deposit Bank Account Validation feature is Enabled for the TPA and a Direct Deposit Bank Account exists, then a value ranging from 1 to 7 will be returned."
          format: int32
        BankAcctValStatusDesc:
          type: string
          description: "If Direct Deposit Bank Account doesn't exist for the Employee, then status description will be blank.\r\nIf the Direct Deposit Bank Account Validation feature is Not Enabled for the TPA and a Direct Deposit Bank Account exists, then Active will be returned.\r\nIf the Direct Deposit Bank Account Validation feature is Enabled for the TPA and a Direct Deposit Bank Account exists, then the status description will be returned as follows:\r\n1 - New;\r\n2 - Active;\r\n3 - Temporarily Inactive;\r\n4 - Permanently Inactive;\r\n5 - Pending Validation;\r\n6 - Validation Required;\r\n7 - Validation Failed"
        Prefix:
          type: string
          description: 'Title for employee, such as Mr., Mrs., Ms., Dr., or Rev'
        LastName:
          type: string
          description: Employee’s last name.
        FirstName:
          type: string
          description: Employee’s first name.
        MiddleInitial:
          type: string
          description: Employee’s middle initial.
        Phone:
          type: string
          description: 'Employee’s phone number, including area code.'
        MobileNumber:
          type: string
          description: Employee’s mobile phone number including area code.
        AddressLine1:
          type: string
          description: First line of the employee’s mailing address.
        AddressLine2:
          type: string
          description: Second line of the employee’s mailing address.
        City:
          type: string
          description: City associated with the employee’s mailing address.
        State:
          type: string
          description: Two-character state code associated with the employee’s mailing address.
        Zip:
          type: string
          description: ZIP code associated with the employee’s mailing address.
        Country:
          type: string
          description: 'Country associated with the employee’s mailing address, usually US.'
        ReimbursementMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
          description: Reimbursement Method for reimbursing an employee or dependent.
        Email:
          type: string
          description: Employee’s email address.
        UserDefinedField:
          type: string
          description: You can define this field. WCA does not use it.
        EmployeeStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
          description: Activity status for the employee.
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
        MaritalStatus:
          enum:
            - None
            - Single
            - Married
            - Separated
            - Widowed
            - Divorced
          type: string
          description: Marital status of the employee.
        ShippingAddressLine1:
          type: string
          description: First line of the employee’s shipping address.
        ShippingAddressLine2:
          type: string
          description: Second line of the employee’s shipping address.
        ShippingAddressCity:
          type: string
          description: City associated with an employee’s shipping address.
        ShippingAddressState:
          type: string
          description: The 2-character state code associated with the employee’s shipping address.
        ShippingAddressZip:
          type: string
          description: ZIP code associated with the employee’s shipping address.
        ShippingAddressCountry:
          type: string
          description: Country associated with the employee’s shipping address.
        BirthDate:
          type: string
          description: Employee's Date of birth.
        BankRoutingNumber:
          type: string
          description: Bank Routing number of employee direct deposit account.
        BankAccountNumber:
          type: string
          description: Employee's bank account number for direct deposit reimbursements.
        BankAccountTypeCode:
          enum:
            - None
            - Checking
            - Savings
            - GeneralLedger
          type: string
          description: Employee's bank account type.
        BankName:
          type: string
          description: Bank Name of employee direct deposit account.
        Remarks:
          type: string
          description: "Any comments about the employee.\r\nNote: This is field is for information only."
        EmployeeSSN:
          type: string
          description: Employee’s social security number.
        HealthPlanID:
          type: string
          description: "An assigned ID for the employee’s health plan.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        DentalID:
          type: string
          description: "An assigned ID for the employee’s dental plan.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        VisionID:
          type: string
          description: "An assigned ID for the employee’s vision plan.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        PBMID:
          type: string
          description: "An assigned ID for the pharmacy benefits management (PBM) organization handling pharmaceutical benefits for employees.\r\nNote: You can use this field for TPS matching but cannot use it to search for an employee."
        EligibilityDate:
          type: string
          description: Date when the employee was hired.
        LastUpdated:
          type: string
          description: Last date the employee demographic data was modified.
          format: date-time
        CardNumber:
          type: string
          description: Benefits Card number of the employee.
        TerminationDate:
          type: string
          description: Employee's Date of Termination.
        Division:
          type: string
          description: 'Division to which employee is assigned, if division functionality is in use.'
        EmployerName:
          type: string
          description: Name of employer for whom employee works.
        HealthcareCoverageDefault:
          type: string
          description: "Coverage ID that is associated with an employee’s primary Healthcare Coverage.\r\nThe employee will be linked to all healthcare coverage\r\ntypes—Medical, Pharmacy, Dental, Hospital, and Vision and/or Hearing copays—associated with this Healthcare Coverage option."
        MedicalCoverage:
          type: string
          description: "Coverage ID that is associated with the Medical\r\nCoverage type and links the employee to the copays for this coverage type."
        PharmacyCoverage:
          type: string
          description: "Coverage ID that is associated with the Pharmacy\r\nCoverage type and links the employee to the copays for this coverage type."
        DentalCoverage:
          type: string
          description: "Coverage ID that is associated with the Dental Coverage type and links the employee to the copays for this coverage type.\r\nNote 1: Providing a Coverage ID for Dental Coverage takes priority over the default Healthcare Coverage for this type.\r\nNote 2: The Coverage ID is required in order for employee-level co-pay amounts to be associated with this particular coverage."
        HospitalCoverage:
          type: string
          description: "Coverage ID that is associated with the Hospital\r\nCoverage type and links the employee to the copays for this coverage type."
        VisionCoverage:
          type: string
          description: "Coverage ID that is associated with the Vision\r\nCoverage type and links the employee to the copays for this coverage type."
        HearingCoverage:
          type: string
          description: "Coverage ID that is associated with the Hearing.\r\nCoverage type and links the employee to the copays for this coverage type."
        HighDeductableHealthPlanEligible:
          type: boolean
          description: "Flag indicating whether the employee is eligible for an High Deductible Health Plan.\r\n0 = No\r\n1 = Yes"
        DriverLicenceNumber:
          type: string
          description: Employee Driver’s License Number.
        MotherMaidenName:
          type: string
          description: Employee's mother’s maiden name.
        MedicareBeneficiary:
          enum:
            - None
            - PrimaryBeneficiary
            - SecondaryBeneficiary
          type: string
          description: Indicates participant as a Medicare beneficiary.
        MedicareID:
          type: string
          description: This value is the active covered individual’s/beneficiary’s health insurance claim number.
        ProcessingNotes:
          type: string
          description: This is the processing notes entered by the administrator for the specified individual.
        PersonCode:
          type: string
          description: "This code is used to identify specific individuals on a policy for Medicare Reporting.\r\nThe values are established by the insurer. May also be known as a Dependent Code."
        EndStageRenalDisease:
          type: boolean
          description: "Indicates whether the participant has ESRD for Medicare Reporting.\r\n0 = No, this person does not have ESRD\r\n1 = Yes, this person has ESRD"
        CardReimbAvail:
          type: boolean
          description: 'If the Employer is eligible for Card and has got a CRA Plan, then True, Otherwise False.'
        ReimbursementMethodList:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementMethodType'
          description: List of available reimbursement methods for employee to choose.
    BenSoft.Contracts.DataContracts.Mobile.Business.Employee.ReimbursementMethodType:
      type: object
      properties:
        ReimbursementMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
        Description:
          type: string
    BenSoft.Contracts.DataContracts._0723.EmployeeDetails:
      type: object
      properties:
        Prefix:
          type: string
        LastName:
          type: string
        FirstName:
          type: string
        MiddleInitial:
          type: string
        Phone:
          type: string
        MobileNumber:
          type: string
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        City:
          type: string
        State:
          type: string
        Zip:
          type: string
        Country:
          type: string
        ReimbursementMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
        Email:
          type: string
        UserDefinedField:
          type: string
        EmployeeStatus:
          enum:
            - All
            - New
            - Active
            - TempInactive
            - PermInactive
            - Terminated
            - Enrollment
          type: string
        Gender:
          enum:
            - None
            - Male
            - Female
          type: string
        MaritalStatus:
          enum:
            - None
            - Single
            - Married
            - Separated
            - Widowed
            - Divorced
          type: string
        ShippingAddressLine1:
          type: string
        ShippingAddressLine2:
          type: string
        ShippingAddressCity:
          type: string
        ShippingAddressState:
          type: string
        ShippingAddressZip:
          type: string
        ShippingAddressCountry:
          type: string
        BirthDate:
          type: string
        BankAccountTypeCode:
          enum:
            - None
            - Checking
            - Savings
            - GeneralLedger
          type: string
        BankName:
          type: string
        Remarks:
          type: string
        EmployeeSSN:
          type: string
        HealthPlanID:
          type: string
        DentalID:
          type: string
        VisionID:
          type: string
        PBMID:
          type: string
        EligibilityDate:
          type: string
        LastUpdated:
          type: string
          format: date-time
        CardNumber:
          type: string
        TerminationDate:
          type: string
        Division:
          type: string
        EmployerName:
          type: string
        HealthcareCoverageDefault:
          type: string
        MedicalCoverage:
          type: string
        PharmacyCoverage:
          type: string
        DentalCoverage:
          type: string
        HospitalCoverage:
          type: string
        VisionCoverage:
          type: string
        HearingCoverage:
          type: string
        HighDeductableHealthPlanEligible:
          type: boolean
        DriverLicenceNumber:
          type: string
        MotherMaidenName:
          type: string
        MedicareBeneficiary:
          enum:
            - None
            - PrimaryBeneficiary
            - SecondaryBeneficiary
          type: string
        MedicareID:
          type: string
        ProcessingNotes:
          type: string
        PersonCode:
          type: string
        EndStageRenalDisease:
          type: boolean
        CardReimbAvail:
          type: boolean
        ReimbursementMethodList:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0723.ReimbursementMethodType'
        BankAcctValStatus:
          type: integer
          format: int32
        BankAcctValStatusDesc:
          type: string
        LanguagePreference:
          type: string
        BankAccountNumberLastDigits:
          type: string
        BankRoutingNumberLastDigits:
          type: string
    BenSoft.Contracts.DataContracts._0723.ReimbursementMethodType:
      type: object
      properties:
        ReimbursementMethod:
          enum:
            - Undefined
            - None
            - Check
            - DirectDeposit
            - ExternalCheck
            - ExternalDirectDeposit
            - Card
            - Payroll
          type: string
        Description:
          type: string
    BenSoft.Contracts.DataContracts._0424.ExternalBankAccount:
      type: object
      properties:
        TpaId:
          type: string
          description: Unique identifier assigned to the administrator
        ExtBankAcctKey:
          type: integer
          description: Unique key identifier for external bank account
          format: int64
        BankAccountName:
          type: string
          description: "Name associated with the logical bank account\r\nMust be unique within the administrator"
        BankAcctNickName:
          type: string
          description: Name given to external bank account to easily identify by
        BankAcctTypeCdeEnumeration:
          type: integer
          description: "Defaults to 1 if left blank\r\n(None = 0, Checking = 1, Savings = 2, General Ledger = 3)"
          format: int32
        BankAccountNumber:
          type: string
          description: "Bank account number\r\nRequired if account usage includes ACH"
        BankRoutingNumber:
          type: string
          description: "Bank account routing number\r\nRequired if account usage includes ACH"
        BankAccountStatusCdeEnumeration:
          type: integer
          description: '(New = 0, Confirmed = 1, PendingValidation = 2, ValidationRequired = 3, FixAccount = 4)'
          format: int32
        ConfirmDte:
          type: string
          description: Date the employee provided the microtransaction amounts to confirm the account is valid
          format: date-time
        DataPartnerId:
          type: string
          description: Unique identifier for the Product Partner
        UseParticipantBankAcct:
          type: boolean
          description: Flag to identify whether the participant’s deposit bank account information should be used for adding a new external bank account. Set to true (1) if using the participant's existing bank account. Set to false (0) when adding a new external bank account from scratch.
    BenSoft.Contracts.DataContracts._0424.ReimbursementSummary:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        EmprId:
          type: string
          description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
        EmpeKey:
          type: integer
          description: 'Unique identifier key for the employee, generated by WCA when the employee was created in the system.'
          format: int32
        EmployeeFirstName:
          type: string
          description: Employee's first name.
        EmployeeMiddleInitial:
          type: string
          description: Employee's middle name.
        EmployeeLastName:
          type: string
          description: Employee's last name.
        ReimburseKey:
          type: integer
          description: Represents a system generated identifier for the reimbursement which can be used to retrieve the reimbursement details in a separate request.
          format: int32
        ReimburseDate:
          type: string
          description: Date of reimbursement.
          format: date-time
        TotalReimburseAmount:
          type: number
          description: Total amount reimbursed.
          format: double
        CheckNumber:
          type: string
          description: Check number associated with this reimbursement.
        TrackingNumber:
          type: string
          description: Unique identifier to track this reimbursement.
        VoidDate:
          type: string
          description: The date that the reimbursement was voided.
          format: date-time
        StopPaymentDate:
          type: string
          description: The date a stop payment request for a check was issued to the bank.
          format: date-time
        ACHDate:
          type: string
          description: The date that an ACH payment was initiated.
          format: date-time
        PaymentId:
          type: string
          description: 'Represents the draft # issued by our Integrated Payment vendor.'
        PayoutMethod:
          type: string
          description: 'Represents the payment method used by the participant or our Integrated Payment vendor. Valid methods include Pending, Check, Direct Deposit, External Check, External Direct Deposit, Card, Payroll, ePay-ACH, ePay-Virtual Card, and ePay-eCheck.'
        CheckClearedDate:
          type: string
          description: The date that the reimbursent check was put into the bank account.
        SetlDate:
          type: string
          description: The date that the reimbursement was settled on.
    BenSoft.Rest.Mobile.Clients.SmsServiceClient.CampaignViewModel:
      type: object
      properties:
        CampaignId:
          type: string
          description: 'The SMS campaign ID, generated when the campaign was created.'
        AdministratorId:
          type: string
          description: The ID of the administrator associated with this campaign.
        Name:
          type: string
          description: The name of this SMS campaign.
        PhoneNumber:
          type: string
          description: The toll free number provisioned for this SMS campaign where outbound SMS messages are sent from.
        Status:
          type: string
          description: The status of this campaign. Valid statuses are Pending or Active.
        PreConversionNotificationDate:
          type: string
          description: The date a preconversion message for SMS gateway conversion was sent for this campaign.
          format: date-time
        PostConversionNotificationDate:
          type: string
          description: The date a postconversion message for SMS gateway conversion was sent for this campaign.
          format: date-time
        Gateway:
          type: string
          description: The SMS gateway currently serving this campaign.
        DateCreated:
          type: string
          description: The date this campaign was created.
          format: date-time
        DateUpdated:
          type: string
          description: The date this campaign was most recently updated.
          format: date-time
    BenSoft.Contracts.DataContracts.Business.Admin.AdministratorFeatures:
      type: object
      properties:
        Features:
          type: array
          items:
            type: string
          description: Features available for this administrator
    BenSoft-Contracts-DataContracts-Business-DataPartner-DataPartnerArray:
      type: array
      items:
        $ref: '#/components/schemas/BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartner'
    BenSoft.Contracts.DataContracts.Business.DataPartner.DataPartner:
      type: object
      properties:
        dataPartnerId:
          type: string
          description: A 3-character string unique identifier used to identify Data Partner.
        name:
          type: string
          description: Partner name
    BenSoft.Contracts.DataContracts._1024.EmployeeFeatures:
      type: object
      properties:
        ILAEnabledOnActivePlan:
          type: boolean
      description: Features available for this employee
    BenSoft.Contracts.DataContracts._0725.HsaInterestPlanStableValueProvider:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        FlexAcctId:
          type: string
          description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, i.e., "0001699940".'
        ProviderName:
          type: string
          description: The name of the Interest Rate provider offering the HSA account or service.
      description: Contains information about the high yield HSA provider associated with the participant's account.
      nullable: true
    BenSoft.Contracts.DataContracts._0725.HsaInterestPlanDisclosures:
      type: object
      properties:
        Disclosures:
          type: array
          items:
            $ref: '#/components/schemas/BenSoft.Contracts.DataContracts._0725.Disclosures'
      description: 'Contains the disclosures related to the HSA interest plan, providing essential information for compliance and participant awareness.'
    BenSoft.Contracts.DataContracts._0725.Disclosures:
      type: object
      properties:
        TpaId:
          type: string
          description: A unique identifier used to identify your admin instance. This value was system generated with the admin instance was created.
        FlexAcctId:
          type: string
          description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, i.e., "0001699940".'
        DisclosureDescription:
          type: string
          description: A short description of the content or purpose of the disclosure.
        DisclosureUrl:
          type: string
          description: A direct URL to view or download the full disclosure document.
      description: Represents the legal or informational disclosure tied to the high yield HSA provider for compliance and participant awareness
      nullable: true
    BenSoft.Contracts.DataContracts.Mobile.Business.Employer.EmployerDigitalCardConfig:
      type: object
      properties:
        CardIssuanceType:
          enum:
            - FlexCard
            - FlexCardOptional
            - NoCard
            - ExternalCardVendor
            - DigitalOnly
            - DigitalWithMailOptional
          type: string
          description: Specifies the type of card issuance selected by the employer.
        ProductId:
          type: string
          description: The ProductID for the digital card associated with the employer.
        ImageContent:
          type: string
          description: The content of the image in byte format.
          format: byte
    BenSoft.Contracts.DataContracts.Employee.CardUpdateRequest:
      type: object
      properties:
        CardIssueCode:
          type: string
          description: 'Specifies the type of card issuance selected by the employee in string format. The Card Issue Code -  DoNotIssue, Issue, Conditional'
        CardProxyNumber:
          type: string
          description: The proxy number of the card
        CardStatusCode:
          type: string
          description: 'Specifies the type of card status issue selected by the employee in string format. The Card status Code - New, Active, TempInactive, PermInactive, LostStolen'
  parameters:
    tpaIdPath:
      name: tpaId
      in: path
      description: A unique identifier used to identify your admin instance. This value is system generated when the admin instance was created.
      required: true
      schema:
        type: string
    employerIdPath:
      name: employerId
      in: path
      description: 'Unique identifier for the employer. Note: When the employer was created, WealthCare Admin assigned the 3-character prefix; you assigned the remaining characters.'
      required: true
      schema:
        type: string
    participantIdPath:
      name: participantId
      in: path
      description: Unique identifier for the participant whose features are being queried.
      required: true
      schema:
        type: string
    flexAcctIdPath:
      name: flexAcctId
      in: path
      description: 'A 10-character string representing an internal key assigned to a benefit account in the WCA system, used to uniquely identify the account. This value is left-padded with 0s, i.e., "0001699940".'
      required: true
      schema:
        type: string
    decryptQuery:
      name: decrypt
      in: query
      description: Indicate if the URI parameters are encrypted or not. Use 1 for encrypted and 0 for decrypted; defaults to 0 if not specified.
      schema:
        type: integer
        format: int32
    userPath:
      name: user
      in: path
      description: User name
      required: true
      schema:
        type: string
    dataPartnerIdPath:
      name: dataPartnerId
      in: path
      description: Data Partner Id
      required: true
      schema:
        type: string
    phoneNumber:
      name: phoneNumber
      in: path
      description: A participant phone number
      required: true
      schema:
        type: string
tags:
  - name: Administrator
    description: Administrator
  - name: Challenge
    description: Challenge
  - name: CommonCodeTier
    description: Common Code Tier
  - name: Communications
    description: Communications
  - name: DataPartner
    description: Data Partner
  - name: DevenirSSO
    description: Devenir Single Sign-On
  - name: DocumentManagement
    description: Document Management
  - name: Drugs
    description: Drugs
  - name: Employer
    description: Employer
  - name: EmployerAccount
    description: Employer Account
  - name: EmployerTransaction
    description: Employer Transaction
  - name: Enrollment
    description: Enrollment
  - name: HandShake
    description: HandShake
  - name: HSAInvestment
    description: HSA Investment
  - name: HSAStatements
    description: HSA Statements
  - name: HSATaxForms
    description: HSA Tax Forms
  - name: InnoPartner
    description: InnoPartner
  - name: Locations
    description: Locations
  - name: Logon
    description: Logon
  - name: MobilePay
    description: Mobile Pay
  - name: ParticipantAccount
    description: Participant Account
  - name: ParticipantCard
    description: Participant Card
  - name: ParticipantClaimReceipts
    description: Participant Claim Receipts
  - name: ParticipantClaims
    description: Participant Claims
  - name: ParticipantCommunication
    description: Participant Communication
  - name: ParticipantDependent
    description: Participant Dependent
  - name: ParticipantDocument
    description: Participant Document
  - name: ParticipantEmployee
    description: Participant Employee
  - name: ParticipantExpenses
    description: Participant Expenses
  - name: ParticipantHsa
    description: Participant Hsa
  - name: ParticipantReimbursements
    description: Participant Reimbursements
  - name: PayProvider
    description: Pay Provider
  - name: Pharmacies
    description: Pharmacies
  - name: PortalInfo
    description: Portal Info
  - name: Product
    description: Product
  - name: Providers
    description: Providers
  - name: Qwasi
    description: Qwasi
  - name: Registration
    description: Registration
  - name: Repayment
    description: Repayment
  - name: SecureLogon
    description: Secure Logon
  - name: Transactions
    description: Transactions
  - name: User
    description: User
  - name: Userinfo
    description: User Info